
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001d8  00800100  00002500  00002594  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002500  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004d  008002d8  008002d8  0000276c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000276c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000027c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  00002804  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000243d  00000000  00000000  00002a1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f03  00000000  00000000  00004e59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001602  00000000  00000000  00005d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000648  00000000  00000000  00007360  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000955  00000000  00000000  000079a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000132b  00000000  00000000  000082fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00009628  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__ctors_end>
       4:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
       8:	0c 94 25 05 	jmp	0xa4a	; 0xa4a <__vector_2>
       c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      10:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      14:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      18:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      1c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      20:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      24:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      28:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      2c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      30:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      34:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      38:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      3c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_15>
      40:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      44:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      48:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      4c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      50:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      54:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      58:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      5c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      60:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      64:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      68:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      6c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      70:	2b 08       	sbc	r2, r11
      72:	32 08       	sbc	r3, r2
      74:	39 08       	sbc	r3, r9
      76:	40 08       	sbc	r4, r0
      78:	47 08       	sbc	r4, r7
      7a:	4e 08       	sbc	r4, r14
      7c:	55 08       	sbc	r5, r5
      7e:	1b 09       	sbc	r17, r11
      80:	22 09       	sbc	r18, r2
      82:	29 09       	sbc	r18, r9
      84:	30 09       	sbc	r19, r0
      86:	37 09       	sbc	r19, r7
      88:	3e 09       	sbc	r19, r14
      8a:	45 09       	sbc	r20, r5
      8c:	0b 0a       	sbc	r0, r27
      8e:	12 0a       	sbc	r1, r18
      90:	19 0a       	sbc	r1, r25
      92:	20 0a       	sbc	r2, r16
      94:	27 0a       	sbc	r2, r23
      96:	2e 0a       	sbc	r2, r30
      98:	35 0a       	sbc	r3, r21
      9a:	0f 0b       	sbc	r16, r31
      9c:	29 0b       	sbc	r18, r25
      9e:	43 0b       	sbc	r20, r19
      a0:	5c 0b       	sbc	r21, r28
      a2:	63 0b       	sbc	r22, r19
      a4:	6a 0b       	sbc	r22, r26
      a6:	71 0b       	sbc	r23, r17

000000a8 <__trampolines_end>:
	...
      b0:	00 06       	cpc	r0, r16
      b2:	5f 5f       	subi	r21, 0xFF	; 255
      b4:	06 00       	.word	0x0006	; ????
      b6:	00 00       	nop
      b8:	00 07       	cpc	r16, r16
      ba:	07 00       	.word	0x0007	; ????
      bc:	07 07       	cpc	r16, r23
      be:	00 00       	nop
      c0:	14 7f       	andi	r17, 0xF4	; 244
      c2:	7f 14       	cp	r7, r15
      c4:	7f 7f       	andi	r23, 0xFF	; 255
      c6:	14 00       	.word	0x0014	; ????
      c8:	24 2e       	mov	r2, r20
      ca:	6b 6b       	ori	r22, 0xBB	; 187
      cc:	3a 12       	cpse	r3, r26
      ce:	00 00       	nop
      d0:	46 66       	ori	r20, 0x66	; 102
      d2:	30 18       	sub	r3, r0
      d4:	0c 66       	ori	r16, 0x6C	; 108
      d6:	62 00       	.word	0x0062	; ????
      d8:	30 7a       	andi	r19, 0xA0	; 160
      da:	4f 5d       	subi	r20, 0xDF	; 223
      dc:	37 7a       	andi	r19, 0xA7	; 167
      de:	48 00       	.word	0x0048	; ????
      e0:	04 07       	cpc	r16, r20
      e2:	03 00       	.word	0x0003	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	00 1c       	adc	r0, r0
      ea:	3e 63       	ori	r19, 0x3E	; 62
      ec:	41 00       	.word	0x0041	; ????
      ee:	00 00       	nop
      f0:	00 41       	sbci	r16, 0x10	; 16
      f2:	63 3e       	cpi	r22, 0xE3	; 227
      f4:	1c 00       	.word	0x001c	; ????
      f6:	00 00       	nop
      f8:	08 2a       	or	r0, r24
      fa:	3e 1c       	adc	r3, r14
      fc:	1c 3e       	cpi	r17, 0xEC	; 236
      fe:	2a 08       	sbc	r2, r10
     100:	08 08       	sbc	r0, r8
     102:	3e 3e       	cpi	r19, 0xEE	; 238
     104:	08 08       	sbc	r0, r8
     106:	00 00       	nop
     108:	00 a0       	ldd	r0, Z+32	; 0x20
     10a:	e0 60       	ori	r30, 0x00	; 0
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	08 08       	sbc	r0, r8
     112:	08 08       	sbc	r0, r8
     114:	08 08       	sbc	r0, r8
     116:	00 00       	nop
     118:	00 00       	nop
     11a:	60 60       	ori	r22, 0x00	; 0
     11c:	00 00       	nop
     11e:	00 00       	nop
     120:	60 30       	cpi	r22, 0x00	; 0
     122:	18 0c       	add	r1, r8
     124:	06 03       	mulsu	r16, r22
     126:	01 00       	.word	0x0001	; ????
     128:	3e 7f       	andi	r19, 0xFE	; 254
     12a:	59 4d       	sbci	r21, 0xD9	; 217
     12c:	7f 3e       	cpi	r23, 0xEF	; 239
     12e:	00 00       	nop
     130:	42 42       	sbci	r20, 0x22	; 34
     132:	7f 7f       	andi	r23, 0xFF	; 255
     134:	40 40       	sbci	r20, 0x00	; 0
     136:	00 00       	nop
     138:	62 73       	andi	r22, 0x32	; 50
     13a:	59 49       	sbci	r21, 0x99	; 153
     13c:	6f 66       	ori	r22, 0x6F	; 111
     13e:	00 00       	nop
     140:	22 63       	ori	r18, 0x32	; 50
     142:	49 49       	sbci	r20, 0x99	; 153
     144:	7f 36       	cpi	r23, 0x6F	; 111
     146:	00 00       	nop
     148:	18 1c       	adc	r1, r8
     14a:	16 13       	cpse	r17, r22
     14c:	7f 7f       	andi	r23, 0xFF	; 255
     14e:	10 00       	.word	0x0010	; ????
     150:	27 67       	ori	r18, 0x77	; 119
     152:	45 45       	sbci	r20, 0x55	; 85
     154:	7d 39       	cpi	r23, 0x9D	; 157
     156:	00 00       	nop
     158:	3c 7e       	andi	r19, 0xEC	; 236
     15a:	4b 49       	sbci	r20, 0x9B	; 155
     15c:	79 30       	cpi	r23, 0x09	; 9
     15e:	00 00       	nop
     160:	03 63       	ori	r16, 0x33	; 51
     162:	71 19       	sub	r23, r1
     164:	0f 07       	cpc	r16, r31
     166:	00 00       	nop
     168:	36 7f       	andi	r19, 0xF6	; 246
     16a:	49 49       	sbci	r20, 0x99	; 153
     16c:	7f 36       	cpi	r23, 0x6F	; 111
     16e:	00 00       	nop
     170:	06 4f       	sbci	r16, 0xF6	; 246
     172:	49 69       	ori	r20, 0x99	; 153
     174:	3f 1e       	adc	r3, r31
     176:	00 00       	nop
     178:	00 00       	nop
     17a:	6c 6c       	ori	r22, 0xCC	; 204
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	00 a0       	ldd	r0, Z+32	; 0x20
     182:	ec 6c       	ori	r30, 0xCC	; 204
     184:	00 00       	nop
     186:	00 00       	nop
     188:	08 1c       	adc	r0, r8
     18a:	36 63       	ori	r19, 0x36	; 54
     18c:	41 00       	.word	0x0041	; ????
     18e:	00 00       	nop
     190:	14 14       	cp	r1, r4
     192:	14 14       	cp	r1, r4
     194:	14 14       	cp	r1, r4
     196:	00 00       	nop
     198:	00 41       	sbci	r16, 0x10	; 16
     19a:	63 36       	cpi	r22, 0x63	; 99
     19c:	1c 08       	sbc	r1, r12
     19e:	00 00       	nop
     1a0:	02 03       	mulsu	r16, r18
     1a2:	51 59       	subi	r21, 0x91	; 145
     1a4:	0f 06       	cpc	r0, r31
     1a6:	00 00       	nop
     1a8:	3e 7f       	andi	r19, 0xFE	; 254
     1aa:	41 5d       	subi	r20, 0xD1	; 209
     1ac:	5d 1f       	adc	r21, r29
     1ae:	1e 00       	.word	0x001e	; ????
     1b0:	7c 7e       	andi	r23, 0xEC	; 236
     1b2:	13 13       	cpse	r17, r19
     1b4:	7e 7c       	andi	r23, 0xCE	; 206
     1b6:	00 00       	nop
     1b8:	41 7f       	andi	r20, 0xF1	; 241
     1ba:	7f 49       	sbci	r23, 0x9F	; 159
     1bc:	49 7f       	andi	r20, 0xF9	; 249
     1be:	36 00       	.word	0x0036	; ????
     1c0:	1c 3e       	cpi	r17, 0xEC	; 236
     1c2:	63 41       	sbci	r22, 0x13	; 19
     1c4:	41 63       	ori	r20, 0x31	; 49
     1c6:	22 00       	.word	0x0022	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 41       	sbci	r23, 0x1F	; 31
     1cc:	63 7f       	andi	r22, 0xF3	; 243
     1ce:	1c 00       	.word	0x001c	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 49       	sbci	r23, 0x9F	; 159
     1d4:	5d 41       	sbci	r21, 0x1D	; 29
     1d6:	63 00       	.word	0x0063	; ????
     1d8:	41 7f       	andi	r20, 0xF1	; 241
     1da:	7f 49       	sbci	r23, 0x9F	; 159
     1dc:	1d 01       	movw	r2, r26
     1de:	03 00       	.word	0x0003	; ????
     1e0:	1c 3e       	cpi	r17, 0xEC	; 236
     1e2:	63 41       	sbci	r22, 0x13	; 19
     1e4:	51 73       	andi	r21, 0x31	; 49
     1e6:	72 00       	.word	0x0072	; ????
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	08 08       	sbc	r0, r8
     1ec:	7f 7f       	andi	r23, 0xFF	; 255
     1ee:	00 00       	nop
     1f0:	00 41       	sbci	r16, 0x10	; 16
     1f2:	7f 7f       	andi	r23, 0xFF	; 255
     1f4:	41 00       	.word	0x0041	; ????
     1f6:	00 00       	nop
     1f8:	30 70       	andi	r19, 0x00	; 0
     1fa:	40 41       	sbci	r20, 0x10	; 16
     1fc:	7f 3f       	cpi	r23, 0xFF	; 255
     1fe:	01 00       	.word	0x0001	; ????
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 08       	sbc	r7, r15
     204:	1c 77       	andi	r17, 0x7C	; 124
     206:	63 00       	.word	0x0063	; ????
     208:	41 7f       	andi	r20, 0xF1	; 241
     20a:	7f 41       	sbci	r23, 0x1F	; 31
     20c:	40 60       	ori	r20, 0x00	; 0
     20e:	70 00       	.word	0x0070	; ????
     210:	7f 7f       	andi	r23, 0xFF	; 255
     212:	06 0c       	add	r0, r6
     214:	06 7f       	andi	r16, 0xF6	; 246
     216:	7f 00       	.word	0x007f	; ????
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	06 0c       	add	r0, r6
     21c:	18 7f       	andi	r17, 0xF8	; 248
     21e:	7f 00       	.word	0x007f	; ????
     220:	1c 3e       	cpi	r17, 0xEC	; 236
     222:	63 41       	sbci	r22, 0x13	; 19
     224:	63 3e       	cpi	r22, 0xE3	; 227
     226:	1c 00       	.word	0x001c	; ????
     228:	41 7f       	andi	r20, 0xF1	; 241
     22a:	7f 49       	sbci	r23, 0x9F	; 159
     22c:	09 0f       	add	r16, r25
     22e:	06 00       	.word	0x0006	; ????
     230:	1e 3f       	cpi	r17, 0xFE	; 254
     232:	21 71       	andi	r18, 0x11	; 17
     234:	7f 5e       	subi	r23, 0xEF	; 239
     236:	00 00       	nop
     238:	41 7f       	andi	r20, 0xF1	; 241
     23a:	7f 19       	sub	r23, r15
     23c:	39 6f       	ori	r19, 0xF9	; 249
     23e:	46 00       	.word	0x0046	; ????
     240:	26 67       	ori	r18, 0x76	; 118
     242:	4d 59       	subi	r20, 0x9D	; 157
     244:	7b 32       	cpi	r23, 0x2B	; 43
     246:	00 00       	nop
     248:	03 41       	sbci	r16, 0x13	; 19
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	41 03       	mulsu	r20, r17
     24e:	00 00       	nop
     250:	7f 7f       	andi	r23, 0xFF	; 255
     252:	40 40       	sbci	r20, 0x00	; 0
     254:	7f 7f       	andi	r23, 0xFF	; 255
     256:	00 00       	nop
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	60 60       	ori	r22, 0x00	; 0
     25c:	3f 1f       	adc	r19, r31
     25e:	00 00       	nop
     260:	7f 7f       	andi	r23, 0xFF	; 255
     262:	30 18       	sub	r3, r0
     264:	30 7f       	andi	r19, 0xF0	; 240
     266:	7f 00       	.word	0x007f	; ????
     268:	63 77       	andi	r22, 0x73	; 115
     26a:	1c 08       	sbc	r1, r12
     26c:	1c 77       	andi	r17, 0x7C	; 124
     26e:	63 00       	.word	0x0063	; ????
     270:	07 4f       	sbci	r16, 0xF7	; 247
     272:	78 78       	andi	r23, 0x88	; 136
     274:	4f 07       	cpc	r20, r31
     276:	00 00       	nop
     278:	67 73       	andi	r22, 0x37	; 55
     27a:	59 4d       	sbci	r21, 0xD9	; 217
     27c:	47 63       	ori	r20, 0x37	; 55
     27e:	71 00       	.word	0x0071	; ????
     280:	00 7f       	andi	r16, 0xF0	; 240
     282:	7f 41       	sbci	r23, 0x1F	; 31
     284:	41 00       	.word	0x0041	; ????
     286:	00 00       	nop
     288:	01 03       	mulsu	r16, r17
     28a:	06 0c       	add	r0, r6
     28c:	18 30       	cpi	r17, 0x08	; 8
     28e:	60 00       	.word	0x0060	; ????
     290:	00 41       	sbci	r16, 0x10	; 16
     292:	41 7f       	andi	r20, 0xF1	; 241
     294:	7f 00       	.word	0x007f	; ????
     296:	00 00       	nop
     298:	08 0c       	add	r0, r8
     29a:	06 03       	mulsu	r16, r22
     29c:	06 0c       	add	r0, r6
     29e:	08 00       	.word	0x0008	; ????
     2a0:	80 80       	ld	r8, Z
     2a2:	80 80       	ld	r8, Z
     2a4:	80 80       	ld	r8, Z
     2a6:	80 80       	ld	r8, Z
     2a8:	00 00       	nop
     2aa:	03 07       	cpc	r16, r19
     2ac:	04 00       	.word	0x0004	; ????
     2ae:	00 00       	nop
     2b0:	20 74       	andi	r18, 0x40	; 64
     2b2:	54 54       	subi	r21, 0x44	; 68
     2b4:	3c 78       	andi	r19, 0x8C	; 140
     2b6:	40 00       	.word	0x0040	; ????
     2b8:	41 3f       	cpi	r20, 0xF1	; 241
     2ba:	7f 44       	sbci	r23, 0x4F	; 79
     2bc:	44 7c       	andi	r20, 0xC4	; 196
     2be:	38 00       	.word	0x0038	; ????
     2c0:	38 7c       	andi	r19, 0xC8	; 200
     2c2:	44 44       	sbci	r20, 0x44	; 68
     2c4:	6c 28       	or	r6, r12
     2c6:	00 00       	nop
     2c8:	30 78       	andi	r19, 0x80	; 128
     2ca:	48 49       	sbci	r20, 0x98	; 152
     2cc:	3f 7f       	andi	r19, 0xFF	; 255
     2ce:	40 00       	.word	0x0040	; ????
     2d0:	38 7c       	andi	r19, 0xC8	; 200
     2d2:	54 54       	subi	r21, 0x44	; 68
     2d4:	5c 18       	sub	r5, r12
     2d6:	00 00       	nop
     2d8:	48 7e       	andi	r20, 0xE8	; 232
     2da:	7f 49       	sbci	r23, 0x9F	; 159
     2dc:	03 02       	muls	r16, r19
     2de:	00 00       	nop
     2e0:	98 bc       	out	0x28, r9	; 40
     2e2:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2e4:	f8 7c       	andi	r31, 0xC8	; 200
     2e6:	04 00       	.word	0x0004	; ????
     2e8:	41 7f       	andi	r20, 0xF1	; 241
     2ea:	7f 08       	sbc	r7, r15
     2ec:	04 7c       	andi	r16, 0xC4	; 196
     2ee:	78 00       	.word	0x0078	; ????
     2f0:	00 44       	sbci	r16, 0x40	; 64
     2f2:	7d 7d       	andi	r23, 0xDD	; 221
     2f4:	40 00       	.word	0x0040	; ????
     2f6:	00 00       	nop
     2f8:	40 c4       	rjmp	.+2176   	; 0xb7a <main+0xa>
     2fa:	84 fd       	sbrc	r24, 4
     2fc:	7d 00       	.word	0x007d	; ????
     2fe:	00 00       	nop
     300:	41 7f       	andi	r20, 0xF1	; 241
     302:	7f 10       	cpse	r7, r15
     304:	38 6c       	ori	r19, 0xC8	; 200
     306:	44 00       	.word	0x0044	; ????
     308:	00 41       	sbci	r16, 0x10	; 16
     30a:	7f 7f       	andi	r23, 0xFF	; 255
     30c:	40 00       	.word	0x0040	; ????
     30e:	00 00       	nop
     310:	7c 7c       	andi	r23, 0xCC	; 204
     312:	0c 18       	sub	r0, r12
     314:	0c 7c       	andi	r16, 0xCC	; 204
     316:	78 00       	.word	0x0078	; ????
     318:	7c 7c       	andi	r23, 0xCC	; 204
     31a:	04 04       	cpc	r0, r4
     31c:	7c 78       	andi	r23, 0x8C	; 140
     31e:	00 00       	nop
     320:	38 7c       	andi	r19, 0xC8	; 200
     322:	44 44       	sbci	r20, 0x44	; 68
     324:	7c 38       	cpi	r23, 0x8C	; 140
     326:	00 00       	nop
     328:	84 fc       	sbrc	r8, 4
     32a:	f8 a4       	ldd	r15, Y+40	; 0x28
     32c:	24 3c       	cpi	r18, 0xC4	; 196
     32e:	18 00       	.word	0x0018	; ????
     330:	18 3c       	cpi	r17, 0xC8	; 200
     332:	24 a4       	ldd	r2, Z+44	; 0x2c
     334:	f8 fc       	.word	0xfcf8	; ????
     336:	84 00       	.word	0x0084	; ????
     338:	44 7c       	andi	r20, 0xC4	; 196
     33a:	78 44       	sbci	r23, 0x48	; 72
     33c:	1c 18       	sub	r1, r12
     33e:	00 00       	nop
     340:	48 5c       	subi	r20, 0xC8	; 200
     342:	54 54       	subi	r21, 0x44	; 68
     344:	74 24       	eor	r7, r4
     346:	00 00       	nop
     348:	00 04       	cpc	r0, r0
     34a:	3e 7f       	andi	r19, 0xFE	; 254
     34c:	44 24       	eor	r4, r4
     34e:	00 00       	nop
     350:	3c 7c       	andi	r19, 0xCC	; 204
     352:	40 40       	sbci	r20, 0x00	; 0
     354:	3c 7c       	andi	r19, 0xCC	; 204
     356:	40 00       	.word	0x0040	; ????
     358:	1c 3c       	cpi	r17, 0xCC	; 204
     35a:	60 60       	ori	r22, 0x00	; 0
     35c:	3c 1c       	adc	r3, r12
     35e:	00 00       	nop
     360:	3c 7c       	andi	r19, 0xCC	; 204
     362:	60 30       	cpi	r22, 0x00	; 0
     364:	60 7c       	andi	r22, 0xC0	; 192
     366:	3c 00       	.word	0x003c	; ????
     368:	44 6c       	ori	r20, 0xC4	; 196
     36a:	38 10       	cpse	r3, r8
     36c:	38 6c       	ori	r19, 0xC8	; 200
     36e:	44 00       	.word	0x0044	; ????
     370:	9c bc       	out	0x2c, r9	; 44
     372:	a0 a0       	ldd	r10, Z+32	; 0x20
     374:	fc 7c       	andi	r31, 0xCC	; 204
     376:	00 00       	nop
     378:	4c 64       	ori	r20, 0x4C	; 76
     37a:	74 5c       	subi	r23, 0xC4	; 196
     37c:	4c 64       	ori	r20, 0x4C	; 76
     37e:	00 00       	nop
     380:	08 08       	sbc	r0, r8
     382:	3e 77       	andi	r19, 0x7E	; 126
     384:	41 41       	sbci	r20, 0x11	; 17
     386:	00 00       	nop
     388:	00 00       	nop
     38a:	00 77       	andi	r16, 0x70	; 112
     38c:	77 00       	.word	0x0077	; ????
     38e:	00 00       	nop
     390:	41 41       	sbci	r20, 0x11	; 17
     392:	77 3e       	cpi	r23, 0xE7	; 231
     394:	08 08       	sbc	r0, r8
     396:	00 00       	nop
     398:	02 03       	mulsu	r16, r18
     39a:	01 03       	mulsu	r16, r17
     39c:	02 03       	mulsu	r16, r18
     39e:	01 00       	.word	0x0001	; ????

000003a0 <__ctors_end>:
     3a0:	11 24       	eor	r1, r1
     3a2:	1f be       	out	0x3f, r1	; 63
     3a4:	cf ef       	ldi	r28, 0xFF	; 255
     3a6:	d4 e0       	ldi	r29, 0x04	; 4
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	cd bf       	out	0x3d, r28	; 61

000003ac <__do_copy_data>:
     3ac:	12 e0       	ldi	r17, 0x02	; 2
     3ae:	a0 e0       	ldi	r26, 0x00	; 0
     3b0:	b1 e0       	ldi	r27, 0x01	; 1
     3b2:	e0 e0       	ldi	r30, 0x00	; 0
     3b4:	f5 e2       	ldi	r31, 0x25	; 37
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <__do_copy_data+0x10>
     3b8:	05 90       	lpm	r0, Z+
     3ba:	0d 92       	st	X+, r0
     3bc:	a8 3d       	cpi	r26, 0xD8	; 216
     3be:	b1 07       	cpc	r27, r17
     3c0:	d9 f7       	brne	.-10     	; 0x3b8 <__do_copy_data+0xc>

000003c2 <__do_clear_bss>:
     3c2:	23 e0       	ldi	r18, 0x03	; 3
     3c4:	a8 ed       	ldi	r26, 0xD8	; 216
     3c6:	b2 e0       	ldi	r27, 0x02	; 2
     3c8:	01 c0       	rjmp	.+2      	; 0x3cc <.do_clear_bss_start>

000003ca <.do_clear_bss_loop>:
     3ca:	1d 92       	st	X+, r1

000003cc <.do_clear_bss_start>:
     3cc:	a5 32       	cpi	r26, 0x25	; 37
     3ce:	b2 07       	cpc	r27, r18
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <.do_clear_bss_loop>
     3d2:	0e 94 b8 05 	call	0xb70	; 0xb70 <main>
     3d6:	0c 94 7e 12 	jmp	0x24fc	; 0x24fc <_exit>

000003da <__bad_interrupt>:
     3da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003de <__vector_15>:
float negYfactor;
float negYadd;

volatile char ADC_data;

ISR (TIMER1_OVF_vect){
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	2f 93       	push	r18
     3ea:	3f 93       	push	r19
     3ec:	4f 93       	push	r20
     3ee:	5f 93       	push	r21
     3f0:	6f 93       	push	r22
     3f2:	7f 93       	push	r23
     3f4:	8f 93       	push	r24
     3f6:	9f 93       	push	r25
     3f8:	af 93       	push	r26
     3fa:	bf 93       	push	r27
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	ef 93       	push	r30
     402:	ff 93       	push	r31
	ADC[0x00] = 0x00;
     404:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     408:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     40c:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     40e:	89 ef       	ldi	r24, 0xF9	; 249
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     418:	00 00       	nop
	_delay_ms(1);
	joyy=ADC[0x00];
     41a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     41e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     422:	80 81       	ld	r24, Z
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	90 93 f3 02 	sts	0x02F3, r25	; 0x8002f3 <joyy+0x1>
     42a:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <joyy>
	joyx=ADC[0x00];
     42e:	80 81       	ld	r24, Z
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	90 93 14 03 	sts	0x0314, r25	; 0x800314 <joyx+0x1>
     436:	80 93 13 03 	sts	0x0313, r24	; 0x800313 <joyx>
	sliderRight = ADC[0x00];
     43a:	80 81       	ld	r24, Z
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <sliderRight+0x1>
     442:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <sliderRight>
	sliderLeft = ADC[0x00];
     446:	80 81       	ld	r24, Z
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <sliderLeft+0x1>
     44e:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <sliderLeft>
	
	button1State = 0 != (PIND & (1<<PD2)); 
     452:	80 b3       	in	r24, 0x10	; 16
     454:	82 fb       	bst	r24, 2
     456:	66 27       	eor	r22, r22
     458:	60 f9       	bld	r22, 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	70 93 0d 03 	sts	0x030D, r23	; 0x80030d <button1State+0x1>
     460:	60 93 0c 03 	sts	0x030C, r22	; 0x80030c <button1State>
	button2State = 0 != (PIND & (1<<PD3));
     464:	80 b3       	in	r24, 0x10	; 16
     466:	83 fb       	bst	r24, 3
     468:	44 27       	eor	r20, r20
     46a:	40 f9       	bld	r20, 0
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	50 93 f5 02 	sts	0x02F5, r21	; 0x8002f5 <button2State+0x1>
     472:	40 93 f4 02 	sts	0x02F4, r20	; 0x8002f4 <button2State>
	button3State = 1 != (0 != (PIND & (1<<PD5))); 
     476:	80 b3       	in	r24, 0x10	; 16
     478:	82 95       	swap	r24
     47a:	86 95       	lsr	r24
     47c:	87 70       	andi	r24, 0x07	; 7
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	89 27       	eor	r24, r25
     482:	28 2f       	mov	r18, r24
     484:	21 70       	andi	r18, 0x01	; 1
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	30 93 16 03 	sts	0x0316, r19	; 0x800316 <button3State+0x1>
     48c:	20 93 15 03 	sts	0x0315, r18	; 0x800315 <button3State>
	
	if (joyy < middleyjoyy)
     490:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     494:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     498:	c0 91 e6 02 	lds	r28, 0x02E6	; 0x8002e6 <middleyjoyy>
     49c:	d0 91 e7 02 	lds	r29, 0x02E7	; 0x8002e7 <middleyjoyy+0x1>
     4a0:	8c 17       	cp	r24, r28
     4a2:	9d 07       	cpc	r25, r29
     4a4:	54 f5       	brge	.+84     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
	{
		joyyPercent = joyy*negYfactor/100+negYadd;
     4a6:	60 91 f2 02 	lds	r22, 0x02F2	; 0x8002f2 <joyy>
     4aa:	70 91 f3 02 	lds	r23, 0x02F3	; 0x8002f3 <joyy+0x1>
     4ae:	07 2e       	mov	r0, r23
     4b0:	00 0c       	add	r0, r0
     4b2:	88 0b       	sbc	r24, r24
     4b4:	99 0b       	sbc	r25, r25
     4b6:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     4ba:	20 91 04 03 	lds	r18, 0x0304	; 0x800304 <negYfactor>
     4be:	30 91 05 03 	lds	r19, 0x0305	; 0x800305 <negYfactor+0x1>
     4c2:	40 91 06 03 	lds	r20, 0x0306	; 0x800306 <negYfactor+0x2>
     4c6:	50 91 07 03 	lds	r21, 0x0307	; 0x800307 <negYfactor+0x3>
     4ca:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	30 e0       	ldi	r19, 0x00	; 0
     4d2:	48 ec       	ldi	r20, 0xC8	; 200
     4d4:	52 e4       	ldi	r21, 0x42	; 66
     4d6:	0e 94 10 0c 	call	0x1820	; 0x1820 <__divsf3>
     4da:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <negYadd>
     4de:	30 91 e3 02 	lds	r19, 0x02E3	; 0x8002e3 <negYadd+0x1>
     4e2:	40 91 e4 02 	lds	r20, 0x02E4	; 0x8002e4 <negYadd+0x2>
     4e6:	50 91 e5 02 	lds	r21, 0x02E5	; 0x8002e5 <negYadd+0x3>
     4ea:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__addsf3>
     4ee:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     4f2:	70 93 f1 02 	sts	0x02F1, r23	; 0x8002f1 <joyyPercent+0x1>
     4f6:	60 93 f0 02 	sts	0x02F0, r22	; 0x8002f0 <joyyPercent>
	}
	if (joyy >= middleyjoyy)
     4fa:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     4fe:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     502:	8c 17       	cp	r24, r28
     504:	9d 07       	cpc	r25, r29
     506:	54 f1       	brlt	.+84     	; 0x55c <__stack+0x5d>
	{
		joyyPercent = joyy*posYfactor/100+posYadd;
     508:	60 91 f2 02 	lds	r22, 0x02F2	; 0x8002f2 <joyy>
     50c:	70 91 f3 02 	lds	r23, 0x02F3	; 0x8002f3 <joyy+0x1>
     510:	07 2e       	mov	r0, r23
     512:	00 0c       	add	r0, r0
     514:	88 0b       	sbc	r24, r24
     516:	99 0b       	sbc	r25, r25
     518:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     51c:	20 91 fa 02 	lds	r18, 0x02FA	; 0x8002fa <posYfactor>
     520:	30 91 fb 02 	lds	r19, 0x02FB	; 0x8002fb <posYfactor+0x1>
     524:	40 91 fc 02 	lds	r20, 0x02FC	; 0x8002fc <posYfactor+0x2>
     528:	50 91 fd 02 	lds	r21, 0x02FD	; 0x8002fd <posYfactor+0x3>
     52c:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	48 ec       	ldi	r20, 0xC8	; 200
     536:	52 e4       	ldi	r21, 0x42	; 66
     538:	0e 94 10 0c 	call	0x1820	; 0x1820 <__divsf3>
     53c:	20 91 ea 02 	lds	r18, 0x02EA	; 0x8002ea <posYadd>
     540:	30 91 eb 02 	lds	r19, 0x02EB	; 0x8002eb <posYadd+0x1>
     544:	40 91 ec 02 	lds	r20, 0x02EC	; 0x8002ec <posYadd+0x2>
     548:	50 91 ed 02 	lds	r21, 0x02ED	; 0x8002ed <posYadd+0x3>
     54c:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__addsf3>
     550:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     554:	70 93 f1 02 	sts	0x02F1, r23	; 0x8002f1 <joyyPercent+0x1>
     558:	60 93 f0 02 	sts	0x02F0, r22	; 0x8002f0 <joyyPercent>
	}
	if (joyx < middleyjoyx)
     55c:	80 91 13 03 	lds	r24, 0x0313	; 0x800313 <joyx>
     560:	90 91 14 03 	lds	r25, 0x0314	; 0x800314 <joyx+0x1>
     564:	c0 91 02 03 	lds	r28, 0x0302	; 0x800302 <middleyjoyx>
     568:	d0 91 03 03 	lds	r29, 0x0303	; 0x800303 <middleyjoyx+0x1>
     56c:	8c 17       	cp	r24, r28
     56e:	9d 07       	cpc	r25, r29
     570:	54 f5       	brge	.+84     	; 0x5c6 <__stack+0xc7>
	{
		joyxPercent = joyx*negXfactor/100+negXadd;
     572:	60 91 13 03 	lds	r22, 0x0313	; 0x800313 <joyx>
     576:	70 91 14 03 	lds	r23, 0x0314	; 0x800314 <joyx+0x1>
     57a:	07 2e       	mov	r0, r23
     57c:	00 0c       	add	r0, r0
     57e:	88 0b       	sbc	r24, r24
     580:	99 0b       	sbc	r25, r25
     582:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     586:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <negXfactor>
     58a:	30 91 09 03 	lds	r19, 0x0309	; 0x800309 <negXfactor+0x1>
     58e:	40 91 0a 03 	lds	r20, 0x030A	; 0x80030a <negXfactor+0x2>
     592:	50 91 0b 03 	lds	r21, 0x030B	; 0x80030b <negXfactor+0x3>
     596:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	48 ec       	ldi	r20, 0xC8	; 200
     5a0:	52 e4       	ldi	r21, 0x42	; 66
     5a2:	0e 94 10 0c 	call	0x1820	; 0x1820 <__divsf3>
     5a6:	20 91 fe 02 	lds	r18, 0x02FE	; 0x8002fe <negXadd>
     5aa:	30 91 ff 02 	lds	r19, 0x02FF	; 0x8002ff <negXadd+0x1>
     5ae:	40 91 00 03 	lds	r20, 0x0300	; 0x800300 <negXadd+0x2>
     5b2:	50 91 01 03 	lds	r21, 0x0301	; 0x800301 <negXadd+0x3>
     5b6:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__addsf3>
     5ba:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     5be:	70 93 e9 02 	sts	0x02E9, r23	; 0x8002e9 <joyxPercent+0x1>
     5c2:	60 93 e8 02 	sts	0x02E8, r22	; 0x8002e8 <joyxPercent>
	}
	if (joyx >= middleyjoyx)
     5c6:	80 91 13 03 	lds	r24, 0x0313	; 0x800313 <joyx>
     5ca:	90 91 14 03 	lds	r25, 0x0314	; 0x800314 <joyx+0x1>
     5ce:	8c 17       	cp	r24, r28
     5d0:	9d 07       	cpc	r25, r29
     5d2:	54 f1       	brlt	.+84     	; 0x628 <__stack+0x129>
	{
		joyxPercent = joyx*posXfactor/100+posXadd;
     5d4:	60 91 13 03 	lds	r22, 0x0313	; 0x800313 <joyx>
     5d8:	70 91 14 03 	lds	r23, 0x0314	; 0x800314 <joyx+0x1>
     5dc:	07 2e       	mov	r0, r23
     5de:	00 0c       	add	r0, r0
     5e0:	88 0b       	sbc	r24, r24
     5e2:	99 0b       	sbc	r25, r25
     5e4:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     5e8:	20 91 0f 03 	lds	r18, 0x030F	; 0x80030f <posXfactor>
     5ec:	30 91 10 03 	lds	r19, 0x0310	; 0x800310 <posXfactor+0x1>
     5f0:	40 91 11 03 	lds	r20, 0x0311	; 0x800311 <posXfactor+0x2>
     5f4:	50 91 12 03 	lds	r21, 0x0312	; 0x800312 <posXfactor+0x3>
     5f8:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	48 ec       	ldi	r20, 0xC8	; 200
     602:	52 e4       	ldi	r21, 0x42	; 66
     604:	0e 94 10 0c 	call	0x1820	; 0x1820 <__divsf3>
     608:	20 91 f6 02 	lds	r18, 0x02F6	; 0x8002f6 <posXadd>
     60c:	30 91 f7 02 	lds	r19, 0x02F7	; 0x8002f7 <posXadd+0x1>
     610:	40 91 f8 02 	lds	r20, 0x02F8	; 0x8002f8 <posXadd+0x2>
     614:	50 91 f9 02 	lds	r21, 0x02F9	; 0x8002f9 <posXadd+0x3>
     618:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__addsf3>
     61c:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     620:	70 93 e9 02 	sts	0x02E9, r23	; 0x8002e9 <joyxPercent+0x1>
     624:	60 93 e8 02 	sts	0x02E8, r22	; 0x8002e8 <joyxPercent>
	}	
	if (joyxPercent > -5 && joyxPercent < 5)
     628:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <joyxPercent>
     62c:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <joyxPercent+0x1>
     630:	8c 3f       	cpi	r24, 0xFC	; 252
     632:	9f 4f       	sbci	r25, 0xFF	; 255
     634:	54 f0       	brlt	.+20     	; 0x64a <__stack+0x14b>
     636:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <joyxPercent>
     63a:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <joyxPercent+0x1>
     63e:	05 97       	sbiw	r24, 0x05	; 5
     640:	24 f4       	brge	.+8      	; 0x64a <__stack+0x14b>
	{
		joyxPercent = 0;
     642:	10 92 e9 02 	sts	0x02E9, r1	; 0x8002e9 <joyxPercent+0x1>
     646:	10 92 e8 02 	sts	0x02E8, r1	; 0x8002e8 <joyxPercent>
	}
	if (joyyPercent > -5 && joyyPercent < 5)
     64a:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <joyyPercent>
     64e:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <joyyPercent+0x1>
     652:	8c 3f       	cpi	r24, 0xFC	; 252
     654:	9f 4f       	sbci	r25, 0xFF	; 255
     656:	54 f0       	brlt	.+20     	; 0x66c <__stack+0x16d>
     658:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <joyyPercent>
     65c:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <joyyPercent+0x1>
     660:	05 97       	sbiw	r24, 0x05	; 5
     662:	24 f4       	brge	.+8      	; 0x66c <__stack+0x16d>
	{
		joyyPercent = 0;
     664:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <joyyPercent+0x1>
     668:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <joyyPercent>
	}

}
     66c:	ff 91       	pop	r31
     66e:	ef 91       	pop	r30
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	bf 91       	pop	r27
     676:	af 91       	pop	r26
     678:	9f 91       	pop	r25
     67a:	8f 91       	pop	r24
     67c:	7f 91       	pop	r23
     67e:	6f 91       	pop	r22
     680:	5f 91       	pop	r21
     682:	4f 91       	pop	r20
     684:	3f 91       	pop	r19
     686:	2f 91       	pop	r18
     688:	0f 90       	pop	r0
     68a:	0f be       	out	0x3f, r0	; 63
     68c:	0f 90       	pop	r0
     68e:	1f 90       	pop	r1
     690:	18 95       	reti

00000692 <adc_init>:





void adc_init(){
     692:	6f 92       	push	r6
     694:	7f 92       	push	r7
     696:	8f 92       	push	r8
     698:	9f 92       	push	r9
     69a:	af 92       	push	r10
     69c:	bf 92       	push	r11
     69e:	cf 92       	push	r12
     6a0:	df 92       	push	r13
     6a2:	ef 92       	push	r14
     6a4:	ff 92       	push	r15
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
    TCCR3A = (1 << WGM30) | (1 << WGM31) | (1 << COM3A0);
     6ae:	83 e4       	ldi	r24, 0x43	; 67
     6b0:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
    TCCR3B = (1 << CS30) | (1 << WGM33);
     6b4:	81 e1       	ldi	r24, 0x11	; 17
     6b6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
    OCR3A = 2; // Define the frequency of the generated PWM signal
     6ba:	82 e0       	ldi	r24, 0x02	; 2
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     6c2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
     6c6:	81 b3       	in	r24, 0x11	; 17
     6c8:	80 61       	ori	r24, 0x10	; 16
     6ca:	81 bb       	out	0x11, r24	; 17
     6cc:	83 ec       	ldi	r24, 0xC3	; 195
     6ce:	99 e0       	ldi	r25, 0x09	; 9
     6d0:	01 97       	sbiw	r24, 0x01	; 1
     6d2:	f1 f7       	brne	.-4      	; 0x6d0 <adc_init+0x3e>
     6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <adc_init+0x44>
     6d6:	00 00       	nop
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
    OCR3A = 2; // Define the frequency of the generated PWM signal
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
	
	
	_delay_ms(10);
	int times = 0;
     6dc:	c0 e0       	ldi	r28, 0x00	; 0
     6de:	d0 e0       	ldi	r29, 0x00	; 0
	int ignore;
	for (int i = 0; i<100; i++)
     6e0:	30 c0       	rjmp	.+96     	; 0x742 <adc_init+0xb0>
	{
		ADC[0x00] = 0x00;
     6e2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6e6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6ea:	10 82       	st	Z, r1
     6ec:	89 ef       	ldi	r24, 0xF9	; 249
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <adc_init+0x5e>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <adc_init+0x64>
     6f6:	00 00       	nop
		_delay_ms(1);
		intermittentx = intermittentx + ADC[0x00];
     6f8:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6fc:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     700:	40 81       	ld	r20, Z
     702:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
     706:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
     70a:	84 0f       	add	r24, r20
     70c:	91 1d       	adc	r25, r1
     70e:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     712:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
		intermittenty = intermittenty + ADC[0x00];
     716:	40 81       	ld	r20, Z
     718:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <intermittenty>
     71c:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <intermittenty+0x1>
     720:	84 0f       	add	r24, r20
     722:	91 1d       	adc	r25, r1
     724:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <intermittenty+0x1>
     728:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <intermittenty>
		ignore = ADC[0x00];
     72c:	80 81       	ld	r24, Z
		ignore = ADC[0x00];
     72e:	80 81       	ld	r24, Z
     730:	89 ef       	ldi	r24, 0xF9	; 249
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	01 97       	sbiw	r24, 0x01	; 1
     736:	f1 f7       	brne	.-4      	; 0x734 <adc_init+0xa2>
     738:	00 c0       	rjmp	.+0      	; 0x73a <adc_init+0xa8>
     73a:	00 00       	nop
		_delay_ms(1);
		times++;
     73c:	21 96       	adiw	r28, 0x01	; 1
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     73e:	2f 5f       	subi	r18, 0xFF	; 255
     740:	3f 4f       	sbci	r19, 0xFF	; 255
     742:	24 36       	cpi	r18, 0x64	; 100
     744:	31 05       	cpc	r19, r1
     746:	6c f2       	brlt	.-102    	; 0x6e2 <adc_init+0x50>
		ignore = ADC[0x00];
		ignore = ADC[0x00];
		_delay_ms(1);
		times++;
	}
	middleyjoyx = intermittentx/times;
     748:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
     74c:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
     750:	be 01       	movw	r22, r28
     752:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     756:	26 2f       	mov	r18, r22
     758:	37 2f       	mov	r19, r23
     75a:	60 93 02 03 	sts	0x0302, r22	; 0x800302 <middleyjoyx>
     75e:	70 93 03 03 	sts	0x0303, r23	; 0x800303 <middleyjoyx+0x1>
	middleyjoyy = intermittenty/times;
     762:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <intermittenty>
     766:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <intermittenty+0x1>
     76a:	be 01       	movw	r22, r28
     76c:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     770:	60 93 e6 02 	sts	0x02E6, r22	; 0x8002e6 <middleyjoyy>
     774:	70 93 e7 02 	sts	0x02E7, r23	; 0x8002e7 <middleyjoyy+0x1>
	printf("\n\n\r %d %d \n", middleyjoyx, middleyjoyy);
     778:	7f 93       	push	r23
     77a:	6f 93       	push	r22
     77c:	3f 93       	push	r19
     77e:	2f 93       	push	r18
     780:	8e e1       	ldi	r24, 0x1E	; 30
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	9f 93       	push	r25
     786:	8f 93       	push	r24
     788:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	
	posXfactor = (10000)/(255-middleyjoyx);
     78c:	00 91 02 03 	lds	r16, 0x0302	; 0x800302 <middleyjoyx>
     790:	10 91 03 03 	lds	r17, 0x0303	; 0x800303 <middleyjoyx+0x1>
     794:	66 24       	eor	r6, r6
     796:	6a 94       	dec	r6
     798:	71 2c       	mov	r7, r1
     79a:	73 01       	movw	r14, r6
     79c:	e0 1a       	sub	r14, r16
     79e:	f1 0a       	sbc	r15, r17
     7a0:	c0 e1       	ldi	r28, 0x10	; 16
     7a2:	d7 e2       	ldi	r29, 0x27	; 39
     7a4:	ce 01       	movw	r24, r28
     7a6:	b7 01       	movw	r22, r14
     7a8:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     7ac:	07 2e       	mov	r0, r23
     7ae:	00 0c       	add	r0, r0
     7b0:	88 0b       	sbc	r24, r24
     7b2:	99 0b       	sbc	r25, r25
     7b4:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     7b8:	4b 01       	movw	r8, r22
     7ba:	5c 01       	movw	r10, r24
     7bc:	60 93 0f 03 	sts	0x030F, r22	; 0x80030f <posXfactor>
     7c0:	70 93 10 03 	sts	0x0310, r23	; 0x800310 <posXfactor+0x1>
     7c4:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <posXfactor+0x2>
     7c8:	90 93 12 03 	sts	0x0312, r25	; 0x800312 <posXfactor+0x3>
	posXadd = -1*(100*middleyjoyx)/(255-middleyjoyx);
     7cc:	2c e9       	ldi	r18, 0x9C	; 156
     7ce:	20 03       	mulsu	r18, r16
     7d0:	60 01       	movw	r12, r0
     7d2:	21 9f       	mul	r18, r17
     7d4:	d0 0c       	add	r13, r0
     7d6:	11 24       	eor	r1, r1
     7d8:	c6 01       	movw	r24, r12
     7da:	b7 01       	movw	r22, r14
     7dc:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     7e0:	7b 01       	movw	r14, r22
     7e2:	07 2e       	mov	r0, r23
     7e4:	00 0c       	add	r0, r0
     7e6:	88 0b       	sbc	r24, r24
     7e8:	99 0b       	sbc	r25, r25
     7ea:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     7ee:	60 93 f6 02 	sts	0x02F6, r22	; 0x8002f6 <posXadd>
     7f2:	70 93 f7 02 	sts	0x02F7, r23	; 0x8002f7 <posXadd+0x1>
     7f6:	80 93 f8 02 	sts	0x02F8, r24	; 0x8002f8 <posXadd+0x2>
     7fa:	90 93 f9 02 	sts	0x02F9, r25	; 0x8002f9 <posXadd+0x3>
	negXfactor = (10000/middleyjoyx);
     7fe:	ce 01       	movw	r24, r28
     800:	b8 01       	movw	r22, r16
     802:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     806:	07 2e       	mov	r0, r23
     808:	00 0c       	add	r0, r0
     80a:	88 0b       	sbc	r24, r24
     80c:	99 0b       	sbc	r25, r25
     80e:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     812:	60 93 08 03 	sts	0x0308, r22	; 0x800308 <negXfactor>
     816:	70 93 09 03 	sts	0x0309, r23	; 0x800309 <negXfactor+0x1>
     81a:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <negXfactor+0x2>
     81e:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <negXfactor+0x3>
	negXadd = -1*(middleyjoyx*100)/(middleyjoyx);
     822:	c6 01       	movw	r24, r12
     824:	b8 01       	movw	r22, r16
     826:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     82a:	07 2e       	mov	r0, r23
     82c:	00 0c       	add	r0, r0
     82e:	88 0b       	sbc	r24, r24
     830:	99 0b       	sbc	r25, r25
     832:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     836:	60 93 fe 02 	sts	0x02FE, r22	; 0x8002fe <negXadd>
     83a:	70 93 ff 02 	sts	0x02FF, r23	; 0x8002ff <negXadd+0x1>
     83e:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <negXadd+0x2>
     842:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <negXadd+0x3>
	posYfactor = (10000)/(255-middleyjoyy);
     846:	00 91 e6 02 	lds	r16, 0x02E6	; 0x8002e6 <middleyjoyy>
     84a:	10 91 e7 02 	lds	r17, 0x02E7	; 0x8002e7 <middleyjoyy+0x1>
     84e:	60 1a       	sub	r6, r16
     850:	71 0a       	sbc	r7, r17
     852:	ce 01       	movw	r24, r28
     854:	b3 01       	movw	r22, r6
     856:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     85a:	07 2e       	mov	r0, r23
     85c:	00 0c       	add	r0, r0
     85e:	88 0b       	sbc	r24, r24
     860:	99 0b       	sbc	r25, r25
     862:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     866:	60 93 fa 02 	sts	0x02FA, r22	; 0x8002fa <posYfactor>
     86a:	70 93 fb 02 	sts	0x02FB, r23	; 0x8002fb <posYfactor+0x1>
     86e:	80 93 fc 02 	sts	0x02FC, r24	; 0x8002fc <posYfactor+0x2>
     872:	90 93 fd 02 	sts	0x02FD, r25	; 0x8002fd <posYfactor+0x3>
	posYadd= -1*(100*middleyjoyy)/(255-middleyjoyy);
     876:	2c e9       	ldi	r18, 0x9C	; 156
     878:	20 03       	mulsu	r18, r16
     87a:	60 01       	movw	r12, r0
     87c:	21 9f       	mul	r18, r17
     87e:	d0 0c       	add	r13, r0
     880:	11 24       	eor	r1, r1
     882:	c6 01       	movw	r24, r12
     884:	b3 01       	movw	r22, r6
     886:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     88a:	07 2e       	mov	r0, r23
     88c:	00 0c       	add	r0, r0
     88e:	88 0b       	sbc	r24, r24
     890:	99 0b       	sbc	r25, r25
     892:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     896:	60 93 ea 02 	sts	0x02EA, r22	; 0x8002ea <posYadd>
     89a:	70 93 eb 02 	sts	0x02EB, r23	; 0x8002eb <posYadd+0x1>
     89e:	80 93 ec 02 	sts	0x02EC, r24	; 0x8002ec <posYadd+0x2>
     8a2:	90 93 ed 02 	sts	0x02ED, r25	; 0x8002ed <posYadd+0x3>
	negYfactor = (10000/middleyjoyy);
     8a6:	ce 01       	movw	r24, r28
     8a8:	b8 01       	movw	r22, r16
     8aa:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     8ae:	07 2e       	mov	r0, r23
     8b0:	00 0c       	add	r0, r0
     8b2:	88 0b       	sbc	r24, r24
     8b4:	99 0b       	sbc	r25, r25
     8b6:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     8ba:	60 93 04 03 	sts	0x0304, r22	; 0x800304 <negYfactor>
     8be:	70 93 05 03 	sts	0x0305, r23	; 0x800305 <negYfactor+0x1>
     8c2:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <negYfactor+0x2>
     8c6:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <negYfactor+0x3>
	negYadd = -1*(middleyjoyy*100)/(middleyjoyy);
     8ca:	c6 01       	movw	r24, r12
     8cc:	b8 01       	movw	r22, r16
     8ce:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__divmodhi4>
     8d2:	07 2e       	mov	r0, r23
     8d4:	00 0c       	add	r0, r0
     8d6:	88 0b       	sbc	r24, r24
     8d8:	99 0b       	sbc	r25, r25
     8da:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__floatsisf>
     8de:	60 93 e2 02 	sts	0x02E2, r22	; 0x8002e2 <negYadd>
     8e2:	70 93 e3 02 	sts	0x02E3, r23	; 0x8002e3 <negYadd+0x1>
     8e6:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <negYadd+0x2>
     8ea:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <negYadd+0x3>
	printf("Pos x: %d*x + %d\n\r", (int)(posXfactor*1000), (int)posXadd);
     8ee:	20 e0       	ldi	r18, 0x00	; 0
     8f0:	30 e0       	ldi	r19, 0x00	; 0
     8f2:	4a e7       	ldi	r20, 0x7A	; 122
     8f4:	54 e4       	ldi	r21, 0x44	; 68
     8f6:	c5 01       	movw	r24, r10
     8f8:	b4 01       	movw	r22, r8
     8fa:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     8fe:	ff 92       	push	r15
     900:	ef 92       	push	r14
     902:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     906:	7f 93       	push	r23
     908:	6f 93       	push	r22
     90a:	8a e2       	ldi	r24, 0x2A	; 42
     90c:	91 e0       	ldi	r25, 0x01	; 1
     90e:	9f 93       	push	r25
     910:	8f 93       	push	r24
     912:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Neg x: %d*x + %d\n\r", (int)(negXfactor*1000), (int)negXadd);
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	4a e7       	ldi	r20, 0x7A	; 122
     91c:	54 e4       	ldi	r21, 0x44	; 68
     91e:	60 91 08 03 	lds	r22, 0x0308	; 0x800308 <negXfactor>
     922:	70 91 09 03 	lds	r23, 0x0309	; 0x800309 <negXfactor+0x1>
     926:	80 91 0a 03 	lds	r24, 0x030A	; 0x80030a <negXfactor+0x2>
     92a:	90 91 0b 03 	lds	r25, 0x030B	; 0x80030b <negXfactor+0x3>
     92e:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     932:	6b 01       	movw	r12, r22
     934:	7c 01       	movw	r14, r24
     936:	60 91 fe 02 	lds	r22, 0x02FE	; 0x8002fe <negXadd>
     93a:	70 91 ff 02 	lds	r23, 0x02FF	; 0x8002ff <negXadd+0x1>
     93e:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <negXadd+0x2>
     942:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <negXadd+0x3>
     946:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     94a:	7f 93       	push	r23
     94c:	6f 93       	push	r22
     94e:	c7 01       	movw	r24, r14
     950:	b6 01       	movw	r22, r12
     952:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     956:	7f 93       	push	r23
     958:	6f 93       	push	r22
     95a:	8d e3       	ldi	r24, 0x3D	; 61
     95c:	91 e0       	ldi	r25, 0x01	; 1
     95e:	9f 93       	push	r25
     960:	8f 93       	push	r24
     962:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Pos y: %d*y + %d\n\r", (int)(posYfactor*1000), (int)posYadd);
     966:	20 e0       	ldi	r18, 0x00	; 0
     968:	30 e0       	ldi	r19, 0x00	; 0
     96a:	4a e7       	ldi	r20, 0x7A	; 122
     96c:	54 e4       	ldi	r21, 0x44	; 68
     96e:	60 91 fa 02 	lds	r22, 0x02FA	; 0x8002fa <posYfactor>
     972:	70 91 fb 02 	lds	r23, 0x02FB	; 0x8002fb <posYfactor+0x1>
     976:	80 91 fc 02 	lds	r24, 0x02FC	; 0x8002fc <posYfactor+0x2>
     97a:	90 91 fd 02 	lds	r25, 0x02FD	; 0x8002fd <posYfactor+0x3>
     97e:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     982:	6b 01       	movw	r12, r22
     984:	7c 01       	movw	r14, r24
     986:	60 91 ea 02 	lds	r22, 0x02EA	; 0x8002ea <posYadd>
     98a:	70 91 eb 02 	lds	r23, 0x02EB	; 0x8002eb <posYadd+0x1>
     98e:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <posYadd+0x2>
     992:	90 91 ed 02 	lds	r25, 0x02ED	; 0x8002ed <posYadd+0x3>
     996:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     99a:	7f 93       	push	r23
     99c:	6f 93       	push	r22
     99e:	c7 01       	movw	r24, r14
     9a0:	b6 01       	movw	r22, r12
     9a2:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     9a6:	7f 93       	push	r23
     9a8:	6f 93       	push	r22
     9aa:	80 e5       	ldi	r24, 0x50	; 80
     9ac:	91 e0       	ldi	r25, 0x01	; 1
     9ae:	9f 93       	push	r25
     9b0:	8f 93       	push	r24
     9b2:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Neg y: %d*y + %d\n\r", (int)(negYfactor*1000), (int)negYadd);
     9b6:	20 e0       	ldi	r18, 0x00	; 0
     9b8:	30 e0       	ldi	r19, 0x00	; 0
     9ba:	4a e7       	ldi	r20, 0x7A	; 122
     9bc:	54 e4       	ldi	r21, 0x44	; 68
     9be:	60 91 04 03 	lds	r22, 0x0304	; 0x800304 <negYfactor>
     9c2:	70 91 05 03 	lds	r23, 0x0305	; 0x800305 <negYfactor+0x1>
     9c6:	80 91 06 03 	lds	r24, 0x0306	; 0x800306 <negYfactor+0x2>
     9ca:	90 91 07 03 	lds	r25, 0x0307	; 0x800307 <negYfactor+0x3>
     9ce:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__mulsf3>
     9d2:	6b 01       	movw	r12, r22
     9d4:	7c 01       	movw	r14, r24
     9d6:	60 91 e2 02 	lds	r22, 0x02E2	; 0x8002e2 <negYadd>
     9da:	70 91 e3 02 	lds	r23, 0x02E3	; 0x8002e3 <negYadd+0x1>
     9de:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <negYadd+0x2>
     9e2:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <negYadd+0x3>
     9e6:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     9ea:	7f 93       	push	r23
     9ec:	6f 93       	push	r22
     9ee:	c7 01       	movw	r24, r14
     9f0:	b6 01       	movw	r22, r12
     9f2:	0e 94 82 0c 	call	0x1904	; 0x1904 <__fixsfsi>
     9f6:	7f 93       	push	r23
     9f8:	6f 93       	push	r22
     9fa:	83 e6       	ldi	r24, 0x63	; 99
     9fc:	91 e0       	ldi	r25, 0x01	; 1
     9fe:	9f 93       	push	r25
     a00:	8f 93       	push	r24
     a02:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	
	TCCR1A = 0x00;
     a06:	1f bc       	out	0x2f, r1	; 47
	TCCR1B =  (1<<CS11);
     a08:	82 e0       	ldi	r24, 0x02	; 2
     a0a:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1);   
     a0c:	80 e8       	ldi	r24, 0x80	; 128
     a0e:	89 bf       	out	0x39, r24	; 57
	sei(); 
     a10:	78 94       	sei
	
	ADC[0x00] = 0x00;
     a12:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     a16:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     a1a:	10 82       	st	Z, r1
	//set_bit(gicr,int1);
	//// enable global interrupts
	//sei();


}
     a1c:	8d b7       	in	r24, 0x3d	; 61
     a1e:	9e b7       	in	r25, 0x3e	; 62
     a20:	4e 96       	adiw	r24, 0x1e	; 30
     a22:	0f b6       	in	r0, 0x3f	; 63
     a24:	f8 94       	cli
     a26:	9e bf       	out	0x3e, r25	; 62
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	8d bf       	out	0x3d, r24	; 61
     a2c:	df 91       	pop	r29
     a2e:	cf 91       	pop	r28
     a30:	1f 91       	pop	r17
     a32:	0f 91       	pop	r16
     a34:	ff 90       	pop	r15
     a36:	ef 90       	pop	r14
     a38:	df 90       	pop	r13
     a3a:	cf 90       	pop	r12
     a3c:	bf 90       	pop	r11
     a3e:	af 90       	pop	r10
     a40:	9f 90       	pop	r9
     a42:	8f 90       	pop	r8
     a44:	7f 90       	pop	r7
     a46:	6f 90       	pop	r6
     a48:	08 95       	ret

00000a4a <__vector_2>:

ISR(INT1_vect){
     a4a:	1f 92       	push	r1
     a4c:	0f 92       	push	r0
     a4e:	0f b6       	in	r0, 0x3f	; 63
     a50:	0f 92       	push	r0
     a52:	11 24       	eor	r1, r1
     a54:	8f 93       	push	r24
     a56:	ef 93       	push	r30
     a58:	ff 93       	push	r31
	
	ADC_data = ADC[0x00];
     a5a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     a5e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     a62:	80 81       	ld	r24, Z
     a64:	80 93 0e 03 	sts	0x030E, r24	; 0x80030e <ADC_data>
}
     a68:	ff 91       	pop	r31
     a6a:	ef 91       	pop	r30
     a6c:	8f 91       	pop	r24
     a6e:	0f 90       	pop	r0
     a70:	0f be       	out	0x3f, r0	; 63
     a72:	0f 90       	pop	r0
     a74:	1f 90       	pop	r1
     a76:	18 95       	reti

00000a78 <CAN_module_activate_cs>:
	SPI_Transmit(MCP_RESET);
	CAN_module_deactivate_cs();
	_delay_ms(10); //change if timing is off
}

void CAN_module_test(void){
     a78:	18 ba       	out	0x18, r1	; 24
     a7a:	08 95       	ret

00000a7c <CAN_module_deactivate_cs>:
     a7c:	80 e1       	ldi	r24, 0x10	; 16
     a7e:	88 bb       	out	0x18, r24	; 24
     a80:	08 95       	ret

00000a82 <CAN_module_read>:
     a82:	cf 93       	push	r28
     a84:	c8 2f       	mov	r28, r24
     a86:	0e 94 3c 05 	call	0xa78	; 0xa78 <CAN_module_activate_cs>
     a8a:	83 e0       	ldi	r24, 0x03	; 3
     a8c:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     a90:	8c 2f       	mov	r24, r28
     a92:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     a96:	0e 94 89 0b 	call	0x1712	; 0x1712 <SPI_Recieve>
     a9a:	c8 2f       	mov	r28, r24
     a9c:	0e 94 3e 05 	call	0xa7c	; 0xa7c <CAN_module_deactivate_cs>
     aa0:	8c 2f       	mov	r24, r28
     aa2:	cf 91       	pop	r28
     aa4:	08 95       	ret

00000aa6 <CAN_module_write>:
     aa6:	cf 93       	push	r28
     aa8:	df 93       	push	r29
     aaa:	d8 2f       	mov	r29, r24
     aac:	c6 2f       	mov	r28, r22
     aae:	0e 94 3c 05 	call	0xa78	; 0xa78 <CAN_module_activate_cs>
     ab2:	82 e0       	ldi	r24, 0x02	; 2
     ab4:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     ab8:	8d 2f       	mov	r24, r29
     aba:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     abe:	8c 2f       	mov	r24, r28
     ac0:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     ac4:	0e 94 3e 05 	call	0xa7c	; 0xa7c <CAN_module_deactivate_cs>
     ac8:	df 91       	pop	r29
     aca:	cf 91       	pop	r28
     acc:	08 95       	ret

00000ace <CAN_module_reset>:
     ace:	0e 94 3c 05 	call	0xa78	; 0xa78 <CAN_module_activate_cs>
     ad2:	80 ec       	ldi	r24, 0xC0	; 192
     ad4:	0e 94 85 0b 	call	0x170a	; 0x170a <SPI_Transmit>
     ad8:	0e 94 3e 05 	call	0xa7c	; 0xa7c <CAN_module_deactivate_cs>
     adc:	83 ec       	ldi	r24, 0xC3	; 195
     ade:	99 e0       	ldi	r25, 0x09	; 9
     ae0:	01 97       	sbiw	r24, 0x01	; 1
     ae2:	f1 f7       	brne	.-4      	; 0xae0 <CAN_module_reset+0x12>
     ae4:	00 c0       	rjmp	.+0      	; 0xae6 <CAN_module_reset+0x18>
     ae6:	00 00       	nop
     ae8:	08 95       	ret

00000aea <CAN_module_init>:
	
}

void CAN_module_init(uint8_t mode){
     aea:	cf 93       	push	r28
     aec:	df 93       	push	r29
     aee:	d8 2f       	mov	r29, r24
	uint8_t val;
	SPI_Init();
     af0:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <SPI_Init>
	
	CAN_module_reset();
     af4:	0e 94 67 05 	call	0xace	; 0xace <CAN_module_reset>
	
	val = CAN_module_read(MCP_CANSTAT);
     af8:	8e e0       	ldi	r24, 0x0E	; 14
     afa:	0e 94 41 05 	call	0xa82	; 0xa82 <CAN_module_read>
	uint8_t mode_bits = (val & MODE_MASK);
     afe:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_CONFIG){
     b00:	80 38       	cpi	r24, 0x80	; 128
     b02:	61 f0       	breq	.+24     	; 0xb1c <CAN_module_init+0x32>
	printf("MCP2515 is NOT in Configuration mode after reset! Its config bits are %x\n\r", mode_bits);
     b04:	1f 92       	push	r1
     b06:	8f 93       	push	r24
     b08:	86 e7       	ldi	r24, 0x76	; 118
     b0a:	91 e0       	ldi	r25, 0x01	; 1
     b0c:	9f 93       	push	r25
     b0e:	8f 93       	push	r24
     b10:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
     b14:	0f 90       	pop	r0
     b16:	0f 90       	pop	r0
     b18:	0f 90       	pop	r0
     b1a:	0f 90       	pop	r0
	//return(1);
	}
	
	CAN_module_write(MCP_CANCTRL, mode);
     b1c:	6d 2f       	mov	r22, r29
     b1e:	8f e0       	ldi	r24, 0x0F	; 15
     b20:	0e 94 53 05 	call	0xaa6	; 0xaa6 <CAN_module_write>
	
	val = CAN_module_read(MCP_CANSTAT);
     b24:	8e e0       	ldi	r24, 0x0E	; 14
     b26:	0e 94 41 05 	call	0xa82	; 0xa82 <CAN_module_read>
     b2a:	c8 2f       	mov	r28, r24
	printf("%x\n\r", val);
     b2c:	1f 92       	push	r1
     b2e:	8f 93       	push	r24
     b30:	8c eb       	ldi	r24, 0xBC	; 188
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	9f 93       	push	r25
     b36:	8f 93       	push	r24
     b38:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	mode_bits = (val & MODE_MASK);
     b3c:	c0 7e       	andi	r28, 0xE0	; 224
	if(mode_bits != mode){
     b3e:	0f 90       	pop	r0
     b40:	0f 90       	pop	r0
     b42:	0f 90       	pop	r0
     b44:	0f 90       	pop	r0
     b46:	dc 17       	cp	r29, r28
     b48:	81 f0       	breq	.+32     	; 0xb6a <CAN_module_init+0x80>
	
	printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n\r", mode_bits);
     b4a:	1f 92       	push	r1
     b4c:	cf 93       	push	r28
     b4e:	81 ec       	ldi	r24, 0xC1	; 193
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	9f 93       	push	r25
     b54:	8f 93       	push	r24
     b56:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("\n!\n");
     b5a:	86 e0       	ldi	r24, 0x06	; 6
     b5c:	92 e0       	ldi	r25, 0x02	; 2
     b5e:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <puts>
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	0f 90       	pop	r0
     b68:	0f 90       	pop	r0
	//return(1);
	}
	
	
	//return(0);
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	08 95       	ret

00000b70 <main>:
#define BAUD 9600
#define MYBURR F_CPU/16/BAUD-1


int main(){
	MCUCR = (1<<SRE);
     b70:	80 e8       	ldi	r24, 0x80	; 128
     b72:	85 bf       	out	0x35, r24	; 53
	uart_start(MYBURR);
     b74:	8f e1       	ldi	r24, 0x1F	; 31
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 8e 0b 	call	0x171c	; 0x171c <uart_start>
	fdevopen(&uart_transmit, &uart_recieve);
     b7c:	6e e9       	ldi	r22, 0x9E	; 158
     b7e:	7b e0       	ldi	r23, 0x0B	; 11
     b80:	88 e9       	ldi	r24, 0x98	; 152
     b82:	9b e0       	ldi	r25, 0x0B	; 11
     b84:	0e 94 e1 0d 	call	0x1bc2	; 0x1bc2 <fdevopen>
	
	//Comment
	
	adc_init();
     b88:	0e 94 49 03 	call	0x692	; 0x692 <adc_init>
	OLED_init();
     b8c:	0e 94 39 06 	call	0xc72	; 0xc72 <OLED_init>
	OLED_reset();
     b90:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
	
	while (1)
	{
	CAN_module_init(MODE_LOOPBACK);
     b94:	80 e4       	ldi	r24, 0x40	; 64
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	0e 94 75 05 	call	0xaea	; 0xaea <CAN_module_init>
	
	printf("Joy Y: %d,\t", joyyPercent);
     b9c:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <joyyPercent>
     ba0:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <joyyPercent+0x1>
     ba4:	9f 93       	push	r25
     ba6:	8f 93       	push	r24
     ba8:	89 e0       	ldi	r24, 0x09	; 9
     baa:	92 e0       	ldi	r25, 0x02	; 2
     bac:	9f 93       	push	r25
     bae:	8f 93       	push	r24
     bb0:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Joy X: %d,\t", joyxPercent);
     bb4:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <joyxPercent>
     bb8:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <joyxPercent+0x1>
     bbc:	9f 93       	push	r25
     bbe:	8f 93       	push	r24
     bc0:	85 e1       	ldi	r24, 0x15	; 21
     bc2:	92 e0       	ldi	r25, 0x02	; 2
     bc4:	9f 93       	push	r25
     bc6:	8f 93       	push	r24
     bc8:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Left Slider: %d,  \t", sliderLeft);
     bcc:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <sliderLeft>
     bd0:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <sliderLeft+0x1>
     bd4:	9f 93       	push	r25
     bd6:	8f 93       	push	r24
     bd8:	81 e2       	ldi	r24, 0x21	; 33
     bda:	92 e0       	ldi	r25, 0x02	; 2
     bdc:	9f 93       	push	r25
     bde:	8f 93       	push	r24
     be0:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Right Slider: %d,\t", sliderRight);
     be4:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <sliderRight>
     be8:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <sliderRight+0x1>
     bec:	9f 93       	push	r25
     bee:	8f 93       	push	r24
     bf0:	85 e3       	ldi	r24, 0x35	; 53
     bf2:	92 e0       	ldi	r25, 0x02	; 2
     bf4:	9f 93       	push	r25
     bf6:	8f 93       	push	r24
     bf8:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Left Button: %d, \t", button2State);
     bfc:	80 91 f4 02 	lds	r24, 0x02F4	; 0x8002f4 <button2State>
     c00:	90 91 f5 02 	lds	r25, 0x02F5	; 0x8002f5 <button2State+0x1>
     c04:	9f 93       	push	r25
     c06:	8f 93       	push	r24
     c08:	88 e4       	ldi	r24, 0x48	; 72
     c0a:	92 e0       	ldi	r25, 0x02	; 2
     c0c:	9f 93       	push	r25
     c0e:	8f 93       	push	r24
     c10:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Right button: %d,\t", button1State);
     c14:	80 91 0c 03 	lds	r24, 0x030C	; 0x80030c <button1State>
     c18:	90 91 0d 03 	lds	r25, 0x030D	; 0x80030d <button1State+0x1>
     c1c:	9f 93       	push	r25
     c1e:	8f 93       	push	r24
     c20:	8b e5       	ldi	r24, 0x5B	; 91
     c22:	92 e0       	ldi	r25, 0x02	; 2
     c24:	9f 93       	push	r25
     c26:	8f 93       	push	r24
     c28:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	printf("Joy button: %d\n\r", button3State);
     c2c:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
     c30:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
     c34:	9f 93       	push	r25
     c36:	8f 93       	push	r24
     c38:	8e e6       	ldi	r24, 0x6E	; 110
     c3a:	92 e0       	ldi	r25, 0x02	; 2
     c3c:	9f 93       	push	r25
     c3e:	8f 93       	push	r24
     c40:	0e 94 2c 0e 	call	0x1c58	; 0x1c58 <printf>
	
	//oled_printf("");
	
	main_menu();
     c44:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <main_menu>
     c48:	8d b7       	in	r24, 0x3d	; 61
     c4a:	9e b7       	in	r25, 0x3e	; 62
     c4c:	4c 96       	adiw	r24, 0x1c	; 28
     c4e:	0f b6       	in	r0, 0x3f	; 63
     c50:	f8 94       	cli
     c52:	9e bf       	out	0x3e, r25	; 62
     c54:	0f be       	out	0x3f, r0	; 63
     c56:	8d bf       	out	0x3d, r24	; 61
     c58:	9d cf       	rjmp	.-198    	; 0xb94 <main+0x24>

00000c5a <OLED_Write_Command>:
     c5a:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <oled_command>
     c5e:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <oled_command+0x1>
     c62:	80 83       	st	Z, r24
     c64:	08 95       	ret

00000c66 <OLED_Write_Data>:
     c66:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <oled_data>
     c6a:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <oled_data+0x1>
     c6e:	80 83       	st	Z, r24
     c70:	08 95       	ret

00000c72 <OLED_init>:
     c72:	8e ea       	ldi	r24, 0xAE	; 174
     c74:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c78:	81 ea       	ldi	r24, 0xA1	; 161
     c7a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c7e:	8a ed       	ldi	r24, 0xDA	; 218
     c80:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c84:	82 e1       	ldi	r24, 0x12	; 18
     c86:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c8a:	88 ec       	ldi	r24, 0xC8	; 200
     c8c:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c90:	88 ea       	ldi	r24, 0xA8	; 168
     c92:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c96:	8f e3       	ldi	r24, 0x3F	; 63
     c98:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     c9c:	85 ed       	ldi	r24, 0xD5	; 213
     c9e:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     ca2:	80 e8       	ldi	r24, 0x80	; 128
     ca4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     ca8:	81 e8       	ldi	r24, 0x81	; 129
     caa:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cae:	80 e5       	ldi	r24, 0x50	; 80
     cb0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cb4:	89 ed       	ldi	r24, 0xD9	; 217
     cb6:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cba:	81 e2       	ldi	r24, 0x21	; 33
     cbc:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cc0:	80 e2       	ldi	r24, 0x20	; 32
     cc2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cc6:	82 e0       	ldi	r24, 0x02	; 2
     cc8:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     ccc:	8b ed       	ldi	r24, 0xDB	; 219
     cce:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cd2:	80 e3       	ldi	r24, 0x30	; 48
     cd4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cd8:	8d ea       	ldi	r24, 0xAD	; 173
     cda:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     ce4:	84 ea       	ldi	r24, 0xA4	; 164
     ce6:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cea:	86 ea       	ldi	r24, 0xA6	; 166
     cec:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cf0:	8f ea       	ldi	r24, 0xAF	; 175
     cf2:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     cf6:	08 95       	ret

00000cf8 <oled_is_out_of_bounds>:
     cf8:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <pos+0x1>
     cfc:	88 23       	and	r24, r24
     cfe:	5c f4       	brge	.+22     	; 0xd16 <oled_is_out_of_bounds+0x1e>
     d00:	e7 e1       	ldi	r30, 0x17	; 23
     d02:	f3 e0       	ldi	r31, 0x03	; 3
     d04:	80 58       	subi	r24, 0x80	; 128
     d06:	81 83       	std	Z+1, r24	; 0x01
     d08:	80 81       	ld	r24, Z
     d0a:	8f 5f       	subi	r24, 0xFF	; 255
     d0c:	80 83       	st	Z, r24
     d0e:	88 30       	cpi	r24, 0x08	; 8
     d10:	10 f0       	brcs	.+4      	; 0xd16 <oled_is_out_of_bounds+0x1e>
     d12:	10 92 17 03 	sts	0x0317, r1	; 0x800317 <pos>
     d16:	08 95       	ret

00000d18 <oled_put_char>:
     d18:	1f 93       	push	r17
     d1a:	cf 93       	push	r28
     d1c:	df 93       	push	r29
     d1e:	10 ee       	ldi	r17, 0xE0	; 224
     d20:	18 0f       	add	r17, r24
     d22:	c0 e0       	ldi	r28, 0x00	; 0
     d24:	d0 e0       	ldi	r29, 0x00	; 0
     d26:	1c c0       	rjmp	.+56     	; 0xd60 <oled_put_char+0x48>
     d28:	e1 2f       	mov	r30, r17
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	ee 0f       	add	r30, r30
     d2e:	ff 1f       	adc	r31, r31
     d30:	ee 0f       	add	r30, r30
     d32:	ff 1f       	adc	r31, r31
     d34:	ee 0f       	add	r30, r30
     d36:	ff 1f       	adc	r31, r31
     d38:	ec 0f       	add	r30, r28
     d3a:	fd 1f       	adc	r31, r29
     d3c:	e8 55       	subi	r30, 0x58	; 88
     d3e:	ff 4f       	sbci	r31, 0xFF	; 255
     d40:	85 91       	lpm	r24, Z+
     d42:	94 91       	lpm	r25, Z
     d44:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     d48:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     d4c:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     d50:	e7 e1       	ldi	r30, 0x17	; 23
     d52:	f3 e0       	ldi	r31, 0x03	; 3
     d54:	91 81       	ldd	r25, Z+1	; 0x01
     d56:	89 0f       	add	r24, r25
     d58:	81 83       	std	Z+1, r24	; 0x01
     d5a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <oled_is_out_of_bounds>
     d5e:	21 96       	adiw	r28, 0x01	; 1
     d60:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     d64:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     d68:	c8 17       	cp	r28, r24
     d6a:	d9 07       	cpc	r29, r25
     d6c:	ec f2       	brlt	.-70     	; 0xd28 <oled_put_char+0x10>
     d6e:	80 e0       	ldi	r24, 0x00	; 0
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	1f 91       	pop	r17
     d78:	08 95       	ret

00000d7a <set_addressingMode>:
     d7a:	cf 93       	push	r28
     d7c:	c8 2f       	mov	r28, r24
     d7e:	80 e2       	ldi	r24, 0x20	; 32
     d80:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     d84:	8c 2f       	mov	r24, r28
     d86:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     d8a:	cf 91       	pop	r28
     d8c:	08 95       	ret

00000d8e <OLED_goto_line>:
     d8e:	cf 93       	push	r28
     d90:	c8 2f       	mov	r28, r24
     d92:	88 30       	cpi	r24, 0x08	; 8
     d94:	78 f4       	brcc	.+30     	; 0xdb4 <OLED_goto_line+0x26>
     d96:	80 93 17 03 	sts	0x0317, r24	; 0x800317 <pos>
     d9a:	82 e0       	ldi	r24, 0x02	; 2
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <set_addressingMode>
     da2:	80 eb       	ldi	r24, 0xB0	; 176
     da4:	8c 0f       	add	r24, r28
     da6:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	0e 94 bd 06 	call	0xd7a	; 0xd7a <set_addressingMode>
     db2:	06 c0       	rjmp	.+12     	; 0xdc0 <OLED_goto_line+0x32>
     db4:	8f e7       	ldi	r24, 0x7F	; 127
     db6:	92 e0       	ldi	r25, 0x02	; 2
     db8:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <puts>
     dbc:	80 e0       	ldi	r24, 0x00	; 0
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	cf 91       	pop	r28
     dc2:	08 95       	ret

00000dc4 <OLED_goto_column>:
     dc4:	cf 93       	push	r28
     dc6:	df 93       	push	r29
     dc8:	c8 2f       	mov	r28, r24
     dca:	88 23       	and	r24, r24
     dcc:	b4 f0       	brlt	.+44     	; 0xdfa <OLED_goto_column+0x36>
     dce:	80 93 18 03 	sts	0x0318, r24	; 0x800318 <pos+0x1>
     dd2:	82 e0       	ldi	r24, 0x02	; 2
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	0e 94 bd 06 	call	0xd7a	; 0xd7a <set_addressingMode>
     dda:	dc 2f       	mov	r29, r28
     ddc:	d2 95       	swap	r29
     dde:	df 70       	andi	r29, 0x0F	; 15
     de0:	8c 2f       	mov	r24, r28
     de2:	8f 70       	andi	r24, 0x0F	; 15
     de4:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     de8:	80 e1       	ldi	r24, 0x10	; 16
     dea:	8d 0f       	add	r24, r29
     dec:	0e 94 2d 06 	call	0xc5a	; 0xc5a <OLED_Write_Command>
     df0:	80 e0       	ldi	r24, 0x00	; 0
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 bd 06 	call	0xd7a	; 0xd7a <set_addressingMode>
     df8:	06 c0       	rjmp	.+12     	; 0xe06 <OLED_goto_column+0x42>
     dfa:	82 e9       	ldi	r24, 0x92	; 146
     dfc:	92 e0       	ldi	r25, 0x02	; 2
     dfe:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <puts>
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	df 91       	pop	r29
     e08:	cf 91       	pop	r28
     e0a:	08 95       	ret

00000e0c <OLED_goto_pos>:
     e0c:	cf 93       	push	r28
     e0e:	c6 2f       	mov	r28, r22
     e10:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_goto_line>
     e14:	8c 2f       	mov	r24, r28
     e16:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <OLED_goto_column>
     e1a:	cf 91       	pop	r28
     e1c:	08 95       	ret

00000e1e <OLED_home>:
     e1e:	60 e0       	ldi	r22, 0x00	; 0
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	80 e0       	ldi	r24, 0x00	; 0
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
     e2a:	08 95       	ret

00000e2c <OLED_clear_line>:
     e2c:	cf 93       	push	r28
     e2e:	df 93       	push	r29
     e30:	d8 2f       	mov	r29, r24
     e32:	60 e0       	ldi	r22, 0x00	; 0
     e34:	70 e0       	ldi	r23, 0x00	; 0
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
     e3c:	c0 e0       	ldi	r28, 0x00	; 0
     e3e:	04 c0       	rjmp	.+8      	; 0xe48 <OLED_clear_line+0x1c>
     e40:	80 e0       	ldi	r24, 0x00	; 0
     e42:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     e46:	cf 5f       	subi	r28, 0xFF	; 255
     e48:	cc 23       	and	r28, r28
     e4a:	d4 f7       	brge	.-12     	; 0xe40 <OLED_clear_line+0x14>
     e4c:	8d 2f       	mov	r24, r29
     e4e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_goto_line>
     e52:	df 91       	pop	r29
     e54:	cf 91       	pop	r28
     e56:	08 95       	ret

00000e58 <OLED_reset>:
     e58:	cf 93       	push	r28
     e5a:	c0 e0       	ldi	r28, 0x00	; 0
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <OLED_reset+0x10>
     e5e:	8c 2f       	mov	r24, r28
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	0e 94 16 07 	call	0xe2c	; 0xe2c <OLED_clear_line>
     e66:	cf 5f       	subi	r28, 0xFF	; 255
     e68:	c8 30       	cpi	r28, 0x08	; 8
     e6a:	c8 f3       	brcs	.-14     	; 0xe5e <OLED_reset+0x6>
     e6c:	0e 94 0f 07 	call	0xe1e	; 0xe1e <OLED_home>
     e70:	cf 91       	pop	r28
     e72:	08 95       	ret

00000e74 <OLED_clear_arrow>:
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
     e78:	d0 e0       	ldi	r29, 0x00	; 0
     e7a:	0f c0       	rjmp	.+30     	; 0xe9a <OLED_clear_arrow+0x26>
     e7c:	60 e0       	ldi	r22, 0x00	; 0
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	8d 2f       	mov	r24, r29
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
     e88:	c0 e0       	ldi	r28, 0x00	; 0
     e8a:	04 c0       	rjmp	.+8      	; 0xe94 <OLED_clear_arrow+0x20>
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     e92:	cf 5f       	subi	r28, 0xFF	; 255
     e94:	c8 30       	cpi	r28, 0x08	; 8
     e96:	d0 f3       	brcs	.-12     	; 0xe8c <OLED_clear_arrow+0x18>
     e98:	df 5f       	subi	r29, 0xFF	; 255
     e9a:	d8 30       	cpi	r29, 0x08	; 8
     e9c:	78 f3       	brcs	.-34     	; 0xe7c <OLED_clear_arrow+0x8>
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	08 95       	ret

00000ea4 <OLED_print_arrow>:
     ea4:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
     ea8:	88 e1       	ldi	r24, 0x18	; 24
     eaa:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     eae:	88 e1       	ldi	r24, 0x18	; 24
     eb0:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     eb4:	8e e7       	ldi	r24, 0x7E	; 126
     eb6:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     eba:	8c e3       	ldi	r24, 0x3C	; 60
     ebc:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     ec0:	88 e1       	ldi	r24, 0x18	; 24
     ec2:	0e 94 33 06 	call	0xc66	; 0xc66 <OLED_Write_Data>
     ec6:	08 95       	ret

00000ec8 <oled_printf>:
     ec8:	cf 93       	push	r28
     eca:	df 93       	push	r29
     ecc:	cd b7       	in	r28, 0x3d	; 61
     ece:	de b7       	in	r29, 0x3e	; 62
     ed0:	ae 01       	movw	r20, r28
     ed2:	4b 5f       	subi	r20, 0xFB	; 251
     ed4:	5f 4f       	sbci	r21, 0xFF	; 255
     ed6:	fa 01       	movw	r30, r20
     ed8:	61 91       	ld	r22, Z+
     eda:	71 91       	ld	r23, Z+
     edc:	af 01       	movw	r20, r30
     ede:	88 e0       	ldi	r24, 0x08	; 8
     ee0:	91 e0       	ldi	r25, 0x01	; 1
     ee2:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <vfprintf>
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	08 95       	ret

00000eec <oled_align_centre>:
     eec:	fc 01       	movw	r30, r24
     eee:	01 90       	ld	r0, Z+
     ef0:	00 20       	and	r0, r0
     ef2:	e9 f7       	brne	.-6      	; 0xeee <oled_align_centre+0x2>
     ef4:	31 97       	sbiw	r30, 0x01	; 1
     ef6:	e8 1b       	sub	r30, r24
     ef8:	f9 0b       	sbc	r31, r25
     efa:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     efe:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     f02:	8e 9f       	mul	r24, r30
     f04:	90 01       	movw	r18, r0
     f06:	8f 9f       	mul	r24, r31
     f08:	30 0d       	add	r19, r0
     f0a:	9e 9f       	mul	r25, r30
     f0c:	30 0d       	add	r19, r0
     f0e:	11 24       	eor	r1, r1
     f10:	36 95       	lsr	r19
     f12:	27 95       	ror	r18
     f14:	80 e4       	ldi	r24, 0x40	; 64
     f16:	82 1b       	sub	r24, r18
     f18:	0e 94 e2 06 	call	0xdc4	; 0xdc4 <OLED_goto_column>
     f1c:	08 95       	ret

00000f1e <play_menu>:
// Each submenu is its own function that loops and functions similary like the main menu
void play_menu(void)
{
	while(1)
	{
		OLED_home();
     f1e:	0e 94 0f 07 	call	0xe1e	; 0xe1e <OLED_home>
		oled_align_centre("Play");
     f22:	87 ea       	ldi	r24, 0xA7	; 167
     f24:	92 e0       	ldi	r25, 0x02	; 2
     f26:	0e 94 76 07 	call	0xeec	; 0xeec <oled_align_centre>
		oled_printf("Play");
     f2a:	87 ea       	ldi	r24, 0xA7	; 167
     f2c:	92 e0       	ldi	r25, 0x02	; 2
     f2e:	9f 93       	push	r25
     f30:	8f 93       	push	r24
     f32:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
		OLED_goto_pos(7, 9);
     f36:	69 e0       	ldi	r22, 0x09	; 9
     f38:	87 e0       	ldi	r24, 0x07	; 7
     f3a:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
		oled_printf("Quit");
     f3e:	8c ea       	ldi	r24, 0xAC	; 172
     f40:	92 e0       	ldi	r25, 0x02	; 2
     f42:	9f 93       	push	r25
     f44:	8f 93       	push	r24
     f46:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
     f4a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     f4e:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     f52:	0f 90       	pop	r0
     f54:	0f 90       	pop	r0
     f56:	0f 90       	pop	r0
     f58:	0f 90       	pop	r0
     f5a:	88 3c       	cpi	r24, 0xC8	; 200
     f5c:	91 05       	cpc	r25, r1
     f5e:	dc f4       	brge	.+54     	; 0xf96 <play_menu+0x78>
     f60:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
     f64:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
     f68:	01 97       	sbiw	r24, 0x01	; 1
     f6a:	31 f0       	breq	.+12     	; 0xf78 <play_menu+0x5a>
     f6c:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
     f70:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
     f74:	01 97       	sbiw	r24, 0x01	; 1
     f76:	79 f4       	brne	.+30     	; 0xf96 <play_menu+0x78>
		{
			if (joyy > 100)
     f78:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     f7c:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     f80:	85 36       	cpi	r24, 0x65	; 101
     f82:	91 05       	cpc	r25, r1
     f84:	44 f0       	brlt	.+16     	; 0xf96 <play_menu+0x78>
			{
				flag_down = 0;
     f86:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <flag_down+0x1>
     f8a:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <flag_down>
				flag_up = 0;
     f8e:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_up+0x1>
     f92:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
     f96:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     f9a:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     f9e:	88 3c       	cpi	r24, 0xC8	; 200
     fa0:	91 05       	cpc	r25, r1
     fa2:	1c f1       	brlt	.+70     	; 0xfea <play_menu+0xcc>
     fa4:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
     fa8:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
     fac:	89 2b       	or	r24, r25
     fae:	e9 f4       	brne	.+58     	; 0xfea <play_menu+0xcc>
		{
			arrow_pos--;
     fb0:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
     fb4:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
     fb8:	01 97       	sbiw	r24, 0x01	; 1
     fba:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
     fbe:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_up = 1;
     fc2:	81 e0       	ldi	r24, 0x01	; 1
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <flag_up+0x1>
     fca:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <flag_up>
			OLED_clear_arrow();
     fce:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 0)
     fd2:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
     fd6:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
     fda:	89 2b       	or	r24, r25
     fdc:	31 f4       	brne	.+12     	; 0xfea <play_menu+0xcc>
			{
				arrow_pos = 7;
     fde:	87 e0       	ldi	r24, 0x07	; 7
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
     fe6:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
     fea:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
     fee:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
     ff2:	85 36       	cpi	r24, 0x65	; 101
     ff4:	91 05       	cpc	r25, r1
     ff6:	1c f5       	brge	.+70     	; 0x103e <play_menu+0x120>
     ff8:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
     ffc:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    1000:	89 2b       	or	r24, r25
    1002:	e9 f4       	brne	.+58     	; 0x103e <play_menu+0x120>
		{
			arrow_pos++;
    1004:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    1008:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    1012:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_down = 1;
    1016:	81 e0       	ldi	r24, 0x01	; 1
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <flag_down+0x1>
    101e:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <flag_down>
			OLED_clear_arrow();
    1022:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 8)
    1026:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    102a:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    102e:	08 97       	sbiw	r24, 0x08	; 8
    1030:	31 f4       	brne	.+12     	; 0x103e <play_menu+0x120>
			{
				arrow_pos = 1;
    1032:	81 e0       	ldi	r24, 0x01	; 1
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    103a:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		switch (arrow_pos)
    103e:	e0 91 19 03 	lds	r30, 0x0319	; 0x800319 <arrow_pos>
    1042:	f0 91 1a 03 	lds	r31, 0x031A	; 0x80031a <arrow_pos+0x1>
    1046:	31 97       	sbiw	r30, 0x01	; 1
    1048:	e7 30       	cpi	r30, 0x07	; 7
    104a:	f1 05       	cpc	r31, r1
    104c:	a0 f5       	brcc	.+104    	; 0x10b6 <play_menu+0x198>
    104e:	e8 5c       	subi	r30, 0xC8	; 200
    1050:	ff 4f       	sbci	r31, 0xFF	; 255
    1052:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__tablejump2__>
		{
		case 1:
			arrow = 1;
    1056:	81 e0       	ldi	r24, 0x01	; 1
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    105e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1062:	29 c0       	rjmp	.+82     	; 0x10b6 <play_menu+0x198>
		case 2:
			arrow = 2;
    1064:	82 e0       	ldi	r24, 0x02	; 2
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    106c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1070:	22 c0       	rjmp	.+68     	; 0x10b6 <play_menu+0x198>
		case 3:
			arrow = 3;
    1072:	83 e0       	ldi	r24, 0x03	; 3
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    107a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    107e:	1b c0       	rjmp	.+54     	; 0x10b6 <play_menu+0x198>
		case 4:
			arrow = 4;
    1080:	84 e0       	ldi	r24, 0x04	; 4
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1088:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    108c:	14 c0       	rjmp	.+40     	; 0x10b6 <play_menu+0x198>
		case 5:
			arrow = 5;
    108e:	85 e0       	ldi	r24, 0x05	; 5
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1096:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    109a:	0d c0       	rjmp	.+26     	; 0x10b6 <play_menu+0x198>
		case 6:
			arrow = 6;
    109c:	86 e0       	ldi	r24, 0x06	; 6
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10a4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10a8:	06 c0       	rjmp	.+12     	; 0x10b6 <play_menu+0x198>
		case 7:
			arrow = 7;
    10aa:	87 e0       	ldi	r24, 0x07	; 7
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10b2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    10b6:	60 e0       	ldi	r22, 0x00	; 0
    10b8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    10bc:	0e 94 52 07 	call	0xea4	; 0xea4 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    10c0:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    10c4:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    10c8:	01 97       	sbiw	r24, 0x01	; 1
    10ca:	09 f0       	breq	.+2      	; 0x10ce <play_menu+0x1b0>
    10cc:	28 cf       	rjmp	.-432    	; 0xf1e <play_menu>
    10ce:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    10d2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    10d6:	07 97       	sbiw	r24, 0x07	; 7
    10d8:	09 f0       	breq	.+2      	; 0x10dc <play_menu+0x1be>
    10da:	21 cf       	rjmp	.-446    	; 0xf1e <play_menu>
		{
			arrow = 1;
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10e4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    10e8:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    10ec:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
    10f0:	08 95       	ret

000010f2 <hs_menu>:
}

void hs_menu(void)
{
	arrow_pos = 1;
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    10fa:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	while(1)
	{
		OLED_home();
    10fe:	0e 94 0f 07 	call	0xe1e	; 0xe1e <OLED_home>
		oled_align_centre("High scores");
    1102:	81 eb       	ldi	r24, 0xB1	; 177
    1104:	92 e0       	ldi	r25, 0x02	; 2
    1106:	0e 94 76 07 	call	0xeec	; 0xeec <oled_align_centre>
		oled_printf("High scores");
    110a:	81 eb       	ldi	r24, 0xB1	; 177
    110c:	92 e0       	ldi	r25, 0x02	; 2
    110e:	9f 93       	push	r25
    1110:	8f 93       	push	r24
    1112:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
		OLED_goto_pos(7, 9);
    1116:	69 e0       	ldi	r22, 0x09	; 9
    1118:	87 e0       	ldi	r24, 0x07	; 7
    111a:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
		oled_printf("Quit");
    111e:	8c ea       	ldi	r24, 0xAC	; 172
    1120:	92 e0       	ldi	r25, 0x02	; 2
    1122:	9f 93       	push	r25
    1124:	8f 93       	push	r24
    1126:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    112a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    112e:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1132:	0f 90       	pop	r0
    1134:	0f 90       	pop	r0
    1136:	0f 90       	pop	r0
    1138:	0f 90       	pop	r0
    113a:	88 3c       	cpi	r24, 0xC8	; 200
    113c:	91 05       	cpc	r25, r1
    113e:	dc f4       	brge	.+54     	; 0x1176 <hs_menu+0x84>
    1140:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    1144:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    1148:	01 97       	sbiw	r24, 0x01	; 1
    114a:	31 f0       	breq	.+12     	; 0x1158 <hs_menu+0x66>
    114c:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    1150:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    1154:	01 97       	sbiw	r24, 0x01	; 1
    1156:	79 f4       	brne	.+30     	; 0x1176 <hs_menu+0x84>
		{
			if (joyy > 100)
    1158:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    115c:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1160:	85 36       	cpi	r24, 0x65	; 101
    1162:	91 05       	cpc	r25, r1
    1164:	44 f0       	brlt	.+16     	; 0x1176 <hs_menu+0x84>
			{
				flag_down = 0;
    1166:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <flag_down+0x1>
    116a:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <flag_down>
				flag_up = 0;
    116e:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_up+0x1>
    1172:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    1176:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    117a:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    117e:	88 3c       	cpi	r24, 0xC8	; 200
    1180:	91 05       	cpc	r25, r1
    1182:	1c f1       	brlt	.+70     	; 0x11ca <hs_menu+0xd8>
    1184:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    1188:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    118c:	89 2b       	or	r24, r25
    118e:	e9 f4       	brne	.+58     	; 0x11ca <hs_menu+0xd8>
		{
			arrow_pos--;
    1190:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    1194:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    1198:	01 97       	sbiw	r24, 0x01	; 1
    119a:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    119e:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_up = 1;
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	90 e0       	ldi	r25, 0x00	; 0
    11a6:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <flag_up+0x1>
    11aa:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <flag_up>
			OLED_clear_arrow();
    11ae:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 0)
    11b2:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    11b6:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    11ba:	89 2b       	or	r24, r25
    11bc:	31 f4       	brne	.+12     	; 0x11ca <hs_menu+0xd8>
			{
				arrow_pos = 7;
    11be:	87 e0       	ldi	r24, 0x07	; 7
    11c0:	90 e0       	ldi	r25, 0x00	; 0
    11c2:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    11c6:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    11ca:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    11ce:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    11d2:	85 36       	cpi	r24, 0x65	; 101
    11d4:	91 05       	cpc	r25, r1
    11d6:	1c f5       	brge	.+70     	; 0x121e <hs_menu+0x12c>
    11d8:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    11dc:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    11e0:	89 2b       	or	r24, r25
    11e2:	e9 f4       	brne	.+58     	; 0x121e <hs_menu+0x12c>
		{
			arrow_pos++;
    11e4:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    11e8:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    11ec:	01 96       	adiw	r24, 0x01	; 1
    11ee:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    11f2:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_down = 1;
    11f6:	81 e0       	ldi	r24, 0x01	; 1
    11f8:	90 e0       	ldi	r25, 0x00	; 0
    11fa:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <flag_down+0x1>
    11fe:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <flag_down>
			OLED_clear_arrow();
    1202:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 8)
    1206:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    120a:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    120e:	08 97       	sbiw	r24, 0x08	; 8
    1210:	31 f4       	brne	.+12     	; 0x121e <hs_menu+0x12c>
			{
				arrow_pos = 1;
    1212:	81 e0       	ldi	r24, 0x01	; 1
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    121a:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		switch (arrow_pos)
    121e:	e0 91 19 03 	lds	r30, 0x0319	; 0x800319 <arrow_pos>
    1222:	f0 91 1a 03 	lds	r31, 0x031A	; 0x80031a <arrow_pos+0x1>
    1226:	31 97       	sbiw	r30, 0x01	; 1
    1228:	e7 30       	cpi	r30, 0x07	; 7
    122a:	f1 05       	cpc	r31, r1
    122c:	a0 f5       	brcc	.+104    	; 0x1296 <hs_menu+0x1a4>
    122e:	e1 5c       	subi	r30, 0xC1	; 193
    1230:	ff 4f       	sbci	r31, 0xFF	; 255
    1232:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__tablejump2__>
		{
			case 1:
			arrow = 1;
    1236:	81 e0       	ldi	r24, 0x01	; 1
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    123e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1242:	29 c0       	rjmp	.+82     	; 0x1296 <hs_menu+0x1a4>
			case 2:
			arrow = 2;
    1244:	82 e0       	ldi	r24, 0x02	; 2
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    124c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1250:	22 c0       	rjmp	.+68     	; 0x1296 <hs_menu+0x1a4>
			case 3:
			arrow = 3;
    1252:	83 e0       	ldi	r24, 0x03	; 3
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    125a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    125e:	1b c0       	rjmp	.+54     	; 0x1296 <hs_menu+0x1a4>
			case 4:
			arrow = 4;
    1260:	84 e0       	ldi	r24, 0x04	; 4
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1268:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    126c:	14 c0       	rjmp	.+40     	; 0x1296 <hs_menu+0x1a4>
			case 5:
			arrow = 5;
    126e:	85 e0       	ldi	r24, 0x05	; 5
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1276:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    127a:	0d c0       	rjmp	.+26     	; 0x1296 <hs_menu+0x1a4>
			case 6:
			arrow = 6;
    127c:	86 e0       	ldi	r24, 0x06	; 6
    127e:	90 e0       	ldi	r25, 0x00	; 0
    1280:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1284:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1288:	06 c0       	rjmp	.+12     	; 0x1296 <hs_menu+0x1a4>
			case 7:
			arrow = 7;
    128a:	87 e0       	ldi	r24, 0x07	; 7
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1292:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    129c:	0e 94 52 07 	call	0xea4	; 0xea4 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    12a0:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    12a4:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    12a8:	01 97       	sbiw	r24, 0x01	; 1
    12aa:	09 f0       	breq	.+2      	; 0x12ae <hs_menu+0x1bc>
    12ac:	28 cf       	rjmp	.-432    	; 0x10fe <hs_menu+0xc>
    12ae:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    12b2:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    12b6:	07 97       	sbiw	r24, 0x07	; 7
    12b8:	09 f0       	breq	.+2      	; 0x12bc <hs_menu+0x1ca>
    12ba:	21 cf       	rjmp	.-446    	; 0x10fe <hs_menu+0xc>
		{
			arrow = 1;
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12c4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    12c8:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    12cc:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
    12d0:	08 95       	ret

000012d2 <diff_menu>:
}

void diff_menu(void)
{
	arrow_pos = 1;
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    12da:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	while(1)
	{
		OLED_home();
    12de:	0e 94 0f 07 	call	0xe1e	; 0xe1e <OLED_home>
		oled_align_centre("Difficulty");
    12e2:	8d eb       	ldi	r24, 0xBD	; 189
    12e4:	92 e0       	ldi	r25, 0x02	; 2
    12e6:	0e 94 76 07 	call	0xeec	; 0xeec <oled_align_centre>
		oled_printf("Difficulty");
    12ea:	8d eb       	ldi	r24, 0xBD	; 189
    12ec:	92 e0       	ldi	r25, 0x02	; 2
    12ee:	9f 93       	push	r25
    12f0:	8f 93       	push	r24
    12f2:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
		OLED_goto_pos(7, 9);
    12f6:	69 e0       	ldi	r22, 0x09	; 9
    12f8:	87 e0       	ldi	r24, 0x07	; 7
    12fa:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
		oled_printf("Back");
    12fe:	88 ec       	ldi	r24, 0xC8	; 200
    1300:	92 e0       	ldi	r25, 0x02	; 2
    1302:	9f 93       	push	r25
    1304:	8f 93       	push	r24
    1306:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    130a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    130e:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1312:	0f 90       	pop	r0
    1314:	0f 90       	pop	r0
    1316:	0f 90       	pop	r0
    1318:	0f 90       	pop	r0
    131a:	88 3c       	cpi	r24, 0xC8	; 200
    131c:	91 05       	cpc	r25, r1
    131e:	dc f4       	brge	.+54     	; 0x1356 <diff_menu+0x84>
    1320:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    1324:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    1328:	01 97       	sbiw	r24, 0x01	; 1
    132a:	31 f0       	breq	.+12     	; 0x1338 <diff_menu+0x66>
    132c:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    1330:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	79 f4       	brne	.+30     	; 0x1356 <diff_menu+0x84>
		{
			if (joyy > 100)
    1338:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    133c:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1340:	85 36       	cpi	r24, 0x65	; 101
    1342:	91 05       	cpc	r25, r1
    1344:	44 f0       	brlt	.+16     	; 0x1356 <diff_menu+0x84>
			{
				flag_down = 0;
    1346:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <flag_down+0x1>
    134a:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <flag_down>
				flag_up = 0;
    134e:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_up+0x1>
    1352:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    1356:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    135a:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    135e:	88 3c       	cpi	r24, 0xC8	; 200
    1360:	91 05       	cpc	r25, r1
    1362:	1c f1       	brlt	.+70     	; 0x13aa <diff_menu+0xd8>
    1364:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    1368:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    136c:	89 2b       	or	r24, r25
    136e:	e9 f4       	brne	.+58     	; 0x13aa <diff_menu+0xd8>
		{
			arrow_pos--;
    1370:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    1374:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    1378:	01 97       	sbiw	r24, 0x01	; 1
    137a:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    137e:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_up = 1;
    1382:	81 e0       	ldi	r24, 0x01	; 1
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <flag_up+0x1>
    138a:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <flag_up>
			OLED_clear_arrow();
    138e:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 0)
    1392:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    1396:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    139a:	89 2b       	or	r24, r25
    139c:	31 f4       	brne	.+12     	; 0x13aa <diff_menu+0xd8>
			{
				arrow_pos = 7;
    139e:	87 e0       	ldi	r24, 0x07	; 7
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    13a6:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    13aa:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    13ae:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    13b2:	85 36       	cpi	r24, 0x65	; 101
    13b4:	91 05       	cpc	r25, r1
    13b6:	1c f5       	brge	.+70     	; 0x13fe <diff_menu+0x12c>
    13b8:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    13bc:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    13c0:	89 2b       	or	r24, r25
    13c2:	e9 f4       	brne	.+58     	; 0x13fe <diff_menu+0x12c>
		{
			arrow_pos++;
    13c4:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    13c8:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    13cc:	01 96       	adiw	r24, 0x01	; 1
    13ce:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    13d2:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			flag_down = 1;
    13d6:	81 e0       	ldi	r24, 0x01	; 1
    13d8:	90 e0       	ldi	r25, 0x00	; 0
    13da:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <flag_down+0x1>
    13de:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <flag_down>
			OLED_clear_arrow();
    13e2:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			if (arrow_pos == 8)
    13e6:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    13ea:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    13ee:	08 97       	sbiw	r24, 0x08	; 8
    13f0:	31 f4       	brne	.+12     	; 0x13fe <diff_menu+0x12c>
			{
				arrow_pos = 1;
    13f2:	81 e0       	ldi	r24, 0x01	; 1
    13f4:	90 e0       	ldi	r25, 0x00	; 0
    13f6:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    13fa:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
			}
		}

		switch (arrow_pos)
    13fe:	e0 91 19 03 	lds	r30, 0x0319	; 0x800319 <arrow_pos>
    1402:	f0 91 1a 03 	lds	r31, 0x031A	; 0x80031a <arrow_pos+0x1>
    1406:	31 97       	sbiw	r30, 0x01	; 1
    1408:	e7 30       	cpi	r30, 0x07	; 7
    140a:	f1 05       	cpc	r31, r1
    140c:	a0 f5       	brcc	.+104    	; 0x1476 <diff_menu+0x1a4>
    140e:	ea 5b       	subi	r30, 0xBA	; 186
    1410:	ff 4f       	sbci	r31, 0xFF	; 255
    1412:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__tablejump2__>
		{
			case 1:
			arrow = 1;
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    141e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1422:	29 c0       	rjmp	.+82     	; 0x1476 <diff_menu+0x1a4>
			case 2:
			arrow = 2;
    1424:	82 e0       	ldi	r24, 0x02	; 2
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    142c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1430:	22 c0       	rjmp	.+68     	; 0x1476 <diff_menu+0x1a4>
			case 3:
			arrow = 3;
    1432:	83 e0       	ldi	r24, 0x03	; 3
    1434:	90 e0       	ldi	r25, 0x00	; 0
    1436:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    143a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    143e:	1b c0       	rjmp	.+54     	; 0x1476 <diff_menu+0x1a4>
			case 4:
			arrow = 4;
    1440:	84 e0       	ldi	r24, 0x04	; 4
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1448:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    144c:	14 c0       	rjmp	.+40     	; 0x1476 <diff_menu+0x1a4>
			case 5:
			arrow = 5;
    144e:	85 e0       	ldi	r24, 0x05	; 5
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1456:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    145a:	0d c0       	rjmp	.+26     	; 0x1476 <diff_menu+0x1a4>
			case 6:
			arrow = 6;
    145c:	86 e0       	ldi	r24, 0x06	; 6
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1464:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1468:	06 c0       	rjmp	.+12     	; 0x1476 <diff_menu+0x1a4>
			case 7:
			arrow = 7;
    146a:	87 e0       	ldi	r24, 0x07	; 7
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1472:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    1476:	60 e0       	ldi	r22, 0x00	; 0
    1478:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    147c:	0e 94 52 07 	call	0xea4	; 0xea4 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    1480:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    1484:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    1488:	01 97       	sbiw	r24, 0x01	; 1
    148a:	09 f0       	breq	.+2      	; 0x148e <diff_menu+0x1bc>
    148c:	28 cf       	rjmp	.-432    	; 0x12de <diff_menu+0xc>
    148e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    1492:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    1496:	07 97       	sbiw	r24, 0x07	; 7
    1498:	09 f0       	breq	.+2      	; 0x149c <diff_menu+0x1ca>
    149a:	21 cf       	rjmp	.-446    	; 0x12de <diff_menu+0xc>
		{
			arrow = 1;
    149c:	81 e0       	ldi	r24, 0x01	; 1
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    14a4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    14a8:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    14ac:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
    14b0:	08 95       	ret

000014b2 <main_menu>:
//int oled_update = 1;

void main_menu()
{
    // Run right after bootup after a oled_reset() to clear screen
	OLED_home();
    14b2:	0e 94 0f 07 	call	0xe1e	; 0xe1e <OLED_home>
    oled_align_centre("Main menu");
    14b6:	8d ec       	ldi	r24, 0xCD	; 205
    14b8:	92 e0       	ldi	r25, 0x02	; 2
    14ba:	0e 94 76 07 	call	0xeec	; 0xeec <oled_align_centre>
    oled_printf("Main menu");
    14be:	8d ec       	ldi	r24, 0xCD	; 205
    14c0:	92 e0       	ldi	r25, 0x02	; 2
    14c2:	9f 93       	push	r25
    14c4:	8f 93       	push	r24
    14c6:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
    OLED_goto_pos(1, 9);
    14ca:	69 e0       	ldi	r22, 0x09	; 9
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
    oled_printf("Play");
    14d2:	87 ea       	ldi	r24, 0xA7	; 167
    14d4:	92 e0       	ldi	r25, 0x02	; 2
    14d6:	9f 93       	push	r25
    14d8:	8f 93       	push	r24
    14da:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
    OLED_goto_pos(2, 9);
    14de:	69 e0       	ldi	r22, 0x09	; 9
    14e0:	82 e0       	ldi	r24, 0x02	; 2
    14e2:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
    oled_printf("High scores");
    14e6:	81 eb       	ldi	r24, 0xB1	; 177
    14e8:	92 e0       	ldi	r25, 0x02	; 2
    14ea:	9f 93       	push	r25
    14ec:	8f 93       	push	r24
    14ee:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>
    OLED_goto_pos(3, 9);
    14f2:	69 e0       	ldi	r22, 0x09	; 9
    14f4:	83 e0       	ldi	r24, 0x03	; 3
    14f6:	0e 94 06 07 	call	0xe0c	; 0xe0c <OLED_goto_pos>
    oled_printf("Difficulty");
    14fa:	8d eb       	ldi	r24, 0xBD	; 189
    14fc:	92 e0       	ldi	r25, 0x02	; 2
    14fe:	9f 93       	push	r25
    1500:	8f 93       	push	r24
    1502:	0e 94 64 07 	call	0xec8	; 0xec8 <oled_printf>

    // Use the joystick to navigate the menus, the joystick needs to be above or below a certain treshold to update the arrow and also to only be activated once on every joystick move
    if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1506:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    150a:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    150e:	2d b7       	in	r18, 0x3d	; 61
    1510:	3e b7       	in	r19, 0x3e	; 62
    1512:	28 5f       	subi	r18, 0xF8	; 248
    1514:	3f 4f       	sbci	r19, 0xFF	; 255
    1516:	0f b6       	in	r0, 0x3f	; 63
    1518:	f8 94       	cli
    151a:	3e bf       	out	0x3e, r19	; 62
    151c:	0f be       	out	0x3f, r0	; 63
    151e:	2d bf       	out	0x3d, r18	; 61
    1520:	88 3c       	cpi	r24, 0xC8	; 200
    1522:	91 05       	cpc	r25, r1
    1524:	dc f4       	brge	.+54     	; 0x155c <main_menu+0xaa>
    1526:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    152a:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    152e:	01 97       	sbiw	r24, 0x01	; 1
    1530:	31 f0       	breq	.+12     	; 0x153e <main_menu+0x8c>
    1532:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    1536:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    153a:	01 97       	sbiw	r24, 0x01	; 1
    153c:	79 f4       	brne	.+30     	; 0x155c <main_menu+0xaa>
    {
	    if (joyy > 100)
    153e:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    1542:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1546:	85 36       	cpi	r24, 0x65	; 101
    1548:	91 05       	cpc	r25, r1
    154a:	44 f0       	brlt	.+16     	; 0x155c <main_menu+0xaa>
	    {
		    flag_down = 0;
    154c:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <flag_down+0x1>
    1550:	10 92 dc 02 	sts	0x02DC, r1	; 0x8002dc <flag_down>
		    flag_up = 0;
    1554:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_up+0x1>
    1558:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <flag_up>
	    }
    }

    if (joyy >= 200 && flag_up == 0)
    155c:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    1560:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    1564:	88 3c       	cpi	r24, 0xC8	; 200
    1566:	91 05       	cpc	r25, r1
    1568:	1c f1       	brlt	.+70     	; 0x15b0 <main_menu+0xfe>
    156a:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <flag_up>
    156e:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <flag_up+0x1>
    1572:	89 2b       	or	r24, r25
    1574:	e9 f4       	brne	.+58     	; 0x15b0 <main_menu+0xfe>
    {
	    arrow_pos--;
    1576:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    157a:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    157e:	01 97       	sbiw	r24, 0x01	; 1
    1580:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    1584:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	    flag_up = 1;
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <flag_up+0x1>
    1590:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <flag_up>
		OLED_clear_arrow();
    1594:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
	    if (arrow_pos == 0)
    1598:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    159c:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    15a0:	89 2b       	or	r24, r25
    15a2:	31 f4       	brne	.+12     	; 0x15b0 <main_menu+0xfe>
	    {
		    arrow_pos = 7;
    15a4:	87 e0       	ldi	r24, 0x07	; 7
    15a6:	90 e0       	ldi	r25, 0x00	; 0
    15a8:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    15ac:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	    }
    }

    if (joyy <= 100 && flag_down == 0)
    15b0:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <joyy>
    15b4:	90 91 f3 02 	lds	r25, 0x02F3	; 0x8002f3 <joyy+0x1>
    15b8:	85 36       	cpi	r24, 0x65	; 101
    15ba:	91 05       	cpc	r25, r1
    15bc:	1c f5       	brge	.+70     	; 0x1604 <main_menu+0x152>
    15be:	80 91 dc 02 	lds	r24, 0x02DC	; 0x8002dc <flag_down>
    15c2:	90 91 dd 02 	lds	r25, 0x02DD	; 0x8002dd <flag_down+0x1>
    15c6:	89 2b       	or	r24, r25
    15c8:	e9 f4       	brne	.+58     	; 0x1604 <main_menu+0x152>
    {
	    arrow_pos++;
    15ca:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    15ce:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    15d2:	01 96       	adiw	r24, 0x01	; 1
    15d4:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    15d8:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	    flag_down = 1;
    15dc:	81 e0       	ldi	r24, 0x01	; 1
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <flag_down+0x1>
    15e4:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <flag_down>
	    OLED_clear_arrow();
    15e8:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
	    if (arrow_pos == 8)
    15ec:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <arrow_pos>
    15f0:	90 91 1a 03 	lds	r25, 0x031A	; 0x80031a <arrow_pos+0x1>
    15f4:	08 97       	sbiw	r24, 0x08	; 8
    15f6:	31 f4       	brne	.+12     	; 0x1604 <main_menu+0x152>
	    {
		    arrow_pos = 1;
    15f8:	81 e0       	ldi	r24, 0x01	; 1
    15fa:	90 e0       	ldi	r25, 0x00	; 0
    15fc:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    1600:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
	    }
    }

    // Based on the arrows position on the menu, submenus can be entered by pressing the joystick button. The submenus run inside while() loops, and when entering a new loop, either break the loop to go back to the main menu or go into a new loop
    // Current design includes another switch-case for the arrowpointer functionality, for deeper submenus, could have to use same system to enter submenus as before, so like nested functions
    switch (arrow_pos)
    1604:	e0 91 19 03 	lds	r30, 0x0319	; 0x800319 <arrow_pos>
    1608:	f0 91 1a 03 	lds	r31, 0x031A	; 0x80031a <arrow_pos+0x1>
    160c:	31 97       	sbiw	r30, 0x01	; 1
    160e:	e7 30       	cpi	r30, 0x07	; 7
    1610:	f1 05       	cpc	r31, r1
    1612:	08 f0       	brcs	.+2      	; 0x1616 <main_menu+0x164>
    1614:	6c c0       	rjmp	.+216    	; 0x16ee <main_menu+0x23c>
    1616:	e3 5b       	subi	r30, 0xB3	; 179
    1618:	ff 4f       	sbci	r31, 0xFF	; 255
    161a:	0c 94 c7 0d 	jmp	0x1b8e	; 0x1b8e <__tablejump2__>
    {
    case 1:
        arrow = 1;
    161e:	81 e0       	ldi	r24, 0x01	; 1
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1626:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1)
    162a:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    162e:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    1632:	01 97       	sbiw	r24, 0x01	; 1
    1634:	09 f0       	breq	.+2      	; 0x1638 <main_menu+0x186>
    1636:	5b c0       	rjmp	.+182    	; 0x16ee <main_menu+0x23c>
        {
            OLED_reset();
    1638:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
            // Only run the play_menu, when exiting the play menu break the loop (might have to break the loop with flag instead of break;)
         
            play_menu();
    163c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <play_menu>
			OLED_clear_arrow();
    1640:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
			arrow_pos = 1;
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    164c:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
    1650:	4e c0       	rjmp	.+156    	; 0x16ee <main_menu+0x23c>
        }
        break;
    case 2:
        arrow = 2;
    1652:	82 e0       	ldi	r24, 0x02	; 2
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    165a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1)
    165e:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    1662:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    1666:	01 97       	sbiw	r24, 0x01	; 1
    1668:	09 f0       	breq	.+2      	; 0x166c <main_menu+0x1ba>
    166a:	41 c0       	rjmp	.+130    	; 0x16ee <main_menu+0x23c>
        {
           OLED_reset();
    166c:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
           // Only run the hs_menu, when exiting the high scores menu break the loop
           hs_menu();
    1670:	0e 94 79 08 	call	0x10f2	; 0x10f2 <hs_menu>
		   OLED_clear_arrow();
    1674:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
		   arrow_pos = 1;
    1678:	81 e0       	ldi	r24, 0x01	; 1
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    1680:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
    1684:	34 c0       	rjmp	.+104    	; 0x16ee <main_menu+0x23c>
        }
        break;
    case 3:
        arrow = 3;
    1686:	83 e0       	ldi	r24, 0x03	; 3
    1688:	90 e0       	ldi	r25, 0x00	; 0
    168a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    168e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1)
    1692:	80 91 15 03 	lds	r24, 0x0315	; 0x800315 <button3State>
    1696:	90 91 16 03 	lds	r25, 0x0316	; 0x800316 <button3State+0x1>
    169a:	01 97       	sbiw	r24, 0x01	; 1
    169c:	41 f5       	brne	.+80     	; 0x16ee <main_menu+0x23c>
        {
            OLED_reset();
    169e:	0e 94 2c 07 	call	0xe58	; 0xe58 <OLED_reset>
            // Only run the diff_menu, when exiting the difficulty menu break the loop
            diff_menu();
    16a2:	0e 94 69 09 	call	0x12d2	; 0x12d2 <diff_menu>
            OLED_clear_arrow();
    16a6:	0e 94 3a 07 	call	0xe74	; 0xe74 <OLED_clear_arrow>
            arrow_pos = 1;
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	90 93 1a 03 	sts	0x031A, r25	; 0x80031a <arrow_pos+0x1>
    16b2:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <arrow_pos>
    16b6:	1b c0       	rjmp	.+54     	; 0x16ee <main_menu+0x23c>
        }
        break;
    case 4:
        arrow = 4;
    16b8:	84 e0       	ldi	r24, 0x04	; 4
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    16c0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>

        break;
    16c4:	14 c0       	rjmp	.+40     	; 0x16ee <main_menu+0x23c>
    case 5:
        arrow = 5;
    16c6:	85 e0       	ldi	r24, 0x05	; 5
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    16ce:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    16d2:	0d c0       	rjmp	.+26     	; 0x16ee <main_menu+0x23c>
    case 6:
        arrow = 6;
    16d4:	86 e0       	ldi	r24, 0x06	; 6
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    16dc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    16e0:	06 c0       	rjmp	.+12     	; 0x16ee <main_menu+0x23c>
    case 7:
        arrow = 7;
    16e2:	87 e0       	ldi	r24, 0x07	; 7
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    16ea:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    }
    OLED_print_arrow(arrow, 0);
    16ee:	60 e0       	ldi	r22, 0x00	; 0
    16f0:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    16f4:	0e 94 52 07 	call	0xea4	; 0xea4 <OLED_print_arrow>
    16f8:	08 95       	ret

000016fa <SPI_Init>:


void SPI_Init(void)
{
	/* Set MOSI and SCK output, all others input */
	DDRB = (1<<PB4)|(1<<PB5)|(1<<PB7);
    16fa:	80 eb       	ldi	r24, 0xB0	; 176
    16fc:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    16fe:	81 e5       	ldi	r24, 0x51	; 81
    1700:	8d b9       	out	0x0d, r24	; 13
	
	set_bit(PORTB, PB4);
    1702:	88 b3       	in	r24, 0x18	; 24
    1704:	80 61       	ori	r24, 0x10	; 16
    1706:	88 bb       	out	0x18, r24	; 24
    1708:	08 95       	ret

0000170a <SPI_Transmit>:
}

void SPI_Transmit(char Data)
{
	/* Start transmission */
	SPDR = Data;
    170a:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
    170c:	77 9b       	sbis	0x0e, 7	; 14
    170e:	fe cf       	rjmp	.-4      	; 0x170c <SPI_Transmit+0x2>
	;
}
    1710:	08 95       	ret

00001712 <SPI_Recieve>:


char SPI_Recieve(void)
{
	/* Start transmission */
	SPDR = 0x00;
    1712:	1f b8       	out	0x0f, r1	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
    1714:	77 9b       	sbis	0x0e, 7	; 14
    1716:	fe cf       	rjmp	.-4      	; 0x1714 <SPI_Recieve+0x2>
	;
	return(SPDR);
    1718:	8f b1       	in	r24, 0x0f	; 15
}
    171a:	08 95       	ret

0000171c <uart_start>:
#include <avr/io.h>


void uart_start(unsigned int ubrr){
	UCSR0A &=~(1<<U2X0);
    171c:	2b b1       	in	r18, 0x0b	; 11
    171e:	2d 7f       	andi	r18, 0xFD	; 253
    1720:	2b b9       	out	0x0b, r18	; 11
	UBRR0H = (unsigned char)(ubrr >> 8);
    1722:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    1724:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    1726:	88 e1       	ldi	r24, 0x18	; 24
    1728:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
    172a:	8e e8       	ldi	r24, 0x8E	; 142
    172c:	80 bd       	out	0x20, r24	; 32
    172e:	08 95       	ret

00001730 <uart_transmit>:
}

int uart_transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
    1730:	5d 9b       	sbis	0x0b, 5	; 11
    1732:	fe cf       	rjmp	.-4      	; 0x1730 <uart_transmit>
	UDR0 = data;
    1734:	8c b9       	out	0x0c, r24	; 12
	return(0);
}
    1736:	80 e0       	ldi	r24, 0x00	; 0
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	08 95       	ret

0000173c <uart_recieve>:

int uart_recieve(void){
	while (!(UCSR0A & (1<<UDRE0)));
    173c:	5d 9b       	sbis	0x0b, 5	; 11
    173e:	fe cf       	rjmp	.-4      	; 0x173c <uart_recieve>
	return(UDR0);
    1740:	8c b1       	in	r24, 0x0c	; 12
}
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	08 95       	ret

00001746 <__subsf3>:
    1746:	50 58       	subi	r21, 0x80	; 128

00001748 <__addsf3>:
    1748:	bb 27       	eor	r27, r27
    174a:	aa 27       	eor	r26, r26
    174c:	0e 94 bb 0b 	call	0x1776	; 0x1776 <__addsf3x>
    1750:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_round>
    1754:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fp_pscA>
    1758:	38 f0       	brcs	.+14     	; 0x1768 <__addsf3+0x20>
    175a:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fp_pscB>
    175e:	20 f0       	brcs	.+8      	; 0x1768 <__addsf3+0x20>
    1760:	39 f4       	brne	.+14     	; 0x1770 <__addsf3+0x28>
    1762:	9f 3f       	cpi	r25, 0xFF	; 255
    1764:	19 f4       	brne	.+6      	; 0x176c <__addsf3+0x24>
    1766:	26 f4       	brtc	.+8      	; 0x1770 <__addsf3+0x28>
    1768:	0c 94 fb 0c 	jmp	0x19f6	; 0x19f6 <__fp_nan>
    176c:	0e f4       	brtc	.+2      	; 0x1770 <__addsf3+0x28>
    176e:	e0 95       	com	r30
    1770:	e7 fb       	bst	r30, 7
    1772:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__fp_inf>

00001776 <__addsf3x>:
    1776:	e9 2f       	mov	r30, r25
    1778:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_split3>
    177c:	58 f3       	brcs	.-42     	; 0x1754 <__addsf3+0xc>
    177e:	ba 17       	cp	r27, r26
    1780:	62 07       	cpc	r22, r18
    1782:	73 07       	cpc	r23, r19
    1784:	84 07       	cpc	r24, r20
    1786:	95 07       	cpc	r25, r21
    1788:	20 f0       	brcs	.+8      	; 0x1792 <__addsf3x+0x1c>
    178a:	79 f4       	brne	.+30     	; 0x17aa <__addsf3x+0x34>
    178c:	a6 f5       	brtc	.+104    	; 0x17f6 <__addsf3x+0x80>
    178e:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_zero>
    1792:	0e f4       	brtc	.+2      	; 0x1796 <__addsf3x+0x20>
    1794:	e0 95       	com	r30
    1796:	0b 2e       	mov	r0, r27
    1798:	ba 2f       	mov	r27, r26
    179a:	a0 2d       	mov	r26, r0
    179c:	0b 01       	movw	r0, r22
    179e:	b9 01       	movw	r22, r18
    17a0:	90 01       	movw	r18, r0
    17a2:	0c 01       	movw	r0, r24
    17a4:	ca 01       	movw	r24, r20
    17a6:	a0 01       	movw	r20, r0
    17a8:	11 24       	eor	r1, r1
    17aa:	ff 27       	eor	r31, r31
    17ac:	59 1b       	sub	r21, r25
    17ae:	99 f0       	breq	.+38     	; 0x17d6 <__addsf3x+0x60>
    17b0:	59 3f       	cpi	r21, 0xF9	; 249
    17b2:	50 f4       	brcc	.+20     	; 0x17c8 <__addsf3x+0x52>
    17b4:	50 3e       	cpi	r21, 0xE0	; 224
    17b6:	68 f1       	brcs	.+90     	; 0x1812 <__addsf3x+0x9c>
    17b8:	1a 16       	cp	r1, r26
    17ba:	f0 40       	sbci	r31, 0x00	; 0
    17bc:	a2 2f       	mov	r26, r18
    17be:	23 2f       	mov	r18, r19
    17c0:	34 2f       	mov	r19, r20
    17c2:	44 27       	eor	r20, r20
    17c4:	58 5f       	subi	r21, 0xF8	; 248
    17c6:	f3 cf       	rjmp	.-26     	; 0x17ae <__addsf3x+0x38>
    17c8:	46 95       	lsr	r20
    17ca:	37 95       	ror	r19
    17cc:	27 95       	ror	r18
    17ce:	a7 95       	ror	r26
    17d0:	f0 40       	sbci	r31, 0x00	; 0
    17d2:	53 95       	inc	r21
    17d4:	c9 f7       	brne	.-14     	; 0x17c8 <__addsf3x+0x52>
    17d6:	7e f4       	brtc	.+30     	; 0x17f6 <__addsf3x+0x80>
    17d8:	1f 16       	cp	r1, r31
    17da:	ba 0b       	sbc	r27, r26
    17dc:	62 0b       	sbc	r22, r18
    17de:	73 0b       	sbc	r23, r19
    17e0:	84 0b       	sbc	r24, r20
    17e2:	ba f0       	brmi	.+46     	; 0x1812 <__addsf3x+0x9c>
    17e4:	91 50       	subi	r25, 0x01	; 1
    17e6:	a1 f0       	breq	.+40     	; 0x1810 <__addsf3x+0x9a>
    17e8:	ff 0f       	add	r31, r31
    17ea:	bb 1f       	adc	r27, r27
    17ec:	66 1f       	adc	r22, r22
    17ee:	77 1f       	adc	r23, r23
    17f0:	88 1f       	adc	r24, r24
    17f2:	c2 f7       	brpl	.-16     	; 0x17e4 <__addsf3x+0x6e>
    17f4:	0e c0       	rjmp	.+28     	; 0x1812 <__addsf3x+0x9c>
    17f6:	ba 0f       	add	r27, r26
    17f8:	62 1f       	adc	r22, r18
    17fa:	73 1f       	adc	r23, r19
    17fc:	84 1f       	adc	r24, r20
    17fe:	48 f4       	brcc	.+18     	; 0x1812 <__addsf3x+0x9c>
    1800:	87 95       	ror	r24
    1802:	77 95       	ror	r23
    1804:	67 95       	ror	r22
    1806:	b7 95       	ror	r27
    1808:	f7 95       	ror	r31
    180a:	9e 3f       	cpi	r25, 0xFE	; 254
    180c:	08 f0       	brcs	.+2      	; 0x1810 <__addsf3x+0x9a>
    180e:	b0 cf       	rjmp	.-160    	; 0x1770 <__addsf3+0x28>
    1810:	93 95       	inc	r25
    1812:	88 0f       	add	r24, r24
    1814:	08 f0       	brcs	.+2      	; 0x1818 <__addsf3x+0xa2>
    1816:	99 27       	eor	r25, r25
    1818:	ee 0f       	add	r30, r30
    181a:	97 95       	ror	r25
    181c:	87 95       	ror	r24
    181e:	08 95       	ret

00001820 <__divsf3>:
    1820:	0e 94 24 0c 	call	0x1848	; 0x1848 <__divsf3x>
    1824:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_round>
    1828:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fp_pscB>
    182c:	58 f0       	brcs	.+22     	; 0x1844 <__divsf3+0x24>
    182e:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fp_pscA>
    1832:	40 f0       	brcs	.+16     	; 0x1844 <__divsf3+0x24>
    1834:	29 f4       	brne	.+10     	; 0x1840 <__divsf3+0x20>
    1836:	5f 3f       	cpi	r21, 0xFF	; 255
    1838:	29 f0       	breq	.+10     	; 0x1844 <__divsf3+0x24>
    183a:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__fp_inf>
    183e:	51 11       	cpse	r21, r1
    1840:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__fp_szero>
    1844:	0c 94 fb 0c 	jmp	0x19f6	; 0x19f6 <__fp_nan>

00001848 <__divsf3x>:
    1848:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_split3>
    184c:	68 f3       	brcs	.-38     	; 0x1828 <__divsf3+0x8>

0000184e <__divsf3_pse>:
    184e:	99 23       	and	r25, r25
    1850:	b1 f3       	breq	.-20     	; 0x183e <__divsf3+0x1e>
    1852:	55 23       	and	r21, r21
    1854:	91 f3       	breq	.-28     	; 0x183a <__divsf3+0x1a>
    1856:	95 1b       	sub	r25, r21
    1858:	55 0b       	sbc	r21, r21
    185a:	bb 27       	eor	r27, r27
    185c:	aa 27       	eor	r26, r26
    185e:	62 17       	cp	r22, r18
    1860:	73 07       	cpc	r23, r19
    1862:	84 07       	cpc	r24, r20
    1864:	38 f0       	brcs	.+14     	; 0x1874 <__divsf3_pse+0x26>
    1866:	9f 5f       	subi	r25, 0xFF	; 255
    1868:	5f 4f       	sbci	r21, 0xFF	; 255
    186a:	22 0f       	add	r18, r18
    186c:	33 1f       	adc	r19, r19
    186e:	44 1f       	adc	r20, r20
    1870:	aa 1f       	adc	r26, r26
    1872:	a9 f3       	breq	.-22     	; 0x185e <__divsf3_pse+0x10>
    1874:	35 d0       	rcall	.+106    	; 0x18e0 <__divsf3_pse+0x92>
    1876:	0e 2e       	mov	r0, r30
    1878:	3a f0       	brmi	.+14     	; 0x1888 <__divsf3_pse+0x3a>
    187a:	e0 e8       	ldi	r30, 0x80	; 128
    187c:	32 d0       	rcall	.+100    	; 0x18e2 <__divsf3_pse+0x94>
    187e:	91 50       	subi	r25, 0x01	; 1
    1880:	50 40       	sbci	r21, 0x00	; 0
    1882:	e6 95       	lsr	r30
    1884:	00 1c       	adc	r0, r0
    1886:	ca f7       	brpl	.-14     	; 0x187a <__divsf3_pse+0x2c>
    1888:	2b d0       	rcall	.+86     	; 0x18e0 <__divsf3_pse+0x92>
    188a:	fe 2f       	mov	r31, r30
    188c:	29 d0       	rcall	.+82     	; 0x18e0 <__divsf3_pse+0x92>
    188e:	66 0f       	add	r22, r22
    1890:	77 1f       	adc	r23, r23
    1892:	88 1f       	adc	r24, r24
    1894:	bb 1f       	adc	r27, r27
    1896:	26 17       	cp	r18, r22
    1898:	37 07       	cpc	r19, r23
    189a:	48 07       	cpc	r20, r24
    189c:	ab 07       	cpc	r26, r27
    189e:	b0 e8       	ldi	r27, 0x80	; 128
    18a0:	09 f0       	breq	.+2      	; 0x18a4 <__divsf3_pse+0x56>
    18a2:	bb 0b       	sbc	r27, r27
    18a4:	80 2d       	mov	r24, r0
    18a6:	bf 01       	movw	r22, r30
    18a8:	ff 27       	eor	r31, r31
    18aa:	93 58       	subi	r25, 0x83	; 131
    18ac:	5f 4f       	sbci	r21, 0xFF	; 255
    18ae:	3a f0       	brmi	.+14     	; 0x18be <__divsf3_pse+0x70>
    18b0:	9e 3f       	cpi	r25, 0xFE	; 254
    18b2:	51 05       	cpc	r21, r1
    18b4:	78 f0       	brcs	.+30     	; 0x18d4 <__divsf3_pse+0x86>
    18b6:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__fp_inf>
    18ba:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__fp_szero>
    18be:	5f 3f       	cpi	r21, 0xFF	; 255
    18c0:	e4 f3       	brlt	.-8      	; 0x18ba <__divsf3_pse+0x6c>
    18c2:	98 3e       	cpi	r25, 0xE8	; 232
    18c4:	d4 f3       	brlt	.-12     	; 0x18ba <__divsf3_pse+0x6c>
    18c6:	86 95       	lsr	r24
    18c8:	77 95       	ror	r23
    18ca:	67 95       	ror	r22
    18cc:	b7 95       	ror	r27
    18ce:	f7 95       	ror	r31
    18d0:	9f 5f       	subi	r25, 0xFF	; 255
    18d2:	c9 f7       	brne	.-14     	; 0x18c6 <__divsf3_pse+0x78>
    18d4:	88 0f       	add	r24, r24
    18d6:	91 1d       	adc	r25, r1
    18d8:	96 95       	lsr	r25
    18da:	87 95       	ror	r24
    18dc:	97 f9       	bld	r25, 7
    18de:	08 95       	ret
    18e0:	e1 e0       	ldi	r30, 0x01	; 1
    18e2:	66 0f       	add	r22, r22
    18e4:	77 1f       	adc	r23, r23
    18e6:	88 1f       	adc	r24, r24
    18e8:	bb 1f       	adc	r27, r27
    18ea:	62 17       	cp	r22, r18
    18ec:	73 07       	cpc	r23, r19
    18ee:	84 07       	cpc	r24, r20
    18f0:	ba 07       	cpc	r27, r26
    18f2:	20 f0       	brcs	.+8      	; 0x18fc <__divsf3_pse+0xae>
    18f4:	62 1b       	sub	r22, r18
    18f6:	73 0b       	sbc	r23, r19
    18f8:	84 0b       	sbc	r24, r20
    18fa:	ba 0b       	sbc	r27, r26
    18fc:	ee 1f       	adc	r30, r30
    18fe:	88 f7       	brcc	.-30     	; 0x18e2 <__divsf3_pse+0x94>
    1900:	e0 95       	com	r30
    1902:	08 95       	ret

00001904 <__fixsfsi>:
    1904:	0e 94 89 0c 	call	0x1912	; 0x1912 <__fixunssfsi>
    1908:	68 94       	set
    190a:	b1 11       	cpse	r27, r1
    190c:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__fp_szero>
    1910:	08 95       	ret

00001912 <__fixunssfsi>:
    1912:	0e 94 25 0d 	call	0x1a4a	; 0x1a4a <__fp_splitA>
    1916:	88 f0       	brcs	.+34     	; 0x193a <__fixunssfsi+0x28>
    1918:	9f 57       	subi	r25, 0x7F	; 127
    191a:	98 f0       	brcs	.+38     	; 0x1942 <__fixunssfsi+0x30>
    191c:	b9 2f       	mov	r27, r25
    191e:	99 27       	eor	r25, r25
    1920:	b7 51       	subi	r27, 0x17	; 23
    1922:	b0 f0       	brcs	.+44     	; 0x1950 <__fixunssfsi+0x3e>
    1924:	e1 f0       	breq	.+56     	; 0x195e <__fixunssfsi+0x4c>
    1926:	66 0f       	add	r22, r22
    1928:	77 1f       	adc	r23, r23
    192a:	88 1f       	adc	r24, r24
    192c:	99 1f       	adc	r25, r25
    192e:	1a f0       	brmi	.+6      	; 0x1936 <__fixunssfsi+0x24>
    1930:	ba 95       	dec	r27
    1932:	c9 f7       	brne	.-14     	; 0x1926 <__fixunssfsi+0x14>
    1934:	14 c0       	rjmp	.+40     	; 0x195e <__fixunssfsi+0x4c>
    1936:	b1 30       	cpi	r27, 0x01	; 1
    1938:	91 f0       	breq	.+36     	; 0x195e <__fixunssfsi+0x4c>
    193a:	0e 94 3f 0d 	call	0x1a7e	; 0x1a7e <__fp_zero>
    193e:	b1 e0       	ldi	r27, 0x01	; 1
    1940:	08 95       	ret
    1942:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_zero>
    1946:	67 2f       	mov	r22, r23
    1948:	78 2f       	mov	r23, r24
    194a:	88 27       	eor	r24, r24
    194c:	b8 5f       	subi	r27, 0xF8	; 248
    194e:	39 f0       	breq	.+14     	; 0x195e <__fixunssfsi+0x4c>
    1950:	b9 3f       	cpi	r27, 0xF9	; 249
    1952:	cc f3       	brlt	.-14     	; 0x1946 <__fixunssfsi+0x34>
    1954:	86 95       	lsr	r24
    1956:	77 95       	ror	r23
    1958:	67 95       	ror	r22
    195a:	b3 95       	inc	r27
    195c:	d9 f7       	brne	.-10     	; 0x1954 <__fixunssfsi+0x42>
    195e:	3e f4       	brtc	.+14     	; 0x196e <__fixunssfsi+0x5c>
    1960:	90 95       	com	r25
    1962:	80 95       	com	r24
    1964:	70 95       	com	r23
    1966:	61 95       	neg	r22
    1968:	7f 4f       	sbci	r23, 0xFF	; 255
    196a:	8f 4f       	sbci	r24, 0xFF	; 255
    196c:	9f 4f       	sbci	r25, 0xFF	; 255
    196e:	08 95       	ret

00001970 <__floatunsisf>:
    1970:	e8 94       	clt
    1972:	09 c0       	rjmp	.+18     	; 0x1986 <__floatsisf+0x12>

00001974 <__floatsisf>:
    1974:	97 fb       	bst	r25, 7
    1976:	3e f4       	brtc	.+14     	; 0x1986 <__floatsisf+0x12>
    1978:	90 95       	com	r25
    197a:	80 95       	com	r24
    197c:	70 95       	com	r23
    197e:	61 95       	neg	r22
    1980:	7f 4f       	sbci	r23, 0xFF	; 255
    1982:	8f 4f       	sbci	r24, 0xFF	; 255
    1984:	9f 4f       	sbci	r25, 0xFF	; 255
    1986:	99 23       	and	r25, r25
    1988:	a9 f0       	breq	.+42     	; 0x19b4 <__floatsisf+0x40>
    198a:	f9 2f       	mov	r31, r25
    198c:	96 e9       	ldi	r25, 0x96	; 150
    198e:	bb 27       	eor	r27, r27
    1990:	93 95       	inc	r25
    1992:	f6 95       	lsr	r31
    1994:	87 95       	ror	r24
    1996:	77 95       	ror	r23
    1998:	67 95       	ror	r22
    199a:	b7 95       	ror	r27
    199c:	f1 11       	cpse	r31, r1
    199e:	f8 cf       	rjmp	.-16     	; 0x1990 <__floatsisf+0x1c>
    19a0:	fa f4       	brpl	.+62     	; 0x19e0 <__floatsisf+0x6c>
    19a2:	bb 0f       	add	r27, r27
    19a4:	11 f4       	brne	.+4      	; 0x19aa <__floatsisf+0x36>
    19a6:	60 ff       	sbrs	r22, 0
    19a8:	1b c0       	rjmp	.+54     	; 0x19e0 <__floatsisf+0x6c>
    19aa:	6f 5f       	subi	r22, 0xFF	; 255
    19ac:	7f 4f       	sbci	r23, 0xFF	; 255
    19ae:	8f 4f       	sbci	r24, 0xFF	; 255
    19b0:	9f 4f       	sbci	r25, 0xFF	; 255
    19b2:	16 c0       	rjmp	.+44     	; 0x19e0 <__floatsisf+0x6c>
    19b4:	88 23       	and	r24, r24
    19b6:	11 f0       	breq	.+4      	; 0x19bc <__floatsisf+0x48>
    19b8:	96 e9       	ldi	r25, 0x96	; 150
    19ba:	11 c0       	rjmp	.+34     	; 0x19de <__floatsisf+0x6a>
    19bc:	77 23       	and	r23, r23
    19be:	21 f0       	breq	.+8      	; 0x19c8 <__floatsisf+0x54>
    19c0:	9e e8       	ldi	r25, 0x8E	; 142
    19c2:	87 2f       	mov	r24, r23
    19c4:	76 2f       	mov	r23, r22
    19c6:	05 c0       	rjmp	.+10     	; 0x19d2 <__floatsisf+0x5e>
    19c8:	66 23       	and	r22, r22
    19ca:	71 f0       	breq	.+28     	; 0x19e8 <__floatsisf+0x74>
    19cc:	96 e8       	ldi	r25, 0x86	; 134
    19ce:	86 2f       	mov	r24, r22
    19d0:	70 e0       	ldi	r23, 0x00	; 0
    19d2:	60 e0       	ldi	r22, 0x00	; 0
    19d4:	2a f0       	brmi	.+10     	; 0x19e0 <__floatsisf+0x6c>
    19d6:	9a 95       	dec	r25
    19d8:	66 0f       	add	r22, r22
    19da:	77 1f       	adc	r23, r23
    19dc:	88 1f       	adc	r24, r24
    19de:	da f7       	brpl	.-10     	; 0x19d6 <__floatsisf+0x62>
    19e0:	88 0f       	add	r24, r24
    19e2:	96 95       	lsr	r25
    19e4:	87 95       	ror	r24
    19e6:	97 f9       	bld	r25, 7
    19e8:	08 95       	ret

000019ea <__fp_inf>:
    19ea:	97 f9       	bld	r25, 7
    19ec:	9f 67       	ori	r25, 0x7F	; 127
    19ee:	80 e8       	ldi	r24, 0x80	; 128
    19f0:	70 e0       	ldi	r23, 0x00	; 0
    19f2:	60 e0       	ldi	r22, 0x00	; 0
    19f4:	08 95       	ret

000019f6 <__fp_nan>:
    19f6:	9f ef       	ldi	r25, 0xFF	; 255
    19f8:	80 ec       	ldi	r24, 0xC0	; 192
    19fa:	08 95       	ret

000019fc <__fp_pscA>:
    19fc:	00 24       	eor	r0, r0
    19fe:	0a 94       	dec	r0
    1a00:	16 16       	cp	r1, r22
    1a02:	17 06       	cpc	r1, r23
    1a04:	18 06       	cpc	r1, r24
    1a06:	09 06       	cpc	r0, r25
    1a08:	08 95       	ret

00001a0a <__fp_pscB>:
    1a0a:	00 24       	eor	r0, r0
    1a0c:	0a 94       	dec	r0
    1a0e:	12 16       	cp	r1, r18
    1a10:	13 06       	cpc	r1, r19
    1a12:	14 06       	cpc	r1, r20
    1a14:	05 06       	cpc	r0, r21
    1a16:	08 95       	ret

00001a18 <__fp_round>:
    1a18:	09 2e       	mov	r0, r25
    1a1a:	03 94       	inc	r0
    1a1c:	00 0c       	add	r0, r0
    1a1e:	11 f4       	brne	.+4      	; 0x1a24 <__fp_round+0xc>
    1a20:	88 23       	and	r24, r24
    1a22:	52 f0       	brmi	.+20     	; 0x1a38 <__fp_round+0x20>
    1a24:	bb 0f       	add	r27, r27
    1a26:	40 f4       	brcc	.+16     	; 0x1a38 <__fp_round+0x20>
    1a28:	bf 2b       	or	r27, r31
    1a2a:	11 f4       	brne	.+4      	; 0x1a30 <__fp_round+0x18>
    1a2c:	60 ff       	sbrs	r22, 0
    1a2e:	04 c0       	rjmp	.+8      	; 0x1a38 <__fp_round+0x20>
    1a30:	6f 5f       	subi	r22, 0xFF	; 255
    1a32:	7f 4f       	sbci	r23, 0xFF	; 255
    1a34:	8f 4f       	sbci	r24, 0xFF	; 255
    1a36:	9f 4f       	sbci	r25, 0xFF	; 255
    1a38:	08 95       	ret

00001a3a <__fp_split3>:
    1a3a:	57 fd       	sbrc	r21, 7
    1a3c:	90 58       	subi	r25, 0x80	; 128
    1a3e:	44 0f       	add	r20, r20
    1a40:	55 1f       	adc	r21, r21
    1a42:	59 f0       	breq	.+22     	; 0x1a5a <__fp_splitA+0x10>
    1a44:	5f 3f       	cpi	r21, 0xFF	; 255
    1a46:	71 f0       	breq	.+28     	; 0x1a64 <__fp_splitA+0x1a>
    1a48:	47 95       	ror	r20

00001a4a <__fp_splitA>:
    1a4a:	88 0f       	add	r24, r24
    1a4c:	97 fb       	bst	r25, 7
    1a4e:	99 1f       	adc	r25, r25
    1a50:	61 f0       	breq	.+24     	; 0x1a6a <__fp_splitA+0x20>
    1a52:	9f 3f       	cpi	r25, 0xFF	; 255
    1a54:	79 f0       	breq	.+30     	; 0x1a74 <__fp_splitA+0x2a>
    1a56:	87 95       	ror	r24
    1a58:	08 95       	ret
    1a5a:	12 16       	cp	r1, r18
    1a5c:	13 06       	cpc	r1, r19
    1a5e:	14 06       	cpc	r1, r20
    1a60:	55 1f       	adc	r21, r21
    1a62:	f2 cf       	rjmp	.-28     	; 0x1a48 <__fp_split3+0xe>
    1a64:	46 95       	lsr	r20
    1a66:	f1 df       	rcall	.-30     	; 0x1a4a <__fp_splitA>
    1a68:	08 c0       	rjmp	.+16     	; 0x1a7a <__fp_splitA+0x30>
    1a6a:	16 16       	cp	r1, r22
    1a6c:	17 06       	cpc	r1, r23
    1a6e:	18 06       	cpc	r1, r24
    1a70:	99 1f       	adc	r25, r25
    1a72:	f1 cf       	rjmp	.-30     	; 0x1a56 <__fp_splitA+0xc>
    1a74:	86 95       	lsr	r24
    1a76:	71 05       	cpc	r23, r1
    1a78:	61 05       	cpc	r22, r1
    1a7a:	08 94       	sec
    1a7c:	08 95       	ret

00001a7e <__fp_zero>:
    1a7e:	e8 94       	clt

00001a80 <__fp_szero>:
    1a80:	bb 27       	eor	r27, r27
    1a82:	66 27       	eor	r22, r22
    1a84:	77 27       	eor	r23, r23
    1a86:	cb 01       	movw	r24, r22
    1a88:	97 f9       	bld	r25, 7
    1a8a:	08 95       	ret

00001a8c <__mulsf3>:
    1a8c:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <__mulsf3x>
    1a90:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <__fp_round>
    1a94:	0e 94 fe 0c 	call	0x19fc	; 0x19fc <__fp_pscA>
    1a98:	38 f0       	brcs	.+14     	; 0x1aa8 <__mulsf3+0x1c>
    1a9a:	0e 94 05 0d 	call	0x1a0a	; 0x1a0a <__fp_pscB>
    1a9e:	20 f0       	brcs	.+8      	; 0x1aa8 <__mulsf3+0x1c>
    1aa0:	95 23       	and	r25, r21
    1aa2:	11 f0       	breq	.+4      	; 0x1aa8 <__mulsf3+0x1c>
    1aa4:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__fp_inf>
    1aa8:	0c 94 fb 0c 	jmp	0x19f6	; 0x19f6 <__fp_nan>
    1aac:	11 24       	eor	r1, r1
    1aae:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__fp_szero>

00001ab2 <__mulsf3x>:
    1ab2:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <__fp_split3>
    1ab6:	70 f3       	brcs	.-36     	; 0x1a94 <__mulsf3+0x8>

00001ab8 <__mulsf3_pse>:
    1ab8:	95 9f       	mul	r25, r21
    1aba:	c1 f3       	breq	.-16     	; 0x1aac <__mulsf3+0x20>
    1abc:	95 0f       	add	r25, r21
    1abe:	50 e0       	ldi	r21, 0x00	; 0
    1ac0:	55 1f       	adc	r21, r21
    1ac2:	62 9f       	mul	r22, r18
    1ac4:	f0 01       	movw	r30, r0
    1ac6:	72 9f       	mul	r23, r18
    1ac8:	bb 27       	eor	r27, r27
    1aca:	f0 0d       	add	r31, r0
    1acc:	b1 1d       	adc	r27, r1
    1ace:	63 9f       	mul	r22, r19
    1ad0:	aa 27       	eor	r26, r26
    1ad2:	f0 0d       	add	r31, r0
    1ad4:	b1 1d       	adc	r27, r1
    1ad6:	aa 1f       	adc	r26, r26
    1ad8:	64 9f       	mul	r22, r20
    1ada:	66 27       	eor	r22, r22
    1adc:	b0 0d       	add	r27, r0
    1ade:	a1 1d       	adc	r26, r1
    1ae0:	66 1f       	adc	r22, r22
    1ae2:	82 9f       	mul	r24, r18
    1ae4:	22 27       	eor	r18, r18
    1ae6:	b0 0d       	add	r27, r0
    1ae8:	a1 1d       	adc	r26, r1
    1aea:	62 1f       	adc	r22, r18
    1aec:	73 9f       	mul	r23, r19
    1aee:	b0 0d       	add	r27, r0
    1af0:	a1 1d       	adc	r26, r1
    1af2:	62 1f       	adc	r22, r18
    1af4:	83 9f       	mul	r24, r19
    1af6:	a0 0d       	add	r26, r0
    1af8:	61 1d       	adc	r22, r1
    1afa:	22 1f       	adc	r18, r18
    1afc:	74 9f       	mul	r23, r20
    1afe:	33 27       	eor	r19, r19
    1b00:	a0 0d       	add	r26, r0
    1b02:	61 1d       	adc	r22, r1
    1b04:	23 1f       	adc	r18, r19
    1b06:	84 9f       	mul	r24, r20
    1b08:	60 0d       	add	r22, r0
    1b0a:	21 1d       	adc	r18, r1
    1b0c:	82 2f       	mov	r24, r18
    1b0e:	76 2f       	mov	r23, r22
    1b10:	6a 2f       	mov	r22, r26
    1b12:	11 24       	eor	r1, r1
    1b14:	9f 57       	subi	r25, 0x7F	; 127
    1b16:	50 40       	sbci	r21, 0x00	; 0
    1b18:	9a f0       	brmi	.+38     	; 0x1b40 <__mulsf3_pse+0x88>
    1b1a:	f1 f0       	breq	.+60     	; 0x1b58 <__mulsf3_pse+0xa0>
    1b1c:	88 23       	and	r24, r24
    1b1e:	4a f0       	brmi	.+18     	; 0x1b32 <__mulsf3_pse+0x7a>
    1b20:	ee 0f       	add	r30, r30
    1b22:	ff 1f       	adc	r31, r31
    1b24:	bb 1f       	adc	r27, r27
    1b26:	66 1f       	adc	r22, r22
    1b28:	77 1f       	adc	r23, r23
    1b2a:	88 1f       	adc	r24, r24
    1b2c:	91 50       	subi	r25, 0x01	; 1
    1b2e:	50 40       	sbci	r21, 0x00	; 0
    1b30:	a9 f7       	brne	.-22     	; 0x1b1c <__mulsf3_pse+0x64>
    1b32:	9e 3f       	cpi	r25, 0xFE	; 254
    1b34:	51 05       	cpc	r21, r1
    1b36:	80 f0       	brcs	.+32     	; 0x1b58 <__mulsf3_pse+0xa0>
    1b38:	0c 94 f5 0c 	jmp	0x19ea	; 0x19ea <__fp_inf>
    1b3c:	0c 94 40 0d 	jmp	0x1a80	; 0x1a80 <__fp_szero>
    1b40:	5f 3f       	cpi	r21, 0xFF	; 255
    1b42:	e4 f3       	brlt	.-8      	; 0x1b3c <__mulsf3_pse+0x84>
    1b44:	98 3e       	cpi	r25, 0xE8	; 232
    1b46:	d4 f3       	brlt	.-12     	; 0x1b3c <__mulsf3_pse+0x84>
    1b48:	86 95       	lsr	r24
    1b4a:	77 95       	ror	r23
    1b4c:	67 95       	ror	r22
    1b4e:	b7 95       	ror	r27
    1b50:	f7 95       	ror	r31
    1b52:	e7 95       	ror	r30
    1b54:	9f 5f       	subi	r25, 0xFF	; 255
    1b56:	c1 f7       	brne	.-16     	; 0x1b48 <__mulsf3_pse+0x90>
    1b58:	fe 2b       	or	r31, r30
    1b5a:	88 0f       	add	r24, r24
    1b5c:	91 1d       	adc	r25, r1
    1b5e:	96 95       	lsr	r25
    1b60:	87 95       	ror	r24
    1b62:	97 f9       	bld	r25, 7
    1b64:	08 95       	ret

00001b66 <__divmodhi4>:
    1b66:	97 fb       	bst	r25, 7
    1b68:	07 2e       	mov	r0, r23
    1b6a:	16 f4       	brtc	.+4      	; 0x1b70 <__divmodhi4+0xa>
    1b6c:	00 94       	com	r0
    1b6e:	07 d0       	rcall	.+14     	; 0x1b7e <__divmodhi4_neg1>
    1b70:	77 fd       	sbrc	r23, 7
    1b72:	09 d0       	rcall	.+18     	; 0x1b86 <__divmodhi4_neg2>
    1b74:	0e 94 cd 0d 	call	0x1b9a	; 0x1b9a <__udivmodhi4>
    1b78:	07 fc       	sbrc	r0, 7
    1b7a:	05 d0       	rcall	.+10     	; 0x1b86 <__divmodhi4_neg2>
    1b7c:	3e f4       	brtc	.+14     	; 0x1b8c <__divmodhi4_exit>

00001b7e <__divmodhi4_neg1>:
    1b7e:	90 95       	com	r25
    1b80:	81 95       	neg	r24
    1b82:	9f 4f       	sbci	r25, 0xFF	; 255
    1b84:	08 95       	ret

00001b86 <__divmodhi4_neg2>:
    1b86:	70 95       	com	r23
    1b88:	61 95       	neg	r22
    1b8a:	7f 4f       	sbci	r23, 0xFF	; 255

00001b8c <__divmodhi4_exit>:
    1b8c:	08 95       	ret

00001b8e <__tablejump2__>:
    1b8e:	ee 0f       	add	r30, r30
    1b90:	ff 1f       	adc	r31, r31
    1b92:	05 90       	lpm	r0, Z+
    1b94:	f4 91       	lpm	r31, Z
    1b96:	e0 2d       	mov	r30, r0
    1b98:	09 94       	ijmp

00001b9a <__udivmodhi4>:
    1b9a:	aa 1b       	sub	r26, r26
    1b9c:	bb 1b       	sub	r27, r27
    1b9e:	51 e1       	ldi	r21, 0x11	; 17
    1ba0:	07 c0       	rjmp	.+14     	; 0x1bb0 <__udivmodhi4_ep>

00001ba2 <__udivmodhi4_loop>:
    1ba2:	aa 1f       	adc	r26, r26
    1ba4:	bb 1f       	adc	r27, r27
    1ba6:	a6 17       	cp	r26, r22
    1ba8:	b7 07       	cpc	r27, r23
    1baa:	10 f0       	brcs	.+4      	; 0x1bb0 <__udivmodhi4_ep>
    1bac:	a6 1b       	sub	r26, r22
    1bae:	b7 0b       	sbc	r27, r23

00001bb0 <__udivmodhi4_ep>:
    1bb0:	88 1f       	adc	r24, r24
    1bb2:	99 1f       	adc	r25, r25
    1bb4:	5a 95       	dec	r21
    1bb6:	a9 f7       	brne	.-22     	; 0x1ba2 <__udivmodhi4_loop>
    1bb8:	80 95       	com	r24
    1bba:	90 95       	com	r25
    1bbc:	bc 01       	movw	r22, r24
    1bbe:	cd 01       	movw	r24, r26
    1bc0:	08 95       	ret

00001bc2 <fdevopen>:
    1bc2:	0f 93       	push	r16
    1bc4:	1f 93       	push	r17
    1bc6:	cf 93       	push	r28
    1bc8:	df 93       	push	r29
    1bca:	00 97       	sbiw	r24, 0x00	; 0
    1bcc:	31 f4       	brne	.+12     	; 0x1bda <fdevopen+0x18>
    1bce:	61 15       	cp	r22, r1
    1bd0:	71 05       	cpc	r23, r1
    1bd2:	19 f4       	brne	.+6      	; 0x1bda <fdevopen+0x18>
    1bd4:	80 e0       	ldi	r24, 0x00	; 0
    1bd6:	90 e0       	ldi	r25, 0x00	; 0
    1bd8:	3a c0       	rjmp	.+116    	; 0x1c4e <fdevopen+0x8c>
    1bda:	8b 01       	movw	r16, r22
    1bdc:	ec 01       	movw	r28, r24
    1bde:	6e e0       	ldi	r22, 0x0E	; 14
    1be0:	70 e0       	ldi	r23, 0x00	; 0
    1be2:	81 e0       	ldi	r24, 0x01	; 1
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	0e 94 53 10 	call	0x20a6	; 0x20a6 <calloc>
    1bea:	fc 01       	movw	r30, r24
    1bec:	89 2b       	or	r24, r25
    1bee:	91 f3       	breq	.-28     	; 0x1bd4 <fdevopen+0x12>
    1bf0:	80 e8       	ldi	r24, 0x80	; 128
    1bf2:	83 83       	std	Z+3, r24	; 0x03
    1bf4:	01 15       	cp	r16, r1
    1bf6:	11 05       	cpc	r17, r1
    1bf8:	71 f0       	breq	.+28     	; 0x1c16 <fdevopen+0x54>
    1bfa:	13 87       	std	Z+11, r17	; 0x0b
    1bfc:	02 87       	std	Z+10, r16	; 0x0a
    1bfe:	81 e8       	ldi	r24, 0x81	; 129
    1c00:	83 83       	std	Z+3, r24	; 0x03
    1c02:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <__iob>
    1c06:	90 91 1c 03 	lds	r25, 0x031C	; 0x80031c <__iob+0x1>
    1c0a:	89 2b       	or	r24, r25
    1c0c:	21 f4       	brne	.+8      	; 0x1c16 <fdevopen+0x54>
    1c0e:	f0 93 1c 03 	sts	0x031C, r31	; 0x80031c <__iob+0x1>
    1c12:	e0 93 1b 03 	sts	0x031B, r30	; 0x80031b <__iob>
    1c16:	20 97       	sbiw	r28, 0x00	; 0
    1c18:	c9 f0       	breq	.+50     	; 0x1c4c <fdevopen+0x8a>
    1c1a:	d1 87       	std	Z+9, r29	; 0x09
    1c1c:	c0 87       	std	Z+8, r28	; 0x08
    1c1e:	83 81       	ldd	r24, Z+3	; 0x03
    1c20:	82 60       	ori	r24, 0x02	; 2
    1c22:	83 83       	std	Z+3, r24	; 0x03
    1c24:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <__iob+0x2>
    1c28:	90 91 1e 03 	lds	r25, 0x031E	; 0x80031e <__iob+0x3>
    1c2c:	89 2b       	or	r24, r25
    1c2e:	71 f4       	brne	.+28     	; 0x1c4c <fdevopen+0x8a>
    1c30:	f0 93 1e 03 	sts	0x031E, r31	; 0x80031e <__iob+0x3>
    1c34:	e0 93 1d 03 	sts	0x031D, r30	; 0x80031d <__iob+0x2>
    1c38:	80 91 1f 03 	lds	r24, 0x031F	; 0x80031f <__iob+0x4>
    1c3c:	90 91 20 03 	lds	r25, 0x0320	; 0x800320 <__iob+0x5>
    1c40:	89 2b       	or	r24, r25
    1c42:	21 f4       	brne	.+8      	; 0x1c4c <fdevopen+0x8a>
    1c44:	f0 93 20 03 	sts	0x0320, r31	; 0x800320 <__iob+0x5>
    1c48:	e0 93 1f 03 	sts	0x031F, r30	; 0x80031f <__iob+0x4>
    1c4c:	cf 01       	movw	r24, r30
    1c4e:	df 91       	pop	r29
    1c50:	cf 91       	pop	r28
    1c52:	1f 91       	pop	r17
    1c54:	0f 91       	pop	r16
    1c56:	08 95       	ret

00001c58 <printf>:
    1c58:	a0 e0       	ldi	r26, 0x00	; 0
    1c5a:	b0 e0       	ldi	r27, 0x00	; 0
    1c5c:	e2 e3       	ldi	r30, 0x32	; 50
    1c5e:	fe e0       	ldi	r31, 0x0E	; 14
    1c60:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x20>
    1c64:	ae 01       	movw	r20, r28
    1c66:	4b 5f       	subi	r20, 0xFB	; 251
    1c68:	5f 4f       	sbci	r21, 0xFF	; 255
    1c6a:	fa 01       	movw	r30, r20
    1c6c:	61 91       	ld	r22, Z+
    1c6e:	71 91       	ld	r23, Z+
    1c70:	af 01       	movw	r20, r30
    1c72:	80 91 1d 03 	lds	r24, 0x031D	; 0x80031d <__iob+0x2>
    1c76:	90 91 1e 03 	lds	r25, 0x031E	; 0x80031e <__iob+0x3>
    1c7a:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <vfprintf>
    1c7e:	e2 e0       	ldi	r30, 0x02	; 2
    1c80:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x20>

00001c84 <puts>:
    1c84:	0f 93       	push	r16
    1c86:	1f 93       	push	r17
    1c88:	cf 93       	push	r28
    1c8a:	df 93       	push	r29
    1c8c:	e0 91 1d 03 	lds	r30, 0x031D	; 0x80031d <__iob+0x2>
    1c90:	f0 91 1e 03 	lds	r31, 0x031E	; 0x80031e <__iob+0x3>
    1c94:	23 81       	ldd	r18, Z+3	; 0x03
    1c96:	21 ff       	sbrs	r18, 1
    1c98:	1b c0       	rjmp	.+54     	; 0x1cd0 <puts+0x4c>
    1c9a:	8c 01       	movw	r16, r24
    1c9c:	d0 e0       	ldi	r29, 0x00	; 0
    1c9e:	c0 e0       	ldi	r28, 0x00	; 0
    1ca0:	f8 01       	movw	r30, r16
    1ca2:	81 91       	ld	r24, Z+
    1ca4:	8f 01       	movw	r16, r30
    1ca6:	60 91 1d 03 	lds	r22, 0x031D	; 0x80031d <__iob+0x2>
    1caa:	70 91 1e 03 	lds	r23, 0x031E	; 0x80031e <__iob+0x3>
    1cae:	db 01       	movw	r26, r22
    1cb0:	18 96       	adiw	r26, 0x08	; 8
    1cb2:	ed 91       	ld	r30, X+
    1cb4:	fc 91       	ld	r31, X
    1cb6:	19 97       	sbiw	r26, 0x09	; 9
    1cb8:	88 23       	and	r24, r24
    1cba:	31 f0       	breq	.+12     	; 0x1cc8 <puts+0x44>
    1cbc:	09 95       	icall
    1cbe:	89 2b       	or	r24, r25
    1cc0:	79 f3       	breq	.-34     	; 0x1ca0 <puts+0x1c>
    1cc2:	df ef       	ldi	r29, 0xFF	; 255
    1cc4:	cf ef       	ldi	r28, 0xFF	; 255
    1cc6:	ec cf       	rjmp	.-40     	; 0x1ca0 <puts+0x1c>
    1cc8:	8a e0       	ldi	r24, 0x0A	; 10
    1cca:	09 95       	icall
    1ccc:	89 2b       	or	r24, r25
    1cce:	19 f0       	breq	.+6      	; 0x1cd6 <puts+0x52>
    1cd0:	8f ef       	ldi	r24, 0xFF	; 255
    1cd2:	9f ef       	ldi	r25, 0xFF	; 255
    1cd4:	02 c0       	rjmp	.+4      	; 0x1cda <puts+0x56>
    1cd6:	8d 2f       	mov	r24, r29
    1cd8:	9c 2f       	mov	r25, r28
    1cda:	df 91       	pop	r29
    1cdc:	cf 91       	pop	r28
    1cde:	1f 91       	pop	r17
    1ce0:	0f 91       	pop	r16
    1ce2:	08 95       	ret

00001ce4 <vfprintf>:
    1ce4:	ab e0       	ldi	r26, 0x0B	; 11
    1ce6:	b0 e0       	ldi	r27, 0x00	; 0
    1ce8:	e8 e7       	ldi	r30, 0x78	; 120
    1cea:	fe e0       	ldi	r31, 0x0E	; 14
    1cec:	0c 94 47 12 	jmp	0x248e	; 0x248e <__prologue_saves__>
    1cf0:	6c 01       	movw	r12, r24
    1cf2:	7b 01       	movw	r14, r22
    1cf4:	8a 01       	movw	r16, r20
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	17 82       	std	Z+7, r1	; 0x07
    1cfa:	16 82       	std	Z+6, r1	; 0x06
    1cfc:	83 81       	ldd	r24, Z+3	; 0x03
    1cfe:	81 ff       	sbrs	r24, 1
    1d00:	cc c1       	rjmp	.+920    	; 0x209a <vfprintf+0x3b6>
    1d02:	ce 01       	movw	r24, r28
    1d04:	01 96       	adiw	r24, 0x01	; 1
    1d06:	3c 01       	movw	r6, r24
    1d08:	f6 01       	movw	r30, r12
    1d0a:	93 81       	ldd	r25, Z+3	; 0x03
    1d0c:	f7 01       	movw	r30, r14
    1d0e:	93 fd       	sbrc	r25, 3
    1d10:	85 91       	lpm	r24, Z+
    1d12:	93 ff       	sbrs	r25, 3
    1d14:	81 91       	ld	r24, Z+
    1d16:	7f 01       	movw	r14, r30
    1d18:	88 23       	and	r24, r24
    1d1a:	09 f4       	brne	.+2      	; 0x1d1e <vfprintf+0x3a>
    1d1c:	ba c1       	rjmp	.+884    	; 0x2092 <vfprintf+0x3ae>
    1d1e:	85 32       	cpi	r24, 0x25	; 37
    1d20:	39 f4       	brne	.+14     	; 0x1d30 <vfprintf+0x4c>
    1d22:	93 fd       	sbrc	r25, 3
    1d24:	85 91       	lpm	r24, Z+
    1d26:	93 ff       	sbrs	r25, 3
    1d28:	81 91       	ld	r24, Z+
    1d2a:	7f 01       	movw	r14, r30
    1d2c:	85 32       	cpi	r24, 0x25	; 37
    1d2e:	29 f4       	brne	.+10     	; 0x1d3a <vfprintf+0x56>
    1d30:	b6 01       	movw	r22, r12
    1d32:	90 e0       	ldi	r25, 0x00	; 0
    1d34:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    1d38:	e7 cf       	rjmp	.-50     	; 0x1d08 <vfprintf+0x24>
    1d3a:	91 2c       	mov	r9, r1
    1d3c:	21 2c       	mov	r2, r1
    1d3e:	31 2c       	mov	r3, r1
    1d40:	ff e1       	ldi	r31, 0x1F	; 31
    1d42:	f3 15       	cp	r31, r3
    1d44:	d8 f0       	brcs	.+54     	; 0x1d7c <vfprintf+0x98>
    1d46:	8b 32       	cpi	r24, 0x2B	; 43
    1d48:	79 f0       	breq	.+30     	; 0x1d68 <vfprintf+0x84>
    1d4a:	38 f4       	brcc	.+14     	; 0x1d5a <vfprintf+0x76>
    1d4c:	80 32       	cpi	r24, 0x20	; 32
    1d4e:	79 f0       	breq	.+30     	; 0x1d6e <vfprintf+0x8a>
    1d50:	83 32       	cpi	r24, 0x23	; 35
    1d52:	a1 f4       	brne	.+40     	; 0x1d7c <vfprintf+0x98>
    1d54:	23 2d       	mov	r18, r3
    1d56:	20 61       	ori	r18, 0x10	; 16
    1d58:	1d c0       	rjmp	.+58     	; 0x1d94 <vfprintf+0xb0>
    1d5a:	8d 32       	cpi	r24, 0x2D	; 45
    1d5c:	61 f0       	breq	.+24     	; 0x1d76 <vfprintf+0x92>
    1d5e:	80 33       	cpi	r24, 0x30	; 48
    1d60:	69 f4       	brne	.+26     	; 0x1d7c <vfprintf+0x98>
    1d62:	23 2d       	mov	r18, r3
    1d64:	21 60       	ori	r18, 0x01	; 1
    1d66:	16 c0       	rjmp	.+44     	; 0x1d94 <vfprintf+0xb0>
    1d68:	83 2d       	mov	r24, r3
    1d6a:	82 60       	ori	r24, 0x02	; 2
    1d6c:	38 2e       	mov	r3, r24
    1d6e:	e3 2d       	mov	r30, r3
    1d70:	e4 60       	ori	r30, 0x04	; 4
    1d72:	3e 2e       	mov	r3, r30
    1d74:	2a c0       	rjmp	.+84     	; 0x1dca <vfprintf+0xe6>
    1d76:	f3 2d       	mov	r31, r3
    1d78:	f8 60       	ori	r31, 0x08	; 8
    1d7a:	1d c0       	rjmp	.+58     	; 0x1db6 <vfprintf+0xd2>
    1d7c:	37 fc       	sbrc	r3, 7
    1d7e:	2d c0       	rjmp	.+90     	; 0x1dda <vfprintf+0xf6>
    1d80:	20 ed       	ldi	r18, 0xD0	; 208
    1d82:	28 0f       	add	r18, r24
    1d84:	2a 30       	cpi	r18, 0x0A	; 10
    1d86:	40 f0       	brcs	.+16     	; 0x1d98 <vfprintf+0xb4>
    1d88:	8e 32       	cpi	r24, 0x2E	; 46
    1d8a:	b9 f4       	brne	.+46     	; 0x1dba <vfprintf+0xd6>
    1d8c:	36 fc       	sbrc	r3, 6
    1d8e:	81 c1       	rjmp	.+770    	; 0x2092 <vfprintf+0x3ae>
    1d90:	23 2d       	mov	r18, r3
    1d92:	20 64       	ori	r18, 0x40	; 64
    1d94:	32 2e       	mov	r3, r18
    1d96:	19 c0       	rjmp	.+50     	; 0x1dca <vfprintf+0xe6>
    1d98:	36 fe       	sbrs	r3, 6
    1d9a:	06 c0       	rjmp	.+12     	; 0x1da8 <vfprintf+0xc4>
    1d9c:	8a e0       	ldi	r24, 0x0A	; 10
    1d9e:	98 9e       	mul	r9, r24
    1da0:	20 0d       	add	r18, r0
    1da2:	11 24       	eor	r1, r1
    1da4:	92 2e       	mov	r9, r18
    1da6:	11 c0       	rjmp	.+34     	; 0x1dca <vfprintf+0xe6>
    1da8:	ea e0       	ldi	r30, 0x0A	; 10
    1daa:	2e 9e       	mul	r2, r30
    1dac:	20 0d       	add	r18, r0
    1dae:	11 24       	eor	r1, r1
    1db0:	22 2e       	mov	r2, r18
    1db2:	f3 2d       	mov	r31, r3
    1db4:	f0 62       	ori	r31, 0x20	; 32
    1db6:	3f 2e       	mov	r3, r31
    1db8:	08 c0       	rjmp	.+16     	; 0x1dca <vfprintf+0xe6>
    1dba:	8c 36       	cpi	r24, 0x6C	; 108
    1dbc:	21 f4       	brne	.+8      	; 0x1dc6 <vfprintf+0xe2>
    1dbe:	83 2d       	mov	r24, r3
    1dc0:	80 68       	ori	r24, 0x80	; 128
    1dc2:	38 2e       	mov	r3, r24
    1dc4:	02 c0       	rjmp	.+4      	; 0x1dca <vfprintf+0xe6>
    1dc6:	88 36       	cpi	r24, 0x68	; 104
    1dc8:	41 f4       	brne	.+16     	; 0x1dda <vfprintf+0xf6>
    1dca:	f7 01       	movw	r30, r14
    1dcc:	93 fd       	sbrc	r25, 3
    1dce:	85 91       	lpm	r24, Z+
    1dd0:	93 ff       	sbrs	r25, 3
    1dd2:	81 91       	ld	r24, Z+
    1dd4:	7f 01       	movw	r14, r30
    1dd6:	81 11       	cpse	r24, r1
    1dd8:	b3 cf       	rjmp	.-154    	; 0x1d40 <vfprintf+0x5c>
    1dda:	98 2f       	mov	r25, r24
    1ddc:	9f 7d       	andi	r25, 0xDF	; 223
    1dde:	95 54       	subi	r25, 0x45	; 69
    1de0:	93 30       	cpi	r25, 0x03	; 3
    1de2:	28 f4       	brcc	.+10     	; 0x1dee <vfprintf+0x10a>
    1de4:	0c 5f       	subi	r16, 0xFC	; 252
    1de6:	1f 4f       	sbci	r17, 0xFF	; 255
    1de8:	9f e3       	ldi	r25, 0x3F	; 63
    1dea:	99 83       	std	Y+1, r25	; 0x01
    1dec:	0d c0       	rjmp	.+26     	; 0x1e08 <vfprintf+0x124>
    1dee:	83 36       	cpi	r24, 0x63	; 99
    1df0:	31 f0       	breq	.+12     	; 0x1dfe <vfprintf+0x11a>
    1df2:	83 37       	cpi	r24, 0x73	; 115
    1df4:	71 f0       	breq	.+28     	; 0x1e12 <vfprintf+0x12e>
    1df6:	83 35       	cpi	r24, 0x53	; 83
    1df8:	09 f0       	breq	.+2      	; 0x1dfc <vfprintf+0x118>
    1dfa:	59 c0       	rjmp	.+178    	; 0x1eae <vfprintf+0x1ca>
    1dfc:	21 c0       	rjmp	.+66     	; 0x1e40 <vfprintf+0x15c>
    1dfe:	f8 01       	movw	r30, r16
    1e00:	80 81       	ld	r24, Z
    1e02:	89 83       	std	Y+1, r24	; 0x01
    1e04:	0e 5f       	subi	r16, 0xFE	; 254
    1e06:	1f 4f       	sbci	r17, 0xFF	; 255
    1e08:	88 24       	eor	r8, r8
    1e0a:	83 94       	inc	r8
    1e0c:	91 2c       	mov	r9, r1
    1e0e:	53 01       	movw	r10, r6
    1e10:	13 c0       	rjmp	.+38     	; 0x1e38 <vfprintf+0x154>
    1e12:	28 01       	movw	r4, r16
    1e14:	f2 e0       	ldi	r31, 0x02	; 2
    1e16:	4f 0e       	add	r4, r31
    1e18:	51 1c       	adc	r5, r1
    1e1a:	f8 01       	movw	r30, r16
    1e1c:	a0 80       	ld	r10, Z
    1e1e:	b1 80       	ldd	r11, Z+1	; 0x01
    1e20:	36 fe       	sbrs	r3, 6
    1e22:	03 c0       	rjmp	.+6      	; 0x1e2a <vfprintf+0x146>
    1e24:	69 2d       	mov	r22, r9
    1e26:	70 e0       	ldi	r23, 0x00	; 0
    1e28:	02 c0       	rjmp	.+4      	; 0x1e2e <vfprintf+0x14a>
    1e2a:	6f ef       	ldi	r22, 0xFF	; 255
    1e2c:	7f ef       	ldi	r23, 0xFF	; 255
    1e2e:	c5 01       	movw	r24, r10
    1e30:	0e 94 a2 11 	call	0x2344	; 0x2344 <strnlen>
    1e34:	4c 01       	movw	r8, r24
    1e36:	82 01       	movw	r16, r4
    1e38:	f3 2d       	mov	r31, r3
    1e3a:	ff 77       	andi	r31, 0x7F	; 127
    1e3c:	3f 2e       	mov	r3, r31
    1e3e:	16 c0       	rjmp	.+44     	; 0x1e6c <vfprintf+0x188>
    1e40:	28 01       	movw	r4, r16
    1e42:	22 e0       	ldi	r18, 0x02	; 2
    1e44:	42 0e       	add	r4, r18
    1e46:	51 1c       	adc	r5, r1
    1e48:	f8 01       	movw	r30, r16
    1e4a:	a0 80       	ld	r10, Z
    1e4c:	b1 80       	ldd	r11, Z+1	; 0x01
    1e4e:	36 fe       	sbrs	r3, 6
    1e50:	03 c0       	rjmp	.+6      	; 0x1e58 <vfprintf+0x174>
    1e52:	69 2d       	mov	r22, r9
    1e54:	70 e0       	ldi	r23, 0x00	; 0
    1e56:	02 c0       	rjmp	.+4      	; 0x1e5c <vfprintf+0x178>
    1e58:	6f ef       	ldi	r22, 0xFF	; 255
    1e5a:	7f ef       	ldi	r23, 0xFF	; 255
    1e5c:	c5 01       	movw	r24, r10
    1e5e:	0e 94 90 11 	call	0x2320	; 0x2320 <strnlen_P>
    1e62:	4c 01       	movw	r8, r24
    1e64:	f3 2d       	mov	r31, r3
    1e66:	f0 68       	ori	r31, 0x80	; 128
    1e68:	3f 2e       	mov	r3, r31
    1e6a:	82 01       	movw	r16, r4
    1e6c:	33 fc       	sbrc	r3, 3
    1e6e:	1b c0       	rjmp	.+54     	; 0x1ea6 <vfprintf+0x1c2>
    1e70:	82 2d       	mov	r24, r2
    1e72:	90 e0       	ldi	r25, 0x00	; 0
    1e74:	88 16       	cp	r8, r24
    1e76:	99 06       	cpc	r9, r25
    1e78:	b0 f4       	brcc	.+44     	; 0x1ea6 <vfprintf+0x1c2>
    1e7a:	b6 01       	movw	r22, r12
    1e7c:	80 e2       	ldi	r24, 0x20	; 32
    1e7e:	90 e0       	ldi	r25, 0x00	; 0
    1e80:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    1e84:	2a 94       	dec	r2
    1e86:	f4 cf       	rjmp	.-24     	; 0x1e70 <vfprintf+0x18c>
    1e88:	f5 01       	movw	r30, r10
    1e8a:	37 fc       	sbrc	r3, 7
    1e8c:	85 91       	lpm	r24, Z+
    1e8e:	37 fe       	sbrs	r3, 7
    1e90:	81 91       	ld	r24, Z+
    1e92:	5f 01       	movw	r10, r30
    1e94:	b6 01       	movw	r22, r12
    1e96:	90 e0       	ldi	r25, 0x00	; 0
    1e98:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    1e9c:	21 10       	cpse	r2, r1
    1e9e:	2a 94       	dec	r2
    1ea0:	21 e0       	ldi	r18, 0x01	; 1
    1ea2:	82 1a       	sub	r8, r18
    1ea4:	91 08       	sbc	r9, r1
    1ea6:	81 14       	cp	r8, r1
    1ea8:	91 04       	cpc	r9, r1
    1eaa:	71 f7       	brne	.-36     	; 0x1e88 <vfprintf+0x1a4>
    1eac:	e8 c0       	rjmp	.+464    	; 0x207e <vfprintf+0x39a>
    1eae:	84 36       	cpi	r24, 0x64	; 100
    1eb0:	11 f0       	breq	.+4      	; 0x1eb6 <vfprintf+0x1d2>
    1eb2:	89 36       	cpi	r24, 0x69	; 105
    1eb4:	41 f5       	brne	.+80     	; 0x1f06 <vfprintf+0x222>
    1eb6:	f8 01       	movw	r30, r16
    1eb8:	37 fe       	sbrs	r3, 7
    1eba:	07 c0       	rjmp	.+14     	; 0x1eca <vfprintf+0x1e6>
    1ebc:	60 81       	ld	r22, Z
    1ebe:	71 81       	ldd	r23, Z+1	; 0x01
    1ec0:	82 81       	ldd	r24, Z+2	; 0x02
    1ec2:	93 81       	ldd	r25, Z+3	; 0x03
    1ec4:	0c 5f       	subi	r16, 0xFC	; 252
    1ec6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec8:	08 c0       	rjmp	.+16     	; 0x1eda <vfprintf+0x1f6>
    1eca:	60 81       	ld	r22, Z
    1ecc:	71 81       	ldd	r23, Z+1	; 0x01
    1ece:	07 2e       	mov	r0, r23
    1ed0:	00 0c       	add	r0, r0
    1ed2:	88 0b       	sbc	r24, r24
    1ed4:	99 0b       	sbc	r25, r25
    1ed6:	0e 5f       	subi	r16, 0xFE	; 254
    1ed8:	1f 4f       	sbci	r17, 0xFF	; 255
    1eda:	f3 2d       	mov	r31, r3
    1edc:	ff 76       	andi	r31, 0x6F	; 111
    1ede:	3f 2e       	mov	r3, r31
    1ee0:	97 ff       	sbrs	r25, 7
    1ee2:	09 c0       	rjmp	.+18     	; 0x1ef6 <vfprintf+0x212>
    1ee4:	90 95       	com	r25
    1ee6:	80 95       	com	r24
    1ee8:	70 95       	com	r23
    1eea:	61 95       	neg	r22
    1eec:	7f 4f       	sbci	r23, 0xFF	; 255
    1eee:	8f 4f       	sbci	r24, 0xFF	; 255
    1ef0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ef2:	f0 68       	ori	r31, 0x80	; 128
    1ef4:	3f 2e       	mov	r3, r31
    1ef6:	2a e0       	ldi	r18, 0x0A	; 10
    1ef8:	30 e0       	ldi	r19, 0x00	; 0
    1efa:	a3 01       	movw	r20, r6
    1efc:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__ultoa_invert>
    1f00:	88 2e       	mov	r8, r24
    1f02:	86 18       	sub	r8, r6
    1f04:	45 c0       	rjmp	.+138    	; 0x1f90 <vfprintf+0x2ac>
    1f06:	85 37       	cpi	r24, 0x75	; 117
    1f08:	31 f4       	brne	.+12     	; 0x1f16 <vfprintf+0x232>
    1f0a:	23 2d       	mov	r18, r3
    1f0c:	2f 7e       	andi	r18, 0xEF	; 239
    1f0e:	b2 2e       	mov	r11, r18
    1f10:	2a e0       	ldi	r18, 0x0A	; 10
    1f12:	30 e0       	ldi	r19, 0x00	; 0
    1f14:	25 c0       	rjmp	.+74     	; 0x1f60 <vfprintf+0x27c>
    1f16:	93 2d       	mov	r25, r3
    1f18:	99 7f       	andi	r25, 0xF9	; 249
    1f1a:	b9 2e       	mov	r11, r25
    1f1c:	8f 36       	cpi	r24, 0x6F	; 111
    1f1e:	c1 f0       	breq	.+48     	; 0x1f50 <vfprintf+0x26c>
    1f20:	18 f4       	brcc	.+6      	; 0x1f28 <vfprintf+0x244>
    1f22:	88 35       	cpi	r24, 0x58	; 88
    1f24:	79 f0       	breq	.+30     	; 0x1f44 <vfprintf+0x260>
    1f26:	b5 c0       	rjmp	.+362    	; 0x2092 <vfprintf+0x3ae>
    1f28:	80 37       	cpi	r24, 0x70	; 112
    1f2a:	19 f0       	breq	.+6      	; 0x1f32 <vfprintf+0x24e>
    1f2c:	88 37       	cpi	r24, 0x78	; 120
    1f2e:	21 f0       	breq	.+8      	; 0x1f38 <vfprintf+0x254>
    1f30:	b0 c0       	rjmp	.+352    	; 0x2092 <vfprintf+0x3ae>
    1f32:	e9 2f       	mov	r30, r25
    1f34:	e0 61       	ori	r30, 0x10	; 16
    1f36:	be 2e       	mov	r11, r30
    1f38:	b4 fe       	sbrs	r11, 4
    1f3a:	0d c0       	rjmp	.+26     	; 0x1f56 <vfprintf+0x272>
    1f3c:	fb 2d       	mov	r31, r11
    1f3e:	f4 60       	ori	r31, 0x04	; 4
    1f40:	bf 2e       	mov	r11, r31
    1f42:	09 c0       	rjmp	.+18     	; 0x1f56 <vfprintf+0x272>
    1f44:	34 fe       	sbrs	r3, 4
    1f46:	0a c0       	rjmp	.+20     	; 0x1f5c <vfprintf+0x278>
    1f48:	29 2f       	mov	r18, r25
    1f4a:	26 60       	ori	r18, 0x06	; 6
    1f4c:	b2 2e       	mov	r11, r18
    1f4e:	06 c0       	rjmp	.+12     	; 0x1f5c <vfprintf+0x278>
    1f50:	28 e0       	ldi	r18, 0x08	; 8
    1f52:	30 e0       	ldi	r19, 0x00	; 0
    1f54:	05 c0       	rjmp	.+10     	; 0x1f60 <vfprintf+0x27c>
    1f56:	20 e1       	ldi	r18, 0x10	; 16
    1f58:	30 e0       	ldi	r19, 0x00	; 0
    1f5a:	02 c0       	rjmp	.+4      	; 0x1f60 <vfprintf+0x27c>
    1f5c:	20 e1       	ldi	r18, 0x10	; 16
    1f5e:	32 e0       	ldi	r19, 0x02	; 2
    1f60:	f8 01       	movw	r30, r16
    1f62:	b7 fe       	sbrs	r11, 7
    1f64:	07 c0       	rjmp	.+14     	; 0x1f74 <vfprintf+0x290>
    1f66:	60 81       	ld	r22, Z
    1f68:	71 81       	ldd	r23, Z+1	; 0x01
    1f6a:	82 81       	ldd	r24, Z+2	; 0x02
    1f6c:	93 81       	ldd	r25, Z+3	; 0x03
    1f6e:	0c 5f       	subi	r16, 0xFC	; 252
    1f70:	1f 4f       	sbci	r17, 0xFF	; 255
    1f72:	06 c0       	rjmp	.+12     	; 0x1f80 <vfprintf+0x29c>
    1f74:	60 81       	ld	r22, Z
    1f76:	71 81       	ldd	r23, Z+1	; 0x01
    1f78:	80 e0       	ldi	r24, 0x00	; 0
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	0e 5f       	subi	r16, 0xFE	; 254
    1f7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f80:	a3 01       	movw	r20, r6
    1f82:	0e 94 e9 11 	call	0x23d2	; 0x23d2 <__ultoa_invert>
    1f86:	88 2e       	mov	r8, r24
    1f88:	86 18       	sub	r8, r6
    1f8a:	fb 2d       	mov	r31, r11
    1f8c:	ff 77       	andi	r31, 0x7F	; 127
    1f8e:	3f 2e       	mov	r3, r31
    1f90:	36 fe       	sbrs	r3, 6
    1f92:	0d c0       	rjmp	.+26     	; 0x1fae <vfprintf+0x2ca>
    1f94:	23 2d       	mov	r18, r3
    1f96:	2e 7f       	andi	r18, 0xFE	; 254
    1f98:	a2 2e       	mov	r10, r18
    1f9a:	89 14       	cp	r8, r9
    1f9c:	58 f4       	brcc	.+22     	; 0x1fb4 <vfprintf+0x2d0>
    1f9e:	34 fe       	sbrs	r3, 4
    1fa0:	0b c0       	rjmp	.+22     	; 0x1fb8 <vfprintf+0x2d4>
    1fa2:	32 fc       	sbrc	r3, 2
    1fa4:	09 c0       	rjmp	.+18     	; 0x1fb8 <vfprintf+0x2d4>
    1fa6:	83 2d       	mov	r24, r3
    1fa8:	8e 7e       	andi	r24, 0xEE	; 238
    1faa:	a8 2e       	mov	r10, r24
    1fac:	05 c0       	rjmp	.+10     	; 0x1fb8 <vfprintf+0x2d4>
    1fae:	b8 2c       	mov	r11, r8
    1fb0:	a3 2c       	mov	r10, r3
    1fb2:	03 c0       	rjmp	.+6      	; 0x1fba <vfprintf+0x2d6>
    1fb4:	b8 2c       	mov	r11, r8
    1fb6:	01 c0       	rjmp	.+2      	; 0x1fba <vfprintf+0x2d6>
    1fb8:	b9 2c       	mov	r11, r9
    1fba:	a4 fe       	sbrs	r10, 4
    1fbc:	0f c0       	rjmp	.+30     	; 0x1fdc <vfprintf+0x2f8>
    1fbe:	fe 01       	movw	r30, r28
    1fc0:	e8 0d       	add	r30, r8
    1fc2:	f1 1d       	adc	r31, r1
    1fc4:	80 81       	ld	r24, Z
    1fc6:	80 33       	cpi	r24, 0x30	; 48
    1fc8:	21 f4       	brne	.+8      	; 0x1fd2 <vfprintf+0x2ee>
    1fca:	9a 2d       	mov	r25, r10
    1fcc:	99 7e       	andi	r25, 0xE9	; 233
    1fce:	a9 2e       	mov	r10, r25
    1fd0:	09 c0       	rjmp	.+18     	; 0x1fe4 <vfprintf+0x300>
    1fd2:	a2 fe       	sbrs	r10, 2
    1fd4:	06 c0       	rjmp	.+12     	; 0x1fe2 <vfprintf+0x2fe>
    1fd6:	b3 94       	inc	r11
    1fd8:	b3 94       	inc	r11
    1fda:	04 c0       	rjmp	.+8      	; 0x1fe4 <vfprintf+0x300>
    1fdc:	8a 2d       	mov	r24, r10
    1fde:	86 78       	andi	r24, 0x86	; 134
    1fe0:	09 f0       	breq	.+2      	; 0x1fe4 <vfprintf+0x300>
    1fe2:	b3 94       	inc	r11
    1fe4:	a3 fc       	sbrc	r10, 3
    1fe6:	11 c0       	rjmp	.+34     	; 0x200a <vfprintf+0x326>
    1fe8:	a0 fe       	sbrs	r10, 0
    1fea:	06 c0       	rjmp	.+12     	; 0x1ff8 <vfprintf+0x314>
    1fec:	b2 14       	cp	r11, r2
    1fee:	88 f4       	brcc	.+34     	; 0x2012 <vfprintf+0x32e>
    1ff0:	28 0c       	add	r2, r8
    1ff2:	92 2c       	mov	r9, r2
    1ff4:	9b 18       	sub	r9, r11
    1ff6:	0e c0       	rjmp	.+28     	; 0x2014 <vfprintf+0x330>
    1ff8:	b2 14       	cp	r11, r2
    1ffa:	60 f4       	brcc	.+24     	; 0x2014 <vfprintf+0x330>
    1ffc:	b6 01       	movw	r22, r12
    1ffe:	80 e2       	ldi	r24, 0x20	; 32
    2000:	90 e0       	ldi	r25, 0x00	; 0
    2002:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    2006:	b3 94       	inc	r11
    2008:	f7 cf       	rjmp	.-18     	; 0x1ff8 <vfprintf+0x314>
    200a:	b2 14       	cp	r11, r2
    200c:	18 f4       	brcc	.+6      	; 0x2014 <vfprintf+0x330>
    200e:	2b 18       	sub	r2, r11
    2010:	02 c0       	rjmp	.+4      	; 0x2016 <vfprintf+0x332>
    2012:	98 2c       	mov	r9, r8
    2014:	21 2c       	mov	r2, r1
    2016:	a4 fe       	sbrs	r10, 4
    2018:	10 c0       	rjmp	.+32     	; 0x203a <vfprintf+0x356>
    201a:	b6 01       	movw	r22, r12
    201c:	80 e3       	ldi	r24, 0x30	; 48
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    2024:	a2 fe       	sbrs	r10, 2
    2026:	17 c0       	rjmp	.+46     	; 0x2056 <vfprintf+0x372>
    2028:	a1 fc       	sbrc	r10, 1
    202a:	03 c0       	rjmp	.+6      	; 0x2032 <vfprintf+0x34e>
    202c:	88 e7       	ldi	r24, 0x78	; 120
    202e:	90 e0       	ldi	r25, 0x00	; 0
    2030:	02 c0       	rjmp	.+4      	; 0x2036 <vfprintf+0x352>
    2032:	88 e5       	ldi	r24, 0x58	; 88
    2034:	90 e0       	ldi	r25, 0x00	; 0
    2036:	b6 01       	movw	r22, r12
    2038:	0c c0       	rjmp	.+24     	; 0x2052 <vfprintf+0x36e>
    203a:	8a 2d       	mov	r24, r10
    203c:	86 78       	andi	r24, 0x86	; 134
    203e:	59 f0       	breq	.+22     	; 0x2056 <vfprintf+0x372>
    2040:	a1 fe       	sbrs	r10, 1
    2042:	02 c0       	rjmp	.+4      	; 0x2048 <vfprintf+0x364>
    2044:	8b e2       	ldi	r24, 0x2B	; 43
    2046:	01 c0       	rjmp	.+2      	; 0x204a <vfprintf+0x366>
    2048:	80 e2       	ldi	r24, 0x20	; 32
    204a:	a7 fc       	sbrc	r10, 7
    204c:	8d e2       	ldi	r24, 0x2D	; 45
    204e:	b6 01       	movw	r22, r12
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    2056:	89 14       	cp	r8, r9
    2058:	38 f4       	brcc	.+14     	; 0x2068 <vfprintf+0x384>
    205a:	b6 01       	movw	r22, r12
    205c:	80 e3       	ldi	r24, 0x30	; 48
    205e:	90 e0       	ldi	r25, 0x00	; 0
    2060:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    2064:	9a 94       	dec	r9
    2066:	f7 cf       	rjmp	.-18     	; 0x2056 <vfprintf+0x372>
    2068:	8a 94       	dec	r8
    206a:	f3 01       	movw	r30, r6
    206c:	e8 0d       	add	r30, r8
    206e:	f1 1d       	adc	r31, r1
    2070:	80 81       	ld	r24, Z
    2072:	b6 01       	movw	r22, r12
    2074:	90 e0       	ldi	r25, 0x00	; 0
    2076:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    207a:	81 10       	cpse	r8, r1
    207c:	f5 cf       	rjmp	.-22     	; 0x2068 <vfprintf+0x384>
    207e:	22 20       	and	r2, r2
    2080:	09 f4       	brne	.+2      	; 0x2084 <vfprintf+0x3a0>
    2082:	42 ce       	rjmp	.-892    	; 0x1d08 <vfprintf+0x24>
    2084:	b6 01       	movw	r22, r12
    2086:	80 e2       	ldi	r24, 0x20	; 32
    2088:	90 e0       	ldi	r25, 0x00	; 0
    208a:	0e 94 ad 11 	call	0x235a	; 0x235a <fputc>
    208e:	2a 94       	dec	r2
    2090:	f6 cf       	rjmp	.-20     	; 0x207e <vfprintf+0x39a>
    2092:	f6 01       	movw	r30, r12
    2094:	86 81       	ldd	r24, Z+6	; 0x06
    2096:	97 81       	ldd	r25, Z+7	; 0x07
    2098:	02 c0       	rjmp	.+4      	; 0x209e <vfprintf+0x3ba>
    209a:	8f ef       	ldi	r24, 0xFF	; 255
    209c:	9f ef       	ldi	r25, 0xFF	; 255
    209e:	2b 96       	adiw	r28, 0x0b	; 11
    20a0:	e2 e1       	ldi	r30, 0x12	; 18
    20a2:	0c 94 63 12 	jmp	0x24c6	; 0x24c6 <__epilogue_restores__>

000020a6 <calloc>:
    20a6:	0f 93       	push	r16
    20a8:	1f 93       	push	r17
    20aa:	cf 93       	push	r28
    20ac:	df 93       	push	r29
    20ae:	86 9f       	mul	r24, r22
    20b0:	80 01       	movw	r16, r0
    20b2:	87 9f       	mul	r24, r23
    20b4:	10 0d       	add	r17, r0
    20b6:	96 9f       	mul	r25, r22
    20b8:	10 0d       	add	r17, r0
    20ba:	11 24       	eor	r1, r1
    20bc:	c8 01       	movw	r24, r16
    20be:	0e 94 6f 10 	call	0x20de	; 0x20de <malloc>
    20c2:	ec 01       	movw	r28, r24
    20c4:	00 97       	sbiw	r24, 0x00	; 0
    20c6:	29 f0       	breq	.+10     	; 0x20d2 <calloc+0x2c>
    20c8:	a8 01       	movw	r20, r16
    20ca:	60 e0       	ldi	r22, 0x00	; 0
    20cc:	70 e0       	ldi	r23, 0x00	; 0
    20ce:	0e 94 9b 11 	call	0x2336	; 0x2336 <memset>
    20d2:	ce 01       	movw	r24, r28
    20d4:	df 91       	pop	r29
    20d6:	cf 91       	pop	r28
    20d8:	1f 91       	pop	r17
    20da:	0f 91       	pop	r16
    20dc:	08 95       	ret

000020de <malloc>:
    20de:	0f 93       	push	r16
    20e0:	1f 93       	push	r17
    20e2:	cf 93       	push	r28
    20e4:	df 93       	push	r29
    20e6:	82 30       	cpi	r24, 0x02	; 2
    20e8:	91 05       	cpc	r25, r1
    20ea:	10 f4       	brcc	.+4      	; 0x20f0 <malloc+0x12>
    20ec:	82 e0       	ldi	r24, 0x02	; 2
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	e0 91 23 03 	lds	r30, 0x0323	; 0x800323 <__flp>
    20f4:	f0 91 24 03 	lds	r31, 0x0324	; 0x800324 <__flp+0x1>
    20f8:	20 e0       	ldi	r18, 0x00	; 0
    20fa:	30 e0       	ldi	r19, 0x00	; 0
    20fc:	a0 e0       	ldi	r26, 0x00	; 0
    20fe:	b0 e0       	ldi	r27, 0x00	; 0
    2100:	30 97       	sbiw	r30, 0x00	; 0
    2102:	19 f1       	breq	.+70     	; 0x214a <malloc+0x6c>
    2104:	40 81       	ld	r20, Z
    2106:	51 81       	ldd	r21, Z+1	; 0x01
    2108:	02 81       	ldd	r16, Z+2	; 0x02
    210a:	13 81       	ldd	r17, Z+3	; 0x03
    210c:	48 17       	cp	r20, r24
    210e:	59 07       	cpc	r21, r25
    2110:	c8 f0       	brcs	.+50     	; 0x2144 <malloc+0x66>
    2112:	84 17       	cp	r24, r20
    2114:	95 07       	cpc	r25, r21
    2116:	69 f4       	brne	.+26     	; 0x2132 <malloc+0x54>
    2118:	10 97       	sbiw	r26, 0x00	; 0
    211a:	31 f0       	breq	.+12     	; 0x2128 <malloc+0x4a>
    211c:	12 96       	adiw	r26, 0x02	; 2
    211e:	0c 93       	st	X, r16
    2120:	12 97       	sbiw	r26, 0x02	; 2
    2122:	13 96       	adiw	r26, 0x03	; 3
    2124:	1c 93       	st	X, r17
    2126:	27 c0       	rjmp	.+78     	; 0x2176 <malloc+0x98>
    2128:	00 93 23 03 	sts	0x0323, r16	; 0x800323 <__flp>
    212c:	10 93 24 03 	sts	0x0324, r17	; 0x800324 <__flp+0x1>
    2130:	22 c0       	rjmp	.+68     	; 0x2176 <malloc+0x98>
    2132:	21 15       	cp	r18, r1
    2134:	31 05       	cpc	r19, r1
    2136:	19 f0       	breq	.+6      	; 0x213e <malloc+0x60>
    2138:	42 17       	cp	r20, r18
    213a:	53 07       	cpc	r21, r19
    213c:	18 f4       	brcc	.+6      	; 0x2144 <malloc+0x66>
    213e:	9a 01       	movw	r18, r20
    2140:	bd 01       	movw	r22, r26
    2142:	ef 01       	movw	r28, r30
    2144:	df 01       	movw	r26, r30
    2146:	f8 01       	movw	r30, r16
    2148:	db cf       	rjmp	.-74     	; 0x2100 <malloc+0x22>
    214a:	21 15       	cp	r18, r1
    214c:	31 05       	cpc	r19, r1
    214e:	f9 f0       	breq	.+62     	; 0x218e <malloc+0xb0>
    2150:	28 1b       	sub	r18, r24
    2152:	39 0b       	sbc	r19, r25
    2154:	24 30       	cpi	r18, 0x04	; 4
    2156:	31 05       	cpc	r19, r1
    2158:	80 f4       	brcc	.+32     	; 0x217a <malloc+0x9c>
    215a:	8a 81       	ldd	r24, Y+2	; 0x02
    215c:	9b 81       	ldd	r25, Y+3	; 0x03
    215e:	61 15       	cp	r22, r1
    2160:	71 05       	cpc	r23, r1
    2162:	21 f0       	breq	.+8      	; 0x216c <malloc+0x8e>
    2164:	fb 01       	movw	r30, r22
    2166:	93 83       	std	Z+3, r25	; 0x03
    2168:	82 83       	std	Z+2, r24	; 0x02
    216a:	04 c0       	rjmp	.+8      	; 0x2174 <malloc+0x96>
    216c:	90 93 24 03 	sts	0x0324, r25	; 0x800324 <__flp+0x1>
    2170:	80 93 23 03 	sts	0x0323, r24	; 0x800323 <__flp>
    2174:	fe 01       	movw	r30, r28
    2176:	32 96       	adiw	r30, 0x02	; 2
    2178:	44 c0       	rjmp	.+136    	; 0x2202 <malloc+0x124>
    217a:	fe 01       	movw	r30, r28
    217c:	e2 0f       	add	r30, r18
    217e:	f3 1f       	adc	r31, r19
    2180:	81 93       	st	Z+, r24
    2182:	91 93       	st	Z+, r25
    2184:	22 50       	subi	r18, 0x02	; 2
    2186:	31 09       	sbc	r19, r1
    2188:	39 83       	std	Y+1, r19	; 0x01
    218a:	28 83       	st	Y, r18
    218c:	3a c0       	rjmp	.+116    	; 0x2202 <malloc+0x124>
    218e:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <__brkval>
    2192:	30 91 22 03 	lds	r19, 0x0322	; 0x800322 <__brkval+0x1>
    2196:	23 2b       	or	r18, r19
    2198:	41 f4       	brne	.+16     	; 0x21aa <malloc+0xcc>
    219a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    219e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    21a2:	30 93 22 03 	sts	0x0322, r19	; 0x800322 <__brkval+0x1>
    21a6:	20 93 21 03 	sts	0x0321, r18	; 0x800321 <__brkval>
    21aa:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    21ae:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    21b2:	21 15       	cp	r18, r1
    21b4:	31 05       	cpc	r19, r1
    21b6:	41 f4       	brne	.+16     	; 0x21c8 <malloc+0xea>
    21b8:	2d b7       	in	r18, 0x3d	; 61
    21ba:	3e b7       	in	r19, 0x3e	; 62
    21bc:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    21c0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    21c4:	24 1b       	sub	r18, r20
    21c6:	35 0b       	sbc	r19, r21
    21c8:	e0 91 21 03 	lds	r30, 0x0321	; 0x800321 <__brkval>
    21cc:	f0 91 22 03 	lds	r31, 0x0322	; 0x800322 <__brkval+0x1>
    21d0:	e2 17       	cp	r30, r18
    21d2:	f3 07       	cpc	r31, r19
    21d4:	a0 f4       	brcc	.+40     	; 0x21fe <malloc+0x120>
    21d6:	2e 1b       	sub	r18, r30
    21d8:	3f 0b       	sbc	r19, r31
    21da:	28 17       	cp	r18, r24
    21dc:	39 07       	cpc	r19, r25
    21de:	78 f0       	brcs	.+30     	; 0x21fe <malloc+0x120>
    21e0:	ac 01       	movw	r20, r24
    21e2:	4e 5f       	subi	r20, 0xFE	; 254
    21e4:	5f 4f       	sbci	r21, 0xFF	; 255
    21e6:	24 17       	cp	r18, r20
    21e8:	35 07       	cpc	r19, r21
    21ea:	48 f0       	brcs	.+18     	; 0x21fe <malloc+0x120>
    21ec:	4e 0f       	add	r20, r30
    21ee:	5f 1f       	adc	r21, r31
    21f0:	50 93 22 03 	sts	0x0322, r21	; 0x800322 <__brkval+0x1>
    21f4:	40 93 21 03 	sts	0x0321, r20	; 0x800321 <__brkval>
    21f8:	81 93       	st	Z+, r24
    21fa:	91 93       	st	Z+, r25
    21fc:	02 c0       	rjmp	.+4      	; 0x2202 <malloc+0x124>
    21fe:	e0 e0       	ldi	r30, 0x00	; 0
    2200:	f0 e0       	ldi	r31, 0x00	; 0
    2202:	cf 01       	movw	r24, r30
    2204:	df 91       	pop	r29
    2206:	cf 91       	pop	r28
    2208:	1f 91       	pop	r17
    220a:	0f 91       	pop	r16
    220c:	08 95       	ret

0000220e <free>:
    220e:	cf 93       	push	r28
    2210:	df 93       	push	r29
    2212:	00 97       	sbiw	r24, 0x00	; 0
    2214:	09 f4       	brne	.+2      	; 0x2218 <free+0xa>
    2216:	81 c0       	rjmp	.+258    	; 0x231a <free+0x10c>
    2218:	fc 01       	movw	r30, r24
    221a:	32 97       	sbiw	r30, 0x02	; 2
    221c:	13 82       	std	Z+3, r1	; 0x03
    221e:	12 82       	std	Z+2, r1	; 0x02
    2220:	a0 91 23 03 	lds	r26, 0x0323	; 0x800323 <__flp>
    2224:	b0 91 24 03 	lds	r27, 0x0324	; 0x800324 <__flp+0x1>
    2228:	10 97       	sbiw	r26, 0x00	; 0
    222a:	81 f4       	brne	.+32     	; 0x224c <free+0x3e>
    222c:	20 81       	ld	r18, Z
    222e:	31 81       	ldd	r19, Z+1	; 0x01
    2230:	82 0f       	add	r24, r18
    2232:	93 1f       	adc	r25, r19
    2234:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <__brkval>
    2238:	30 91 22 03 	lds	r19, 0x0322	; 0x800322 <__brkval+0x1>
    223c:	28 17       	cp	r18, r24
    223e:	39 07       	cpc	r19, r25
    2240:	51 f5       	brne	.+84     	; 0x2296 <free+0x88>
    2242:	f0 93 22 03 	sts	0x0322, r31	; 0x800322 <__brkval+0x1>
    2246:	e0 93 21 03 	sts	0x0321, r30	; 0x800321 <__brkval>
    224a:	67 c0       	rjmp	.+206    	; 0x231a <free+0x10c>
    224c:	ed 01       	movw	r28, r26
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	ce 17       	cp	r28, r30
    2254:	df 07       	cpc	r29, r31
    2256:	40 f4       	brcc	.+16     	; 0x2268 <free+0x5a>
    2258:	4a 81       	ldd	r20, Y+2	; 0x02
    225a:	5b 81       	ldd	r21, Y+3	; 0x03
    225c:	9e 01       	movw	r18, r28
    225e:	41 15       	cp	r20, r1
    2260:	51 05       	cpc	r21, r1
    2262:	f1 f0       	breq	.+60     	; 0x22a0 <free+0x92>
    2264:	ea 01       	movw	r28, r20
    2266:	f5 cf       	rjmp	.-22     	; 0x2252 <free+0x44>
    2268:	d3 83       	std	Z+3, r29	; 0x03
    226a:	c2 83       	std	Z+2, r28	; 0x02
    226c:	40 81       	ld	r20, Z
    226e:	51 81       	ldd	r21, Z+1	; 0x01
    2270:	84 0f       	add	r24, r20
    2272:	95 1f       	adc	r25, r21
    2274:	c8 17       	cp	r28, r24
    2276:	d9 07       	cpc	r29, r25
    2278:	59 f4       	brne	.+22     	; 0x2290 <free+0x82>
    227a:	88 81       	ld	r24, Y
    227c:	99 81       	ldd	r25, Y+1	; 0x01
    227e:	84 0f       	add	r24, r20
    2280:	95 1f       	adc	r25, r21
    2282:	02 96       	adiw	r24, 0x02	; 2
    2284:	91 83       	std	Z+1, r25	; 0x01
    2286:	80 83       	st	Z, r24
    2288:	8a 81       	ldd	r24, Y+2	; 0x02
    228a:	9b 81       	ldd	r25, Y+3	; 0x03
    228c:	93 83       	std	Z+3, r25	; 0x03
    228e:	82 83       	std	Z+2, r24	; 0x02
    2290:	21 15       	cp	r18, r1
    2292:	31 05       	cpc	r19, r1
    2294:	29 f4       	brne	.+10     	; 0x22a0 <free+0x92>
    2296:	f0 93 24 03 	sts	0x0324, r31	; 0x800324 <__flp+0x1>
    229a:	e0 93 23 03 	sts	0x0323, r30	; 0x800323 <__flp>
    229e:	3d c0       	rjmp	.+122    	; 0x231a <free+0x10c>
    22a0:	e9 01       	movw	r28, r18
    22a2:	fb 83       	std	Y+3, r31	; 0x03
    22a4:	ea 83       	std	Y+2, r30	; 0x02
    22a6:	49 91       	ld	r20, Y+
    22a8:	59 91       	ld	r21, Y+
    22aa:	c4 0f       	add	r28, r20
    22ac:	d5 1f       	adc	r29, r21
    22ae:	ec 17       	cp	r30, r28
    22b0:	fd 07       	cpc	r31, r29
    22b2:	61 f4       	brne	.+24     	; 0x22cc <free+0xbe>
    22b4:	80 81       	ld	r24, Z
    22b6:	91 81       	ldd	r25, Z+1	; 0x01
    22b8:	84 0f       	add	r24, r20
    22ba:	95 1f       	adc	r25, r21
    22bc:	02 96       	adiw	r24, 0x02	; 2
    22be:	e9 01       	movw	r28, r18
    22c0:	99 83       	std	Y+1, r25	; 0x01
    22c2:	88 83       	st	Y, r24
    22c4:	82 81       	ldd	r24, Z+2	; 0x02
    22c6:	93 81       	ldd	r25, Z+3	; 0x03
    22c8:	9b 83       	std	Y+3, r25	; 0x03
    22ca:	8a 83       	std	Y+2, r24	; 0x02
    22cc:	e0 e0       	ldi	r30, 0x00	; 0
    22ce:	f0 e0       	ldi	r31, 0x00	; 0
    22d0:	12 96       	adiw	r26, 0x02	; 2
    22d2:	8d 91       	ld	r24, X+
    22d4:	9c 91       	ld	r25, X
    22d6:	13 97       	sbiw	r26, 0x03	; 3
    22d8:	00 97       	sbiw	r24, 0x00	; 0
    22da:	19 f0       	breq	.+6      	; 0x22e2 <free+0xd4>
    22dc:	fd 01       	movw	r30, r26
    22de:	dc 01       	movw	r26, r24
    22e0:	f7 cf       	rjmp	.-18     	; 0x22d0 <free+0xc2>
    22e2:	8d 91       	ld	r24, X+
    22e4:	9c 91       	ld	r25, X
    22e6:	11 97       	sbiw	r26, 0x01	; 1
    22e8:	9d 01       	movw	r18, r26
    22ea:	2e 5f       	subi	r18, 0xFE	; 254
    22ec:	3f 4f       	sbci	r19, 0xFF	; 255
    22ee:	82 0f       	add	r24, r18
    22f0:	93 1f       	adc	r25, r19
    22f2:	20 91 21 03 	lds	r18, 0x0321	; 0x800321 <__brkval>
    22f6:	30 91 22 03 	lds	r19, 0x0322	; 0x800322 <__brkval+0x1>
    22fa:	28 17       	cp	r18, r24
    22fc:	39 07       	cpc	r19, r25
    22fe:	69 f4       	brne	.+26     	; 0x231a <free+0x10c>
    2300:	30 97       	sbiw	r30, 0x00	; 0
    2302:	29 f4       	brne	.+10     	; 0x230e <free+0x100>
    2304:	10 92 24 03 	sts	0x0324, r1	; 0x800324 <__flp+0x1>
    2308:	10 92 23 03 	sts	0x0323, r1	; 0x800323 <__flp>
    230c:	02 c0       	rjmp	.+4      	; 0x2312 <free+0x104>
    230e:	13 82       	std	Z+3, r1	; 0x03
    2310:	12 82       	std	Z+2, r1	; 0x02
    2312:	b0 93 22 03 	sts	0x0322, r27	; 0x800322 <__brkval+0x1>
    2316:	a0 93 21 03 	sts	0x0321, r26	; 0x800321 <__brkval>
    231a:	df 91       	pop	r29
    231c:	cf 91       	pop	r28
    231e:	08 95       	ret

00002320 <strnlen_P>:
    2320:	fc 01       	movw	r30, r24
    2322:	05 90       	lpm	r0, Z+
    2324:	61 50       	subi	r22, 0x01	; 1
    2326:	70 40       	sbci	r23, 0x00	; 0
    2328:	01 10       	cpse	r0, r1
    232a:	d8 f7       	brcc	.-10     	; 0x2322 <strnlen_P+0x2>
    232c:	80 95       	com	r24
    232e:	90 95       	com	r25
    2330:	8e 0f       	add	r24, r30
    2332:	9f 1f       	adc	r25, r31
    2334:	08 95       	ret

00002336 <memset>:
    2336:	dc 01       	movw	r26, r24
    2338:	01 c0       	rjmp	.+2      	; 0x233c <memset+0x6>
    233a:	6d 93       	st	X+, r22
    233c:	41 50       	subi	r20, 0x01	; 1
    233e:	50 40       	sbci	r21, 0x00	; 0
    2340:	e0 f7       	brcc	.-8      	; 0x233a <memset+0x4>
    2342:	08 95       	ret

00002344 <strnlen>:
    2344:	fc 01       	movw	r30, r24
    2346:	61 50       	subi	r22, 0x01	; 1
    2348:	70 40       	sbci	r23, 0x00	; 0
    234a:	01 90       	ld	r0, Z+
    234c:	01 10       	cpse	r0, r1
    234e:	d8 f7       	brcc	.-10     	; 0x2346 <strnlen+0x2>
    2350:	80 95       	com	r24
    2352:	90 95       	com	r25
    2354:	8e 0f       	add	r24, r30
    2356:	9f 1f       	adc	r25, r31
    2358:	08 95       	ret

0000235a <fputc>:
    235a:	0f 93       	push	r16
    235c:	1f 93       	push	r17
    235e:	cf 93       	push	r28
    2360:	df 93       	push	r29
    2362:	fb 01       	movw	r30, r22
    2364:	23 81       	ldd	r18, Z+3	; 0x03
    2366:	21 fd       	sbrc	r18, 1
    2368:	03 c0       	rjmp	.+6      	; 0x2370 <fputc+0x16>
    236a:	8f ef       	ldi	r24, 0xFF	; 255
    236c:	9f ef       	ldi	r25, 0xFF	; 255
    236e:	2c c0       	rjmp	.+88     	; 0x23c8 <fputc+0x6e>
    2370:	22 ff       	sbrs	r18, 2
    2372:	16 c0       	rjmp	.+44     	; 0x23a0 <fputc+0x46>
    2374:	46 81       	ldd	r20, Z+6	; 0x06
    2376:	57 81       	ldd	r21, Z+7	; 0x07
    2378:	24 81       	ldd	r18, Z+4	; 0x04
    237a:	35 81       	ldd	r19, Z+5	; 0x05
    237c:	42 17       	cp	r20, r18
    237e:	53 07       	cpc	r21, r19
    2380:	44 f4       	brge	.+16     	; 0x2392 <fputc+0x38>
    2382:	a0 81       	ld	r26, Z
    2384:	b1 81       	ldd	r27, Z+1	; 0x01
    2386:	9d 01       	movw	r18, r26
    2388:	2f 5f       	subi	r18, 0xFF	; 255
    238a:	3f 4f       	sbci	r19, 0xFF	; 255
    238c:	31 83       	std	Z+1, r19	; 0x01
    238e:	20 83       	st	Z, r18
    2390:	8c 93       	st	X, r24
    2392:	26 81       	ldd	r18, Z+6	; 0x06
    2394:	37 81       	ldd	r19, Z+7	; 0x07
    2396:	2f 5f       	subi	r18, 0xFF	; 255
    2398:	3f 4f       	sbci	r19, 0xFF	; 255
    239a:	37 83       	std	Z+7, r19	; 0x07
    239c:	26 83       	std	Z+6, r18	; 0x06
    239e:	14 c0       	rjmp	.+40     	; 0x23c8 <fputc+0x6e>
    23a0:	8b 01       	movw	r16, r22
    23a2:	ec 01       	movw	r28, r24
    23a4:	fb 01       	movw	r30, r22
    23a6:	00 84       	ldd	r0, Z+8	; 0x08
    23a8:	f1 85       	ldd	r31, Z+9	; 0x09
    23aa:	e0 2d       	mov	r30, r0
    23ac:	09 95       	icall
    23ae:	89 2b       	or	r24, r25
    23b0:	e1 f6       	brne	.-72     	; 0x236a <fputc+0x10>
    23b2:	d8 01       	movw	r26, r16
    23b4:	16 96       	adiw	r26, 0x06	; 6
    23b6:	8d 91       	ld	r24, X+
    23b8:	9c 91       	ld	r25, X
    23ba:	17 97       	sbiw	r26, 0x07	; 7
    23bc:	01 96       	adiw	r24, 0x01	; 1
    23be:	17 96       	adiw	r26, 0x07	; 7
    23c0:	9c 93       	st	X, r25
    23c2:	8e 93       	st	-X, r24
    23c4:	16 97       	sbiw	r26, 0x06	; 6
    23c6:	ce 01       	movw	r24, r28
    23c8:	df 91       	pop	r29
    23ca:	cf 91       	pop	r28
    23cc:	1f 91       	pop	r17
    23ce:	0f 91       	pop	r16
    23d0:	08 95       	ret

000023d2 <__ultoa_invert>:
    23d2:	fa 01       	movw	r30, r20
    23d4:	aa 27       	eor	r26, r26
    23d6:	28 30       	cpi	r18, 0x08	; 8
    23d8:	51 f1       	breq	.+84     	; 0x242e <__ultoa_invert+0x5c>
    23da:	20 31       	cpi	r18, 0x10	; 16
    23dc:	81 f1       	breq	.+96     	; 0x243e <__ultoa_invert+0x6c>
    23de:	e8 94       	clt
    23e0:	6f 93       	push	r22
    23e2:	6e 7f       	andi	r22, 0xFE	; 254
    23e4:	6e 5f       	subi	r22, 0xFE	; 254
    23e6:	7f 4f       	sbci	r23, 0xFF	; 255
    23e8:	8f 4f       	sbci	r24, 0xFF	; 255
    23ea:	9f 4f       	sbci	r25, 0xFF	; 255
    23ec:	af 4f       	sbci	r26, 0xFF	; 255
    23ee:	b1 e0       	ldi	r27, 0x01	; 1
    23f0:	3e d0       	rcall	.+124    	; 0x246e <__ultoa_invert+0x9c>
    23f2:	b4 e0       	ldi	r27, 0x04	; 4
    23f4:	3c d0       	rcall	.+120    	; 0x246e <__ultoa_invert+0x9c>
    23f6:	67 0f       	add	r22, r23
    23f8:	78 1f       	adc	r23, r24
    23fa:	89 1f       	adc	r24, r25
    23fc:	9a 1f       	adc	r25, r26
    23fe:	a1 1d       	adc	r26, r1
    2400:	68 0f       	add	r22, r24
    2402:	79 1f       	adc	r23, r25
    2404:	8a 1f       	adc	r24, r26
    2406:	91 1d       	adc	r25, r1
    2408:	a1 1d       	adc	r26, r1
    240a:	6a 0f       	add	r22, r26
    240c:	71 1d       	adc	r23, r1
    240e:	81 1d       	adc	r24, r1
    2410:	91 1d       	adc	r25, r1
    2412:	a1 1d       	adc	r26, r1
    2414:	20 d0       	rcall	.+64     	; 0x2456 <__ultoa_invert+0x84>
    2416:	09 f4       	brne	.+2      	; 0x241a <__ultoa_invert+0x48>
    2418:	68 94       	set
    241a:	3f 91       	pop	r19
    241c:	2a e0       	ldi	r18, 0x0A	; 10
    241e:	26 9f       	mul	r18, r22
    2420:	11 24       	eor	r1, r1
    2422:	30 19       	sub	r19, r0
    2424:	30 5d       	subi	r19, 0xD0	; 208
    2426:	31 93       	st	Z+, r19
    2428:	de f6       	brtc	.-74     	; 0x23e0 <__ultoa_invert+0xe>
    242a:	cf 01       	movw	r24, r30
    242c:	08 95       	ret
    242e:	46 2f       	mov	r20, r22
    2430:	47 70       	andi	r20, 0x07	; 7
    2432:	40 5d       	subi	r20, 0xD0	; 208
    2434:	41 93       	st	Z+, r20
    2436:	b3 e0       	ldi	r27, 0x03	; 3
    2438:	0f d0       	rcall	.+30     	; 0x2458 <__ultoa_invert+0x86>
    243a:	c9 f7       	brne	.-14     	; 0x242e <__ultoa_invert+0x5c>
    243c:	f6 cf       	rjmp	.-20     	; 0x242a <__ultoa_invert+0x58>
    243e:	46 2f       	mov	r20, r22
    2440:	4f 70       	andi	r20, 0x0F	; 15
    2442:	40 5d       	subi	r20, 0xD0	; 208
    2444:	4a 33       	cpi	r20, 0x3A	; 58
    2446:	18 f0       	brcs	.+6      	; 0x244e <__ultoa_invert+0x7c>
    2448:	49 5d       	subi	r20, 0xD9	; 217
    244a:	31 fd       	sbrc	r19, 1
    244c:	40 52       	subi	r20, 0x20	; 32
    244e:	41 93       	st	Z+, r20
    2450:	02 d0       	rcall	.+4      	; 0x2456 <__ultoa_invert+0x84>
    2452:	a9 f7       	brne	.-22     	; 0x243e <__ultoa_invert+0x6c>
    2454:	ea cf       	rjmp	.-44     	; 0x242a <__ultoa_invert+0x58>
    2456:	b4 e0       	ldi	r27, 0x04	; 4
    2458:	a6 95       	lsr	r26
    245a:	97 95       	ror	r25
    245c:	87 95       	ror	r24
    245e:	77 95       	ror	r23
    2460:	67 95       	ror	r22
    2462:	ba 95       	dec	r27
    2464:	c9 f7       	brne	.-14     	; 0x2458 <__ultoa_invert+0x86>
    2466:	00 97       	sbiw	r24, 0x00	; 0
    2468:	61 05       	cpc	r22, r1
    246a:	71 05       	cpc	r23, r1
    246c:	08 95       	ret
    246e:	9b 01       	movw	r18, r22
    2470:	ac 01       	movw	r20, r24
    2472:	0a 2e       	mov	r0, r26
    2474:	06 94       	lsr	r0
    2476:	57 95       	ror	r21
    2478:	47 95       	ror	r20
    247a:	37 95       	ror	r19
    247c:	27 95       	ror	r18
    247e:	ba 95       	dec	r27
    2480:	c9 f7       	brne	.-14     	; 0x2474 <__ultoa_invert+0xa2>
    2482:	62 0f       	add	r22, r18
    2484:	73 1f       	adc	r23, r19
    2486:	84 1f       	adc	r24, r20
    2488:	95 1f       	adc	r25, r21
    248a:	a0 1d       	adc	r26, r0
    248c:	08 95       	ret

0000248e <__prologue_saves__>:
    248e:	2f 92       	push	r2
    2490:	3f 92       	push	r3
    2492:	4f 92       	push	r4
    2494:	5f 92       	push	r5
    2496:	6f 92       	push	r6
    2498:	7f 92       	push	r7
    249a:	8f 92       	push	r8
    249c:	9f 92       	push	r9
    249e:	af 92       	push	r10
    24a0:	bf 92       	push	r11
    24a2:	cf 92       	push	r12
    24a4:	df 92       	push	r13
    24a6:	ef 92       	push	r14
    24a8:	ff 92       	push	r15
    24aa:	0f 93       	push	r16
    24ac:	1f 93       	push	r17
    24ae:	cf 93       	push	r28
    24b0:	df 93       	push	r29
    24b2:	cd b7       	in	r28, 0x3d	; 61
    24b4:	de b7       	in	r29, 0x3e	; 62
    24b6:	ca 1b       	sub	r28, r26
    24b8:	db 0b       	sbc	r29, r27
    24ba:	0f b6       	in	r0, 0x3f	; 63
    24bc:	f8 94       	cli
    24be:	de bf       	out	0x3e, r29	; 62
    24c0:	0f be       	out	0x3f, r0	; 63
    24c2:	cd bf       	out	0x3d, r28	; 61
    24c4:	09 94       	ijmp

000024c6 <__epilogue_restores__>:
    24c6:	2a 88       	ldd	r2, Y+18	; 0x12
    24c8:	39 88       	ldd	r3, Y+17	; 0x11
    24ca:	48 88       	ldd	r4, Y+16	; 0x10
    24cc:	5f 84       	ldd	r5, Y+15	; 0x0f
    24ce:	6e 84       	ldd	r6, Y+14	; 0x0e
    24d0:	7d 84       	ldd	r7, Y+13	; 0x0d
    24d2:	8c 84       	ldd	r8, Y+12	; 0x0c
    24d4:	9b 84       	ldd	r9, Y+11	; 0x0b
    24d6:	aa 84       	ldd	r10, Y+10	; 0x0a
    24d8:	b9 84       	ldd	r11, Y+9	; 0x09
    24da:	c8 84       	ldd	r12, Y+8	; 0x08
    24dc:	df 80       	ldd	r13, Y+7	; 0x07
    24de:	ee 80       	ldd	r14, Y+6	; 0x06
    24e0:	fd 80       	ldd	r15, Y+5	; 0x05
    24e2:	0c 81       	ldd	r16, Y+4	; 0x04
    24e4:	1b 81       	ldd	r17, Y+3	; 0x03
    24e6:	aa 81       	ldd	r26, Y+2	; 0x02
    24e8:	b9 81       	ldd	r27, Y+1	; 0x01
    24ea:	ce 0f       	add	r28, r30
    24ec:	d1 1d       	adc	r29, r1
    24ee:	0f b6       	in	r0, 0x3f	; 63
    24f0:	f8 94       	cli
    24f2:	de bf       	out	0x3e, r29	; 62
    24f4:	0f be       	out	0x3f, r0	; 63
    24f6:	cd bf       	out	0x3d, r28	; 61
    24f8:	ed 01       	movw	r28, r26
    24fa:	08 95       	ret

000024fc <_exit>:
    24fc:	f8 94       	cli

000024fe <__stop_program>:
    24fe:	ff cf       	rjmp	.-2      	; 0x24fe <__stop_program>
