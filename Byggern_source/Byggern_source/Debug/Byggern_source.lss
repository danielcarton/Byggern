
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b0  00800100  0000195a  000019ee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000195a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000046  008002b0  008002b0  00001b9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001bfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000220  00000000  00000000  00001c38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002795  00000000  00000000  00001e58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001091  00000000  00000000  000045ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001469  00000000  00000000  0000567e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000650  00000000  00000000  00006ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a41  00000000  00000000  00007138  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000150b  00000000  00000000  00007b79  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  00009084  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__vector_1>
       8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_15>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	12 e0       	ldi	r17, 0x02	; 2
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ea e5       	ldi	r30, 0x5A	; 90
      84:	f9 e1       	ldi	r31, 0x19	; 25
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a0 3b       	cpi	r26, 0xB0	; 176
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	22 e0       	ldi	r18, 0x02	; 2
      94:	a0 eb       	ldi	r26, 0xB0	; 176
      96:	b2 e0       	ldi	r27, 0x02	; 2
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a6 3f       	cpi	r26, 0xF6	; 246
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 c3 04 	call	0x986	; 0x986 <main>
      a6:	0c 94 ab 0c 	jmp	0x1956	; 0x1956 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_15>:
float negYfactor;
float negYadd;

volatile char ADC_data;

ISR (TIMER1_OVF_vect){
      ae:	1f 92       	push	r1
      b0:	0f 92       	push	r0
      b2:	0f b6       	in	r0, 0x3f	; 63
      b4:	0f 92       	push	r0
      b6:	11 24       	eor	r1, r1
      b8:	2f 93       	push	r18
      ba:	3f 93       	push	r19
      bc:	4f 93       	push	r20
      be:	5f 93       	push	r21
      c0:	6f 93       	push	r22
      c2:	7f 93       	push	r23
      c4:	8f 93       	push	r24
      c6:	9f 93       	push	r25
      c8:	af 93       	push	r26
      ca:	bf 93       	push	r27
      cc:	cf 93       	push	r28
      ce:	df 93       	push	r29
      d0:	ef 93       	push	r30
      d2:	ff 93       	push	r31
	ADC[0x00] = 0x00;
      d4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
      d8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
      dc:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      de:	89 ef       	ldi	r24, 0xF9	; 249
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	01 97       	sbiw	r24, 0x01	; 1
      e4:	f1 f7       	brne	.-4      	; 0xe2 <__vector_15+0x34>
      e6:	00 c0       	rjmp	.+0      	; 0xe8 <__vector_15+0x3a>
      e8:	00 00       	nop
	_delay_ms(1);
	joyy=ADC[0x00];
      ea:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
      ee:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
      f2:	80 81       	ld	r24, Z
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <joyy+0x1>
      fa:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <joyy>
	joyx=ADC[0x00];
      fe:	80 81       	ld	r24, Z
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <joyx+0x1>
     106:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <joyx>
	sliderRight = ADC[0x00];
     10a:	80 81       	ld	r24, Z
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	90 93 b6 02 	sts	0x02B6, r25	; 0x8002b6 <sliderRight+0x1>
     112:	80 93 b5 02 	sts	0x02B5, r24	; 0x8002b5 <sliderRight>
	sliderLeft = ADC[0x00];
     116:	80 81       	ld	r24, Z
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <sliderLeft+0x1>
     11e:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <sliderLeft>
	
	button1State = 0 != (PIND & (1<<PD2)); 
     122:	80 b3       	in	r24, 0x10	; 16
     124:	82 fb       	bst	r24, 2
     126:	66 27       	eor	r22, r22
     128:	60 f9       	bld	r22, 0
     12a:	70 e0       	ldi	r23, 0x00	; 0
     12c:	70 93 e2 02 	sts	0x02E2, r23	; 0x8002e2 <button1State+0x1>
     130:	60 93 e1 02 	sts	0x02E1, r22	; 0x8002e1 <button1State>
	button2State = 0 != (PIND & (1<<PD3));
     134:	80 b3       	in	r24, 0x10	; 16
     136:	83 fb       	bst	r24, 3
     138:	44 27       	eor	r20, r20
     13a:	40 f9       	bld	r20, 0
     13c:	50 e0       	ldi	r21, 0x00	; 0
     13e:	50 93 ca 02 	sts	0x02CA, r21	; 0x8002ca <button2State+0x1>
     142:	40 93 c9 02 	sts	0x02C9, r20	; 0x8002c9 <button2State>
	button3State = 1 != (0 != (PIND & (1<<PD5))); 
     146:	80 b3       	in	r24, 0x10	; 16
     148:	82 95       	swap	r24
     14a:	86 95       	lsr	r24
     14c:	87 70       	andi	r24, 0x07	; 7
     14e:	91 e0       	ldi	r25, 0x01	; 1
     150:	89 27       	eor	r24, r25
     152:	28 2f       	mov	r18, r24
     154:	21 70       	andi	r18, 0x01	; 1
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	30 93 eb 02 	sts	0x02EB, r19	; 0x8002eb <button3State+0x1>
     15c:	20 93 ea 02 	sts	0x02EA, r18	; 0x8002ea <button3State>
	
	if (joyy < middleyjoyy)
     160:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <joyy>
     164:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <joyy+0x1>
     168:	c0 91 bb 02 	lds	r28, 0x02BB	; 0x8002bb <middleyjoyy>
     16c:	d0 91 bc 02 	lds	r29, 0x02BC	; 0x8002bc <middleyjoyy+0x1>
     170:	8c 17       	cp	r24, r28
     172:	9d 07       	cpc	r25, r29
     174:	54 f5       	brge	.+84     	; 0x1ca <__vector_15+0x11c>
	{
		joyyPercent = joyy*negYfactor/100+negYadd;
     176:	60 91 c7 02 	lds	r22, 0x02C7	; 0x8002c7 <joyy>
     17a:	70 91 c8 02 	lds	r23, 0x02C8	; 0x8002c8 <joyy+0x1>
     17e:	07 2e       	mov	r0, r23
     180:	00 0c       	add	r0, r0
     182:	88 0b       	sbc	r24, r24
     184:	99 0b       	sbc	r25, r25
     186:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     18a:	20 91 d9 02 	lds	r18, 0x02D9	; 0x8002d9 <negYfactor>
     18e:	30 91 da 02 	lds	r19, 0x02DA	; 0x8002da <negYfactor+0x1>
     192:	40 91 db 02 	lds	r20, 0x02DB	; 0x8002db <negYfactor+0x2>
     196:	50 91 dc 02 	lds	r21, 0x02DC	; 0x8002dc <negYfactor+0x3>
     19a:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	48 ec       	ldi	r20, 0xC8	; 200
     1a4:	52 e4       	ldi	r21, 0x42	; 66
     1a6:	0e 94 43 06 	call	0xc86	; 0xc86 <__divsf3>
     1aa:	20 91 b7 02 	lds	r18, 0x02B7	; 0x8002b7 <negYadd>
     1ae:	30 91 b8 02 	lds	r19, 0x02B8	; 0x8002b8 <negYadd+0x1>
     1b2:	40 91 b9 02 	lds	r20, 0x02B9	; 0x8002b9 <negYadd+0x2>
     1b6:	50 91 ba 02 	lds	r21, 0x02BA	; 0x8002ba <negYadd+0x3>
     1ba:	0e 94 d7 05 	call	0xbae	; 0xbae <__addsf3>
     1be:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     1c2:	70 93 c6 02 	sts	0x02C6, r23	; 0x8002c6 <joyyPercent+0x1>
     1c6:	60 93 c5 02 	sts	0x02C5, r22	; 0x8002c5 <joyyPercent>
	}
	if (joyy >= middleyjoyy)
     1ca:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <joyy>
     1ce:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <joyy+0x1>
     1d2:	8c 17       	cp	r24, r28
     1d4:	9d 07       	cpc	r25, r29
     1d6:	54 f1       	brlt	.+84     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
	{
		joyyPercent = joyy*posYfactor/100+posYadd;
     1d8:	60 91 c7 02 	lds	r22, 0x02C7	; 0x8002c7 <joyy>
     1dc:	70 91 c8 02 	lds	r23, 0x02C8	; 0x8002c8 <joyy+0x1>
     1e0:	07 2e       	mov	r0, r23
     1e2:	00 0c       	add	r0, r0
     1e4:	88 0b       	sbc	r24, r24
     1e6:	99 0b       	sbc	r25, r25
     1e8:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     1ec:	20 91 cf 02 	lds	r18, 0x02CF	; 0x8002cf <posYfactor>
     1f0:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <posYfactor+0x1>
     1f4:	40 91 d1 02 	lds	r20, 0x02D1	; 0x8002d1 <posYfactor+0x2>
     1f8:	50 91 d2 02 	lds	r21, 0x02D2	; 0x8002d2 <posYfactor+0x3>
     1fc:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     200:	20 e0       	ldi	r18, 0x00	; 0
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	48 ec       	ldi	r20, 0xC8	; 200
     206:	52 e4       	ldi	r21, 0x42	; 66
     208:	0e 94 43 06 	call	0xc86	; 0xc86 <__divsf3>
     20c:	20 91 bf 02 	lds	r18, 0x02BF	; 0x8002bf <posYadd>
     210:	30 91 c0 02 	lds	r19, 0x02C0	; 0x8002c0 <posYadd+0x1>
     214:	40 91 c1 02 	lds	r20, 0x02C1	; 0x8002c1 <posYadd+0x2>
     218:	50 91 c2 02 	lds	r21, 0x02C2	; 0x8002c2 <posYadd+0x3>
     21c:	0e 94 d7 05 	call	0xbae	; 0xbae <__addsf3>
     220:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     224:	70 93 c6 02 	sts	0x02C6, r23	; 0x8002c6 <joyyPercent+0x1>
     228:	60 93 c5 02 	sts	0x02C5, r22	; 0x8002c5 <joyyPercent>
	}
	if (joyx < middleyjoyx)
     22c:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <joyx>
     230:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <joyx+0x1>
     234:	c0 91 d7 02 	lds	r28, 0x02D7	; 0x8002d7 <middleyjoyx>
     238:	d0 91 d8 02 	lds	r29, 0x02D8	; 0x8002d8 <middleyjoyx+0x1>
     23c:	8c 17       	cp	r24, r28
     23e:	9d 07       	cpc	r25, r29
     240:	54 f5       	brge	.+84     	; 0x296 <__EEPROM_REGION_LENGTH__+0x96>
	{
		joyxPercent = joyx*negXfactor/100+negXadd;
     242:	60 91 e8 02 	lds	r22, 0x02E8	; 0x8002e8 <joyx>
     246:	70 91 e9 02 	lds	r23, 0x02E9	; 0x8002e9 <joyx+0x1>
     24a:	07 2e       	mov	r0, r23
     24c:	00 0c       	add	r0, r0
     24e:	88 0b       	sbc	r24, r24
     250:	99 0b       	sbc	r25, r25
     252:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     256:	20 91 dd 02 	lds	r18, 0x02DD	; 0x8002dd <negXfactor>
     25a:	30 91 de 02 	lds	r19, 0x02DE	; 0x8002de <negXfactor+0x1>
     25e:	40 91 df 02 	lds	r20, 0x02DF	; 0x8002df <negXfactor+0x2>
     262:	50 91 e0 02 	lds	r21, 0x02E0	; 0x8002e0 <negXfactor+0x3>
     266:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     26a:	20 e0       	ldi	r18, 0x00	; 0
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	48 ec       	ldi	r20, 0xC8	; 200
     270:	52 e4       	ldi	r21, 0x42	; 66
     272:	0e 94 43 06 	call	0xc86	; 0xc86 <__divsf3>
     276:	20 91 d3 02 	lds	r18, 0x02D3	; 0x8002d3 <negXadd>
     27a:	30 91 d4 02 	lds	r19, 0x02D4	; 0x8002d4 <negXadd+0x1>
     27e:	40 91 d5 02 	lds	r20, 0x02D5	; 0x8002d5 <negXadd+0x2>
     282:	50 91 d6 02 	lds	r21, 0x02D6	; 0x8002d6 <negXadd+0x3>
     286:	0e 94 d7 05 	call	0xbae	; 0xbae <__addsf3>
     28a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     28e:	70 93 be 02 	sts	0x02BE, r23	; 0x8002be <joyxPercent+0x1>
     292:	60 93 bd 02 	sts	0x02BD, r22	; 0x8002bd <joyxPercent>
	}
	if (joyx >= middleyjoyx)
     296:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <joyx>
     29a:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <joyx+0x1>
     29e:	8c 17       	cp	r24, r28
     2a0:	9d 07       	cpc	r25, r29
     2a2:	54 f1       	brlt	.+84     	; 0x2f8 <__EEPROM_REGION_LENGTH__+0xf8>
	{
		joyxPercent = joyx*posXfactor/100+posXadd;
     2a4:	60 91 e8 02 	lds	r22, 0x02E8	; 0x8002e8 <joyx>
     2a8:	70 91 e9 02 	lds	r23, 0x02E9	; 0x8002e9 <joyx+0x1>
     2ac:	07 2e       	mov	r0, r23
     2ae:	00 0c       	add	r0, r0
     2b0:	88 0b       	sbc	r24, r24
     2b2:	99 0b       	sbc	r25, r25
     2b4:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     2b8:	20 91 e4 02 	lds	r18, 0x02E4	; 0x8002e4 <posXfactor>
     2bc:	30 91 e5 02 	lds	r19, 0x02E5	; 0x8002e5 <posXfactor+0x1>
     2c0:	40 91 e6 02 	lds	r20, 0x02E6	; 0x8002e6 <posXfactor+0x2>
     2c4:	50 91 e7 02 	lds	r21, 0x02E7	; 0x8002e7 <posXfactor+0x3>
     2c8:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     2cc:	20 e0       	ldi	r18, 0x00	; 0
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	48 ec       	ldi	r20, 0xC8	; 200
     2d2:	52 e4       	ldi	r21, 0x42	; 66
     2d4:	0e 94 43 06 	call	0xc86	; 0xc86 <__divsf3>
     2d8:	20 91 cb 02 	lds	r18, 0x02CB	; 0x8002cb <posXadd>
     2dc:	30 91 cc 02 	lds	r19, 0x02CC	; 0x8002cc <posXadd+0x1>
     2e0:	40 91 cd 02 	lds	r20, 0x02CD	; 0x8002cd <posXadd+0x2>
     2e4:	50 91 ce 02 	lds	r21, 0x02CE	; 0x8002ce <posXadd+0x3>
     2e8:	0e 94 d7 05 	call	0xbae	; 0xbae <__addsf3>
     2ec:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     2f0:	70 93 be 02 	sts	0x02BE, r23	; 0x8002be <joyxPercent+0x1>
     2f4:	60 93 bd 02 	sts	0x02BD, r22	; 0x8002bd <joyxPercent>
	}	
	if (joyxPercent > -5 && joyxPercent < 5)
     2f8:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <joyxPercent>
     2fc:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <joyxPercent+0x1>
     300:	8c 3f       	cpi	r24, 0xFC	; 252
     302:	9f 4f       	sbci	r25, 0xFF	; 255
     304:	54 f0       	brlt	.+20     	; 0x31a <__EEPROM_REGION_LENGTH__+0x11a>
     306:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <joyxPercent>
     30a:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <joyxPercent+0x1>
     30e:	05 97       	sbiw	r24, 0x05	; 5
     310:	24 f4       	brge	.+8      	; 0x31a <__EEPROM_REGION_LENGTH__+0x11a>
	{
		joyxPercent = 0;
     312:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <joyxPercent+0x1>
     316:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <joyxPercent>
	}
	if (joyyPercent > -5 && joyyPercent < 5)
     31a:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <joyyPercent>
     31e:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <joyyPercent+0x1>
     322:	8c 3f       	cpi	r24, 0xFC	; 252
     324:	9f 4f       	sbci	r25, 0xFF	; 255
     326:	54 f0       	brlt	.+20     	; 0x33c <__EEPROM_REGION_LENGTH__+0x13c>
     328:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <joyyPercent>
     32c:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <joyyPercent+0x1>
     330:	05 97       	sbiw	r24, 0x05	; 5
     332:	24 f4       	brge	.+8      	; 0x33c <__EEPROM_REGION_LENGTH__+0x13c>
	{
		joyyPercent = 0;
     334:	10 92 c6 02 	sts	0x02C6, r1	; 0x8002c6 <joyyPercent+0x1>
     338:	10 92 c5 02 	sts	0x02C5, r1	; 0x8002c5 <joyyPercent>
	}

}
     33c:	ff 91       	pop	r31
     33e:	ef 91       	pop	r30
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	bf 91       	pop	r27
     346:	af 91       	pop	r26
     348:	9f 91       	pop	r25
     34a:	8f 91       	pop	r24
     34c:	7f 91       	pop	r23
     34e:	6f 91       	pop	r22
     350:	5f 91       	pop	r21
     352:	4f 91       	pop	r20
     354:	3f 91       	pop	r19
     356:	2f 91       	pop	r18
     358:	0f 90       	pop	r0
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	0f 90       	pop	r0
     35e:	1f 90       	pop	r1
     360:	18 95       	reti

00000362 <adc_init>:





void adc_init(){
     362:	6f 92       	push	r6
     364:	7f 92       	push	r7
     366:	8f 92       	push	r8
     368:	9f 92       	push	r9
     36a:	af 92       	push	r10
     36c:	bf 92       	push	r11
     36e:	cf 92       	push	r12
     370:	df 92       	push	r13
     372:	ef 92       	push	r14
     374:	ff 92       	push	r15
     376:	0f 93       	push	r16
     378:	1f 93       	push	r17
     37a:	cf 93       	push	r28
     37c:	df 93       	push	r29
    TCCR3A = (1 << WGM30) | (1 << WGM31) | (1 << COM3A0);
     37e:	83 e4       	ldi	r24, 0x43	; 67
     380:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
    TCCR3B = (1 << CS30) | (1 << WGM33);
     384:	81 e1       	ldi	r24, 0x11	; 17
     386:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
    OCR3A = 2; // Define the frequency of the generated PWM signal
     38a:	82 e0       	ldi	r24, 0x02	; 2
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     392:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
     396:	81 b3       	in	r24, 0x11	; 17
     398:	80 61       	ori	r24, 0x10	; 16
     39a:	81 bb       	out	0x11, r24	; 17
     39c:	83 ec       	ldi	r24, 0xC3	; 195
     39e:	99 e0       	ldi	r25, 0x09	; 9
     3a0:	01 97       	sbiw	r24, 0x01	; 1
     3a2:	f1 f7       	brne	.-4      	; 0x3a0 <adc_init+0x3e>
     3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <adc_init+0x44>
     3a6:	00 00       	nop
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     3a8:	20 e0       	ldi	r18, 0x00	; 0
     3aa:	30 e0       	ldi	r19, 0x00	; 0
    OCR3A = 2; // Define the frequency of the generated PWM signal
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
	
	
	_delay_ms(10);
	int times = 0;
     3ac:	c0 e0       	ldi	r28, 0x00	; 0
     3ae:	d0 e0       	ldi	r29, 0x00	; 0
	int ignore;
	for (int i = 0; i<100; i++)
     3b0:	30 c0       	rjmp	.+96     	; 0x412 <__DATA_REGION_LENGTH__+0x12>
	{
		ADC[0x00] = 0x00;
     3b2:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     3b6:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     3ba:	10 82       	st	Z, r1
     3bc:	89 ef       	ldi	r24, 0xF9	; 249
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	01 97       	sbiw	r24, 0x01	; 1
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <adc_init+0x5e>
     3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <adc_init+0x64>
     3c6:	00 00       	nop
		_delay_ms(1);
		intermittentx = intermittentx + ADC[0x00];
     3c8:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     3cc:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     3d0:	40 81       	ld	r20, Z
     3d2:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <__data_end>
     3d6:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <__data_end+0x1>
     3da:	84 0f       	add	r24, r20
     3dc:	91 1d       	adc	r25, r1
     3de:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <__data_end+0x1>
     3e2:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <__data_end>
		intermittenty = intermittenty + ADC[0x00];
     3e6:	40 81       	ld	r20, Z
     3e8:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <intermittenty>
     3ec:	90 91 b3 02 	lds	r25, 0x02B3	; 0x8002b3 <intermittenty+0x1>
     3f0:	84 0f       	add	r24, r20
     3f2:	91 1d       	adc	r25, r1
     3f4:	90 93 b3 02 	sts	0x02B3, r25	; 0x8002b3 <intermittenty+0x1>
     3f8:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <intermittenty>
		ignore = ADC[0x00];
     3fc:	80 81       	ld	r24, Z
		ignore = ADC[0x00];
     3fe:	80 81       	ld	r24, Z
     400:	89 ef       	ldi	r24, 0xF9	; 249
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	f1 f7       	brne	.-4      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
     408:	00 c0       	rjmp	.+0      	; 0x40a <__DATA_REGION_LENGTH__+0xa>
     40a:	00 00       	nop
		_delay_ms(1);
		times++;
     40c:	21 96       	adiw	r28, 0x01	; 1
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     40e:	2f 5f       	subi	r18, 0xFF	; 255
     410:	3f 4f       	sbci	r19, 0xFF	; 255
     412:	24 36       	cpi	r18, 0x64	; 100
     414:	31 05       	cpc	r19, r1
     416:	6c f2       	brlt	.-102    	; 0x3b2 <adc_init+0x50>
		ignore = ADC[0x00];
		ignore = ADC[0x00];
		_delay_ms(1);
		times++;
	}
	middleyjoyx = intermittentx/times;
     418:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <__data_end>
     41c:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <__data_end+0x1>
     420:	be 01       	movw	r22, r28
     422:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     426:	26 2f       	mov	r18, r22
     428:	37 2f       	mov	r19, r23
     42a:	60 93 d7 02 	sts	0x02D7, r22	; 0x8002d7 <middleyjoyx>
     42e:	70 93 d8 02 	sts	0x02D8, r23	; 0x8002d8 <middleyjoyx+0x1>
	middleyjoyy = intermittenty/times;
     432:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <intermittenty>
     436:	90 91 b3 02 	lds	r25, 0x02B3	; 0x8002b3 <intermittenty+0x1>
     43a:	be 01       	movw	r22, r28
     43c:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     440:	60 93 bb 02 	sts	0x02BB, r22	; 0x8002bb <middleyjoyy>
     444:	70 93 bc 02 	sts	0x02BC, r23	; 0x8002bc <middleyjoyy+0x1>
	printf("\n\n\r %d %d \n", middleyjoyx, middleyjoyy);
     448:	7f 93       	push	r23
     44a:	6f 93       	push	r22
     44c:	3f 93       	push	r19
     44e:	2f 93       	push	r18
     450:	8a e0       	ldi	r24, 0x0A	; 10
     452:	91 e0       	ldi	r25, 0x01	; 1
     454:	9f 93       	push	r25
     456:	8f 93       	push	r24
     458:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	
	posXfactor = (10000)/(255-middleyjoyx);
     45c:	00 91 d7 02 	lds	r16, 0x02D7	; 0x8002d7 <middleyjoyx>
     460:	10 91 d8 02 	lds	r17, 0x02D8	; 0x8002d8 <middleyjoyx+0x1>
     464:	66 24       	eor	r6, r6
     466:	6a 94       	dec	r6
     468:	71 2c       	mov	r7, r1
     46a:	73 01       	movw	r14, r6
     46c:	e0 1a       	sub	r14, r16
     46e:	f1 0a       	sbc	r15, r17
     470:	c0 e1       	ldi	r28, 0x10	; 16
     472:	d7 e2       	ldi	r29, 0x27	; 39
     474:	ce 01       	movw	r24, r28
     476:	b7 01       	movw	r22, r14
     478:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     47c:	07 2e       	mov	r0, r23
     47e:	00 0c       	add	r0, r0
     480:	88 0b       	sbc	r24, r24
     482:	99 0b       	sbc	r25, r25
     484:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     488:	4b 01       	movw	r8, r22
     48a:	5c 01       	movw	r10, r24
     48c:	60 93 e4 02 	sts	0x02E4, r22	; 0x8002e4 <posXfactor>
     490:	70 93 e5 02 	sts	0x02E5, r23	; 0x8002e5 <posXfactor+0x1>
     494:	80 93 e6 02 	sts	0x02E6, r24	; 0x8002e6 <posXfactor+0x2>
     498:	90 93 e7 02 	sts	0x02E7, r25	; 0x8002e7 <posXfactor+0x3>
	posXadd = -1*(100*middleyjoyx)/(255-middleyjoyx);
     49c:	2c e9       	ldi	r18, 0x9C	; 156
     49e:	20 03       	mulsu	r18, r16
     4a0:	60 01       	movw	r12, r0
     4a2:	21 9f       	mul	r18, r17
     4a4:	d0 0c       	add	r13, r0
     4a6:	11 24       	eor	r1, r1
     4a8:	c6 01       	movw	r24, r12
     4aa:	b7 01       	movw	r22, r14
     4ac:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     4b0:	7b 01       	movw	r14, r22
     4b2:	07 2e       	mov	r0, r23
     4b4:	00 0c       	add	r0, r0
     4b6:	88 0b       	sbc	r24, r24
     4b8:	99 0b       	sbc	r25, r25
     4ba:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     4be:	60 93 cb 02 	sts	0x02CB, r22	; 0x8002cb <posXadd>
     4c2:	70 93 cc 02 	sts	0x02CC, r23	; 0x8002cc <posXadd+0x1>
     4c6:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <posXadd+0x2>
     4ca:	90 93 ce 02 	sts	0x02CE, r25	; 0x8002ce <posXadd+0x3>
	negXfactor = (10000/middleyjoyx);
     4ce:	ce 01       	movw	r24, r28
     4d0:	b8 01       	movw	r22, r16
     4d2:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     4d6:	07 2e       	mov	r0, r23
     4d8:	00 0c       	add	r0, r0
     4da:	88 0b       	sbc	r24, r24
     4dc:	99 0b       	sbc	r25, r25
     4de:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     4e2:	60 93 dd 02 	sts	0x02DD, r22	; 0x8002dd <negXfactor>
     4e6:	70 93 de 02 	sts	0x02DE, r23	; 0x8002de <negXfactor+0x1>
     4ea:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <negXfactor+0x2>
     4ee:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <negXfactor+0x3>
	negXadd = -1*(middleyjoyx*100)/(middleyjoyx);
     4f2:	c6 01       	movw	r24, r12
     4f4:	b8 01       	movw	r22, r16
     4f6:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     4fa:	07 2e       	mov	r0, r23
     4fc:	00 0c       	add	r0, r0
     4fe:	88 0b       	sbc	r24, r24
     500:	99 0b       	sbc	r25, r25
     502:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     506:	60 93 d3 02 	sts	0x02D3, r22	; 0x8002d3 <negXadd>
     50a:	70 93 d4 02 	sts	0x02D4, r23	; 0x8002d4 <negXadd+0x1>
     50e:	80 93 d5 02 	sts	0x02D5, r24	; 0x8002d5 <negXadd+0x2>
     512:	90 93 d6 02 	sts	0x02D6, r25	; 0x8002d6 <negXadd+0x3>
	posYfactor = (10000)/(255-middleyjoyy);
     516:	00 91 bb 02 	lds	r16, 0x02BB	; 0x8002bb <middleyjoyy>
     51a:	10 91 bc 02 	lds	r17, 0x02BC	; 0x8002bc <middleyjoyy+0x1>
     51e:	60 1a       	sub	r6, r16
     520:	71 0a       	sbc	r7, r17
     522:	ce 01       	movw	r24, r28
     524:	b3 01       	movw	r22, r6
     526:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     52a:	07 2e       	mov	r0, r23
     52c:	00 0c       	add	r0, r0
     52e:	88 0b       	sbc	r24, r24
     530:	99 0b       	sbc	r25, r25
     532:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     536:	60 93 cf 02 	sts	0x02CF, r22	; 0x8002cf <posYfactor>
     53a:	70 93 d0 02 	sts	0x02D0, r23	; 0x8002d0 <posYfactor+0x1>
     53e:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <posYfactor+0x2>
     542:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <posYfactor+0x3>
	posYadd= -1*(100*middleyjoyy)/(255-middleyjoyy);
     546:	2c e9       	ldi	r18, 0x9C	; 156
     548:	20 03       	mulsu	r18, r16
     54a:	60 01       	movw	r12, r0
     54c:	21 9f       	mul	r18, r17
     54e:	d0 0c       	add	r13, r0
     550:	11 24       	eor	r1, r1
     552:	c6 01       	movw	r24, r12
     554:	b3 01       	movw	r22, r6
     556:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     55a:	07 2e       	mov	r0, r23
     55c:	00 0c       	add	r0, r0
     55e:	88 0b       	sbc	r24, r24
     560:	99 0b       	sbc	r25, r25
     562:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     566:	60 93 bf 02 	sts	0x02BF, r22	; 0x8002bf <posYadd>
     56a:	70 93 c0 02 	sts	0x02C0, r23	; 0x8002c0 <posYadd+0x1>
     56e:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <posYadd+0x2>
     572:	90 93 c2 02 	sts	0x02C2, r25	; 0x8002c2 <posYadd+0x3>
	negYfactor = (10000/middleyjoyy);
     576:	ce 01       	movw	r24, r28
     578:	b8 01       	movw	r22, r16
     57a:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     57e:	07 2e       	mov	r0, r23
     580:	00 0c       	add	r0, r0
     582:	88 0b       	sbc	r24, r24
     584:	99 0b       	sbc	r25, r25
     586:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     58a:	60 93 d9 02 	sts	0x02D9, r22	; 0x8002d9 <negYfactor>
     58e:	70 93 da 02 	sts	0x02DA, r23	; 0x8002da <negYfactor+0x1>
     592:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <negYfactor+0x2>
     596:	90 93 dc 02 	sts	0x02DC, r25	; 0x8002dc <negYfactor+0x3>
	negYadd = -1*(middleyjoyy*100)/(middleyjoyy);
     59a:	c6 01       	movw	r24, r12
     59c:	b8 01       	movw	r22, r16
     59e:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__divmodhi4>
     5a2:	07 2e       	mov	r0, r23
     5a4:	00 0c       	add	r0, r0
     5a6:	88 0b       	sbc	r24, r24
     5a8:	99 0b       	sbc	r25, r25
     5aa:	0e 94 ed 06 	call	0xdda	; 0xdda <__floatsisf>
     5ae:	60 93 b7 02 	sts	0x02B7, r22	; 0x8002b7 <negYadd>
     5b2:	70 93 b8 02 	sts	0x02B8, r23	; 0x8002b8 <negYadd+0x1>
     5b6:	80 93 b9 02 	sts	0x02B9, r24	; 0x8002b9 <negYadd+0x2>
     5ba:	90 93 ba 02 	sts	0x02BA, r25	; 0x8002ba <negYadd+0x3>
	printf("Pos x: %d*x + %d\n\r", (int)(posXfactor*1000), (int)posXadd);
     5be:	20 e0       	ldi	r18, 0x00	; 0
     5c0:	30 e0       	ldi	r19, 0x00	; 0
     5c2:	4a e7       	ldi	r20, 0x7A	; 122
     5c4:	54 e4       	ldi	r21, 0x44	; 68
     5c6:	c5 01       	movw	r24, r10
     5c8:	b4 01       	movw	r22, r8
     5ca:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     5ce:	ff 92       	push	r15
     5d0:	ef 92       	push	r14
     5d2:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     5d6:	7f 93       	push	r23
     5d8:	6f 93       	push	r22
     5da:	86 e1       	ldi	r24, 0x16	; 22
     5dc:	91 e0       	ldi	r25, 0x01	; 1
     5de:	9f 93       	push	r25
     5e0:	8f 93       	push	r24
     5e2:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Neg x: %d*x + %d\n\r", (int)(negXfactor*1000), (int)negXadd);
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	4a e7       	ldi	r20, 0x7A	; 122
     5ec:	54 e4       	ldi	r21, 0x44	; 68
     5ee:	60 91 dd 02 	lds	r22, 0x02DD	; 0x8002dd <negXfactor>
     5f2:	70 91 de 02 	lds	r23, 0x02DE	; 0x8002de <negXfactor+0x1>
     5f6:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <negXfactor+0x2>
     5fa:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <negXfactor+0x3>
     5fe:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     602:	6b 01       	movw	r12, r22
     604:	7c 01       	movw	r14, r24
     606:	60 91 d3 02 	lds	r22, 0x02D3	; 0x8002d3 <negXadd>
     60a:	70 91 d4 02 	lds	r23, 0x02D4	; 0x8002d4 <negXadd+0x1>
     60e:	80 91 d5 02 	lds	r24, 0x02D5	; 0x8002d5 <negXadd+0x2>
     612:	90 91 d6 02 	lds	r25, 0x02D6	; 0x8002d6 <negXadd+0x3>
     616:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     61a:	7f 93       	push	r23
     61c:	6f 93       	push	r22
     61e:	c7 01       	movw	r24, r14
     620:	b6 01       	movw	r22, r12
     622:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     626:	7f 93       	push	r23
     628:	6f 93       	push	r22
     62a:	89 e2       	ldi	r24, 0x29	; 41
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	9f 93       	push	r25
     630:	8f 93       	push	r24
     632:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Pos y: %d*y + %d\n\r", (int)(posYfactor*1000), (int)posYadd);
     636:	20 e0       	ldi	r18, 0x00	; 0
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	4a e7       	ldi	r20, 0x7A	; 122
     63c:	54 e4       	ldi	r21, 0x44	; 68
     63e:	60 91 cf 02 	lds	r22, 0x02CF	; 0x8002cf <posYfactor>
     642:	70 91 d0 02 	lds	r23, 0x02D0	; 0x8002d0 <posYfactor+0x1>
     646:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <posYfactor+0x2>
     64a:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <posYfactor+0x3>
     64e:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     652:	6b 01       	movw	r12, r22
     654:	7c 01       	movw	r14, r24
     656:	60 91 bf 02 	lds	r22, 0x02BF	; 0x8002bf <posYadd>
     65a:	70 91 c0 02 	lds	r23, 0x02C0	; 0x8002c0 <posYadd+0x1>
     65e:	80 91 c1 02 	lds	r24, 0x02C1	; 0x8002c1 <posYadd+0x2>
     662:	90 91 c2 02 	lds	r25, 0x02C2	; 0x8002c2 <posYadd+0x3>
     666:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     66a:	7f 93       	push	r23
     66c:	6f 93       	push	r22
     66e:	c7 01       	movw	r24, r14
     670:	b6 01       	movw	r22, r12
     672:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     676:	7f 93       	push	r23
     678:	6f 93       	push	r22
     67a:	8c e3       	ldi	r24, 0x3C	; 60
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	9f 93       	push	r25
     680:	8f 93       	push	r24
     682:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Neg y: %d*y + %d\n\r", (int)(negYfactor*1000), (int)negYadd);
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	4a e7       	ldi	r20, 0x7A	; 122
     68c:	54 e4       	ldi	r21, 0x44	; 68
     68e:	60 91 d9 02 	lds	r22, 0x02D9	; 0x8002d9 <negYfactor>
     692:	70 91 da 02 	lds	r23, 0x02DA	; 0x8002da <negYfactor+0x1>
     696:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <negYfactor+0x2>
     69a:	90 91 dc 02 	lds	r25, 0x02DC	; 0x8002dc <negYfactor+0x3>
     69e:	0e 94 79 07 	call	0xef2	; 0xef2 <__mulsf3>
     6a2:	6b 01       	movw	r12, r22
     6a4:	7c 01       	movw	r14, r24
     6a6:	60 91 b7 02 	lds	r22, 0x02B7	; 0x8002b7 <negYadd>
     6aa:	70 91 b8 02 	lds	r23, 0x02B8	; 0x8002b8 <negYadd+0x1>
     6ae:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <negYadd+0x2>
     6b2:	90 91 ba 02 	lds	r25, 0x02BA	; 0x8002ba <negYadd+0x3>
     6b6:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     6ba:	7f 93       	push	r23
     6bc:	6f 93       	push	r22
     6be:	c7 01       	movw	r24, r14
     6c0:	b6 01       	movw	r22, r12
     6c2:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixsfsi>
     6c6:	7f 93       	push	r23
     6c8:	6f 93       	push	r22
     6ca:	8f e4       	ldi	r24, 0x4F	; 79
     6cc:	91 e0       	ldi	r25, 0x01	; 1
     6ce:	9f 93       	push	r25
     6d0:	8f 93       	push	r24
     6d2:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	
	cli();
     6d6:	f8 94       	cli
	TCCR1A = 0x00;
     6d8:	1f bc       	out	0x2f, r1	; 47
	TCCR1B =  (1<<CS11);
     6da:	82 e0       	ldi	r24, 0x02	; 2
     6dc:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1);   
     6de:	80 e8       	ldi	r24, 0x80	; 128
     6e0:	89 bf       	out	0x39, r24	; 57
	sei(); 
     6e2:	78 94       	sei
	
	ADC[0x00] = 0x00;
     6e4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6e8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6ec:	10 82       	st	Z, r1
	//set_bit(gicr,int1);
	//// enable global interrupts
	//sei();


}
     6ee:	8d b7       	in	r24, 0x3d	; 61
     6f0:	9e b7       	in	r25, 0x3e	; 62
     6f2:	4e 96       	adiw	r24, 0x1e	; 30
     6f4:	0f b6       	in	r0, 0x3f	; 63
     6f6:	f8 94       	cli
     6f8:	9e bf       	out	0x3e, r25	; 62
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	8d bf       	out	0x3d, r24	; 61
     6fe:	df 91       	pop	r29
     700:	cf 91       	pop	r28
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	ff 90       	pop	r15
     708:	ef 90       	pop	r14
     70a:	df 90       	pop	r13
     70c:	cf 90       	pop	r12
     70e:	bf 90       	pop	r11
     710:	af 90       	pop	r10
     712:	9f 90       	pop	r9
     714:	8f 90       	pop	r8
     716:	7f 90       	pop	r7
     718:	6f 90       	pop	r6
     71a:	08 95       	ret

0000071c <__vector_1>:
}
uint8_t CAN_message_recieved(void){
	uint8_t temp = message_interrupt_flag;
	message_interrupt_flag=0;
	return(temp);
}
     71c:	1f 92       	push	r1
     71e:	0f 92       	push	r0
     720:	0f b6       	in	r0, 0x3f	; 63
     722:	0f 92       	push	r0
     724:	11 24       	eor	r1, r1
     726:	2f 93       	push	r18
     728:	3f 93       	push	r19
     72a:	4f 93       	push	r20
     72c:	5f 93       	push	r21
     72e:	6f 93       	push	r22
     730:	7f 93       	push	r23
     732:	8f 93       	push	r24
     734:	9f 93       	push	r25
     736:	af 93       	push	r26
     738:	bf 93       	push	r27
     73a:	ef 93       	push	r30
     73c:	ff 93       	push	r31
     73e:	81 e0       	ldi	r24, 0x01	; 1
     740:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <message_interrupt_flag>
     744:	82 e6       	ldi	r24, 0x62	; 98
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	9f 93       	push	r25
     74a:	8f 93       	push	r24
     74c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
     750:	0f 90       	pop	r0
     752:	0f 90       	pop	r0
     754:	ff 91       	pop	r31
     756:	ef 91       	pop	r30
     758:	bf 91       	pop	r27
     75a:	af 91       	pop	r26
     75c:	9f 91       	pop	r25
     75e:	8f 91       	pop	r24
     760:	7f 91       	pop	r23
     762:	6f 91       	pop	r22
     764:	5f 91       	pop	r21
     766:	4f 91       	pop	r20
     768:	3f 91       	pop	r19
     76a:	2f 91       	pop	r18
     76c:	0f 90       	pop	r0
     76e:	0f be       	out	0x3f, r0	; 63
     770:	0f 90       	pop	r0
     772:	1f 90       	pop	r1
     774:	18 95       	reti

00000776 <CAN_init>:
     776:	0e 94 83 04 	call	0x906	; 0x906 <CAN_module_init>
     77a:	f8 94       	cli
     77c:	85 b7       	in	r24, 0x35	; 53
     77e:	83 60       	ori	r24, 0x03	; 3
     780:	85 bf       	out	0x35, r24	; 53
     782:	80 e4       	ldi	r24, 0x40	; 64
     784:	8b bf       	out	0x3b, r24	; 59
     786:	78 94       	sei
     788:	60 e8       	ldi	r22, 0x80	; 128
     78a:	8f e0       	ldi	r24, 0x0F	; 15
     78c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	8b e2       	ldi	r24, 0x2B	; 43
     794:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     798:	63 e0       	ldi	r22, 0x03	; 3
     79a:	8a e2       	ldi	r24, 0x2A	; 42
     79c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     7a0:	61 eb       	ldi	r22, 0xB1	; 177
     7a2:	89 e2       	ldi	r24, 0x29	; 41
     7a4:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     7a8:	65 e0       	ldi	r22, 0x05	; 5
     7aa:	88 e2       	ldi	r24, 0x28	; 40
     7ac:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     7b0:	60 e0       	ldi	r22, 0x00	; 0
     7b2:	8f e0       	ldi	r24, 0x0F	; 15
     7b4:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     7b8:	08 95       	ret

000007ba <CAN_send_message>:




void CAN_send_message(CAN_message_struct* message){
     7ba:	0f 93       	push	r16
     7bc:	1f 93       	push	r17
     7be:	cf 93       	push	r28
     7c0:	8c 01       	movw	r16, r24
	//load tx0 buffer with data
	printf("ID: %x%x, DLC: %x, Data[8]: %x\n\r", message->message_id[0], message->message_id[1], message->data_length_code, message->data[6]);
     7c2:	fc 01       	movw	r30, r24
     7c4:	31 85       	ldd	r19, Z+9	; 0x09
     7c6:	22 81       	ldd	r18, Z+2	; 0x02
     7c8:	91 81       	ldd	r25, Z+1	; 0x01
     7ca:	80 81       	ld	r24, Z
     7cc:	1f 92       	push	r1
     7ce:	3f 93       	push	r19
     7d0:	1f 92       	push	r1
     7d2:	2f 93       	push	r18
     7d4:	1f 92       	push	r1
     7d6:	9f 93       	push	r25
     7d8:	1f 92       	push	r1
     7da:	8f 93       	push	r24
     7dc:	87 e6       	ldi	r24, 0x67	; 103
     7de:	91 e0       	ldi	r25, 0x01	; 1
     7e0:	9f 93       	push	r25
     7e2:	8f 93       	push	r24
     7e4:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
     7e8:	83 ec       	ldi	r24, 0xC3	; 195
     7ea:	99 e0       	ldi	r25, 0x09	; 9
     7ec:	01 97       	sbiw	r24, 0x01	; 1
     7ee:	f1 f7       	brne	.-4      	; 0x7ec <CAN_send_message+0x32>
     7f0:	00 c0       	rjmp	.+0      	; 0x7f2 <CAN_send_message+0x38>
     7f2:	00 00       	nop
	uint8_t IDH = message->message_id[1]<<5;
	_delay_ms(10);
	CAN_module_write(MCP_TXB0CTRL + 0x01, message->message_id[0]);
     7f4:	f8 01       	movw	r30, r16
     7f6:	60 81       	ld	r22, Z
     7f8:	81 e3       	ldi	r24, 0x31	; 49
     7fa:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     7fe:	83 ec       	ldi	r24, 0xC3	; 195
     800:	99 e0       	ldi	r25, 0x09	; 9
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	f1 f7       	brne	.-4      	; 0x802 <CAN_send_message+0x48>
     806:	00 c0       	rjmp	.+0      	; 0x808 <CAN_send_message+0x4e>
     808:	00 00       	nop
	_delay_ms(10);
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
     80a:	f8 01       	movw	r30, r16
     80c:	61 81       	ldd	r22, Z+1	; 0x01
     80e:	62 95       	swap	r22
     810:	66 0f       	add	r22, r22
     812:	60 7e       	andi	r22, 0xE0	; 224
     814:	82 e3       	ldi	r24, 0x32	; 50
     816:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     81a:	83 ec       	ldi	r24, 0xC3	; 195
     81c:	99 e0       	ldi	r25, 0x09	; 9
     81e:	01 97       	sbiw	r24, 0x01	; 1
     820:	f1 f7       	brne	.-4      	; 0x81e <CAN_send_message+0x64>
     822:	00 c0       	rjmp	.+0      	; 0x824 <CAN_send_message+0x6a>
     824:	00 00       	nop
	_delay_ms(10);
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
     826:	f8 01       	movw	r30, r16
     828:	62 81       	ldd	r22, Z+2	; 0x02
     82a:	85 e3       	ldi	r24, 0x35	; 53
     82c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     830:	83 ec       	ldi	r24, 0xC3	; 195
     832:	99 e0       	ldi	r25, 0x09	; 9
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <CAN_send_message+0x7a>
     838:	00 c0       	rjmp	.+0      	; 0x83a <CAN_send_message+0x80>
     83a:	00 00       	nop
	_delay_ms(10);
	for (uint8_t i = 0; i < 8; i++)
     83c:	ed b7       	in	r30, 0x3d	; 61
     83e:	fe b7       	in	r31, 0x3e	; 62
     840:	3a 96       	adiw	r30, 0x0a	; 10
     842:	0f b6       	in	r0, 0x3f	; 63
     844:	f8 94       	cli
     846:	fe bf       	out	0x3e, r31	; 62
     848:	0f be       	out	0x3f, r0	; 63
     84a:	ed bf       	out	0x3d, r30	; 61
     84c:	c0 e0       	ldi	r28, 0x00	; 0
     84e:	0f c0       	rjmp	.+30     	; 0x86e <CAN_send_message+0xb4>
	{
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
     850:	f8 01       	movw	r30, r16
     852:	ec 0f       	add	r30, r28
     854:	f1 1d       	adc	r31, r1
     856:	63 81       	ldd	r22, Z+3	; 0x03
     858:	86 e3       	ldi	r24, 0x36	; 54
     85a:	8c 0f       	add	r24, r28
     85c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
     860:	89 ef       	ldi	r24, 0xF9	; 249
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <CAN_send_message+0xaa>
     868:	00 c0       	rjmp	.+0      	; 0x86a <CAN_send_message+0xb0>
     86a:	00 00       	nop
	_delay_ms(10);
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
	_delay_ms(10);
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
	_delay_ms(10);
	for (uint8_t i = 0; i < 8; i++)
     86c:	cf 5f       	subi	r28, 0xFF	; 255
     86e:	c8 30       	cpi	r28, 0x08	; 8
     870:	78 f3       	brcs	.-34     	; 0x850 <CAN_send_message+0x96>
     872:	e3 ec       	ldi	r30, 0xC3	; 195
     874:	f9 e0       	ldi	r31, 0x09	; 9
     876:	31 97       	sbiw	r30, 0x01	; 1
     878:	f1 f7       	brne	.-4      	; 0x876 <CAN_send_message+0xbc>
     87a:	00 c0       	rjmp	.+0      	; 0x87c <CAN_send_message+0xc2>
     87c:	00 00       	nop
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
		_delay_ms(1);
	}
	//request to send
	_delay_ms(10);
	CAN_module_activate_cs();
     87e:	0e 94 4a 04 	call	0x894	; 0x894 <CAN_module_activate_cs>
	SPI_Transmit(MCP_RTS_TX0);
     882:	81 e8       	ldi	r24, 0x81	; 129
     884:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
	CAN_module_deactivate_cs();
     888:	0e 94 4c 04 	call	0x898	; 0x898 <CAN_module_deactivate_cs>
}
     88c:	cf 91       	pop	r28
     88e:	1f 91       	pop	r17
     890:	0f 91       	pop	r16
     892:	08 95       	ret

00000894 <CAN_module_activate_cs>:
	SPI_Transmit(MCP_RESET);
	CAN_module_deactivate_cs();
	_delay_ms(10); //change if timing is off
}

void CAN_module_test(void){
     894:	18 ba       	out	0x18, r1	; 24
     896:	08 95       	ret

00000898 <CAN_module_deactivate_cs>:
     898:	80 e1       	ldi	r24, 0x10	; 16
     89a:	88 bb       	out	0x18, r24	; 24
     89c:	08 95       	ret

0000089e <CAN_module_read>:
     89e:	cf 93       	push	r28
     8a0:	c8 2f       	mov	r28, r24
     8a2:	0e 94 4a 04 	call	0x894	; 0x894 <CAN_module_activate_cs>
     8a6:	83 e0       	ldi	r24, 0x03	; 3
     8a8:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8ac:	8c 2f       	mov	r24, r28
     8ae:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8b2:	0e 94 bc 05 	call	0xb78	; 0xb78 <SPI_Recieve>
     8b6:	c8 2f       	mov	r28, r24
     8b8:	0e 94 4c 04 	call	0x898	; 0x898 <CAN_module_deactivate_cs>
     8bc:	8c 2f       	mov	r24, r28
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <CAN_module_write>:
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	d8 2f       	mov	r29, r24
     8c8:	c6 2f       	mov	r28, r22
     8ca:	0e 94 4a 04 	call	0x894	; 0x894 <CAN_module_activate_cs>
     8ce:	82 e0       	ldi	r24, 0x02	; 2
     8d0:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8d4:	8d 2f       	mov	r24, r29
     8d6:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8da:	8c 2f       	mov	r24, r28
     8dc:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8e0:	0e 94 4c 04 	call	0x898	; 0x898 <CAN_module_deactivate_cs>
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	08 95       	ret

000008ea <CAN_module_reset>:
     8ea:	0e 94 4a 04 	call	0x894	; 0x894 <CAN_module_activate_cs>
     8ee:	80 ec       	ldi	r24, 0xC0	; 192
     8f0:	0e 94 b8 05 	call	0xb70	; 0xb70 <SPI_Transmit>
     8f4:	0e 94 4c 04 	call	0x898	; 0x898 <CAN_module_deactivate_cs>
     8f8:	83 ec       	ldi	r24, 0xC3	; 195
     8fa:	99 e0       	ldi	r25, 0x09	; 9
     8fc:	01 97       	sbiw	r24, 0x01	; 1
     8fe:	f1 f7       	brne	.-4      	; 0x8fc <CAN_module_reset+0x12>
     900:	00 c0       	rjmp	.+0      	; 0x902 <CAN_module_reset+0x18>
     902:	00 00       	nop
     904:	08 95       	ret

00000906 <CAN_module_init>:
	
}

void CAN_module_init(){
     906:	cf 93       	push	r28
	uint8_t val;
	SPI_Init();
     908:	0e 94 b0 05 	call	0xb60	; 0xb60 <SPI_Init>
	
	CAN_module_reset();
     90c:	0e 94 75 04 	call	0x8ea	; 0x8ea <CAN_module_reset>
	
	val = CAN_module_read(MCP_CANSTAT);
     910:	8e e0       	ldi	r24, 0x0E	; 14
     912:	0e 94 4f 04 	call	0x89e	; 0x89e <CAN_module_read>
	uint8_t mode_bits = (val & MODE_MASK);
     916:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_CONFIG){
     918:	80 38       	cpi	r24, 0x80	; 128
     91a:	61 f0       	breq	.+24     	; 0x934 <CAN_module_init+0x2e>
	printf("MCP2515 is NOT in Configuration mode after reset! Its config bits are %x\n\r", mode_bits);
     91c:	1f 92       	push	r1
     91e:	8f 93       	push	r24
     920:	87 ea       	ldi	r24, 0xA7	; 167
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	9f 93       	push	r25
     926:	8f 93       	push	r24
     928:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
     92c:	0f 90       	pop	r0
     92e:	0f 90       	pop	r0
     930:	0f 90       	pop	r0
     932:	0f 90       	pop	r0
	//return(1);
	}
	
	CAN_module_write(MCP_CANCTRL, MODE_LOOPBACK);
     934:	60 e4       	ldi	r22, 0x40	; 64
     936:	8f e0       	ldi	r24, 0x0F	; 15
     938:	0e 94 61 04 	call	0x8c2	; 0x8c2 <CAN_module_write>
	
	val = CAN_module_read(MCP_CANSTAT);
     93c:	8e e0       	ldi	r24, 0x0E	; 14
     93e:	0e 94 4f 04 	call	0x89e	; 0x89e <CAN_module_read>
     942:	c8 2f       	mov	r28, r24
	printf("%x\n\r", val);
     944:	1f 92       	push	r1
     946:	8f 93       	push	r24
     948:	83 e8       	ldi	r24, 0x83	; 131
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	9f 93       	push	r25
     94e:	8f 93       	push	r24
     950:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	mode_bits = (val & MODE_MASK);
     954:	c0 7e       	andi	r28, 0xE0	; 224
	if(mode_bits != MODE_LOOPBACK){
     956:	0f 90       	pop	r0
     958:	0f 90       	pop	r0
     95a:	0f 90       	pop	r0
     95c:	0f 90       	pop	r0
     95e:	c0 34       	cpi	r28, 0x40	; 64
     960:	81 f0       	breq	.+32     	; 0x982 <CAN_module_init+0x7c>
	
	printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n\r", mode_bits);
     962:	1f 92       	push	r1
     964:	cf 93       	push	r28
     966:	82 ef       	ldi	r24, 0xF2	; 242
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	9f 93       	push	r25
     96c:	8f 93       	push	r24
     96e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("\n!\n");
     972:	87 e3       	ldi	r24, 0x37	; 55
     974:	92 e0       	ldi	r25, 0x02	; 2
     976:	0e 94 6f 08 	call	0x10de	; 0x10de <puts>
     97a:	0f 90       	pop	r0
     97c:	0f 90       	pop	r0
     97e:	0f 90       	pop	r0
     980:	0f 90       	pop	r0
	//return(1);
	}
	
	
	//return(0);
     982:	cf 91       	pop	r28
     984:	08 95       	ret

00000986 <main>:
#define F_CPU 4915200
#define BAUD 9600
#define MYBURR F_CPU/16/BAUD-1


int main(){
     986:	cf 93       	push	r28
     988:	df 93       	push	r29
     98a:	cd b7       	in	r28, 0x3d	; 61
     98c:	de b7       	in	r29, 0x3e	; 62
     98e:	2b 97       	sbiw	r28, 0x0b	; 11
     990:	0f b6       	in	r0, 0x3f	; 63
     992:	f8 94       	cli
     994:	de bf       	out	0x3e, r29	; 62
     996:	0f be       	out	0x3f, r0	; 63
     998:	cd bf       	out	0x3d, r28	; 61
	MCUCR = (1<<SRE);
     99a:	80 e8       	ldi	r24, 0x80	; 128
     99c:	85 bf       	out	0x35, r24	; 53
	uart_start(MYBURR);
     99e:	8f e1       	ldi	r24, 0x1F	; 31
     9a0:	90 e0       	ldi	r25, 0x00	; 0
     9a2:	0e 94 c1 05 	call	0xb82	; 0xb82 <uart_start>
	fdevopen(&uart_transmit, &uart_recieve);
     9a6:	61 ed       	ldi	r22, 0xD1	; 209
     9a8:	75 e0       	ldi	r23, 0x05	; 5
     9aa:	8b ec       	ldi	r24, 0xCB	; 203
     9ac:	95 e0       	ldi	r25, 0x05	; 5
     9ae:	0e 94 0e 08 	call	0x101c	; 0x101c <fdevopen>
	
	//Comment
	
	adc_init();
     9b2:	0e 94 b1 01 	call	0x362	; 0x362 <adc_init>
	OLED_init();
     9b6:	0e 94 6d 05 	call	0xada	; 0xada <OLED_init>
	CAN_init();
     9ba:	0e 94 bb 03 	call	0x776	; 0x776 <CAN_init>
	CAN_message_struct message;
	
	while (1)
	{
	message.message_id[0] = 1;
     9be:	81 e0       	ldi	r24, 0x01	; 1
     9c0:	89 83       	std	Y+1, r24	; 0x01
	message.message_id[1] = 1;
     9c2:	8a 83       	std	Y+2, r24	; 0x02
	message.data_length_code = 7;
     9c4:	87 e0       	ldi	r24, 0x07	; 7
     9c6:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0]=(uint8_t)joyyPercent+100;
     9c8:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <joyyPercent>
     9cc:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <joyyPercent+0x1>
     9d0:	8c 59       	subi	r24, 0x9C	; 156
     9d2:	8c 83       	std	Y+4, r24	; 0x04
	message.data[1]=(uint8_t)joyxPercent+100;
     9d4:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <joyxPercent>
     9d8:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <joyxPercent+0x1>
     9dc:	8c 59       	subi	r24, 0x9C	; 156
     9de:	8d 83       	std	Y+5, r24	; 0x05
	message.data[2]=sliderLeft;
     9e0:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <sliderLeft>
     9e4:	90 91 c4 02 	lds	r25, 0x02C4	; 0x8002c4 <sliderLeft+0x1>
     9e8:	8e 83       	std	Y+6, r24	; 0x06
	message.data[3]=sliderRight;
     9ea:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <sliderRight>
     9ee:	90 91 b6 02 	lds	r25, 0x02B6	; 0x8002b6 <sliderRight+0x1>
     9f2:	8f 83       	std	Y+7, r24	; 0x07
	message.data[4]=button1State;
     9f4:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <button1State>
     9f8:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <button1State+0x1>
     9fc:	88 87       	std	Y+8, r24	; 0x08
	message.data[5]=button3State;
     9fe:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <button3State>
     a02:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <button3State+0x1>
     a06:	89 87       	std	Y+9, r24	; 0x09
	message.data[6]=button2State;
     a08:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <button2State>
     a0c:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <button2State+0x1>
     a10:	8a 87       	std	Y+10, r24	; 0x0a
	CAN_send_message(&message);
     a12:	ce 01       	movw	r24, r28
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	0e 94 dd 03 	call	0x7ba	; 0x7ba <CAN_send_message>
	
	
	printf("Joy Y: %d,\t", joyyPercent);
     a1a:	80 91 c5 02 	lds	r24, 0x02C5	; 0x8002c5 <joyyPercent>
     a1e:	90 91 c6 02 	lds	r25, 0x02C6	; 0x8002c6 <joyyPercent+0x1>
     a22:	9f 93       	push	r25
     a24:	8f 93       	push	r24
     a26:	8a e3       	ldi	r24, 0x3A	; 58
     a28:	92 e0       	ldi	r25, 0x02	; 2
     a2a:	9f 93       	push	r25
     a2c:	8f 93       	push	r24
     a2e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Joy X: %d,\t", joyxPercent);
     a32:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <joyxPercent>
     a36:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <joyxPercent+0x1>
     a3a:	9f 93       	push	r25
     a3c:	8f 93       	push	r24
     a3e:	86 e4       	ldi	r24, 0x46	; 70
     a40:	92 e0       	ldi	r25, 0x02	; 2
     a42:	9f 93       	push	r25
     a44:	8f 93       	push	r24
     a46:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Left Slider: %d,  \t", sliderLeft);
     a4a:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <sliderLeft>
     a4e:	90 91 c4 02 	lds	r25, 0x02C4	; 0x8002c4 <sliderLeft+0x1>
     a52:	9f 93       	push	r25
     a54:	8f 93       	push	r24
     a56:	82 e5       	ldi	r24, 0x52	; 82
     a58:	92 e0       	ldi	r25, 0x02	; 2
     a5a:	9f 93       	push	r25
     a5c:	8f 93       	push	r24
     a5e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Right Slider: %d,\t", sliderRight);
     a62:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <sliderRight>
     a66:	90 91 b6 02 	lds	r25, 0x02B6	; 0x8002b6 <sliderRight+0x1>
     a6a:	9f 93       	push	r25
     a6c:	8f 93       	push	r24
     a6e:	86 e6       	ldi	r24, 0x66	; 102
     a70:	92 e0       	ldi	r25, 0x02	; 2
     a72:	9f 93       	push	r25
     a74:	8f 93       	push	r24
     a76:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Left Button: %d, \t", button2State);
     a7a:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <button2State>
     a7e:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <button2State+0x1>
     a82:	9f 93       	push	r25
     a84:	8f 93       	push	r24
     a86:	89 e7       	ldi	r24, 0x79	; 121
     a88:	92 e0       	ldi	r25, 0x02	; 2
     a8a:	9f 93       	push	r25
     a8c:	8f 93       	push	r24
     a8e:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Right button: %d,\t", button1State);
     a92:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <button1State>
     a96:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <button1State+0x1>
     a9a:	9f 93       	push	r25
     a9c:	8f 93       	push	r24
     a9e:	8c e8       	ldi	r24, 0x8C	; 140
     aa0:	92 e0       	ldi	r25, 0x02	; 2
     aa2:	9f 93       	push	r25
     aa4:	8f 93       	push	r24
     aa6:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
	printf("Joy button: %d\n\r", button3State);
     aaa:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <button3State>
     aae:	90 91 eb 02 	lds	r25, 0x02EB	; 0x8002eb <button3State+0x1>
     ab2:	9f 93       	push	r25
     ab4:	8f 93       	push	r24
     ab6:	8f e9       	ldi	r24, 0x9F	; 159
     ab8:	92 e0       	ldi	r25, 0x02	; 2
     aba:	9f 93       	push	r25
     abc:	8f 93       	push	r24
     abe:	0e 94 59 08 	call	0x10b2	; 0x10b2 <printf>
     ac2:	0f b6       	in	r0, 0x3f	; 63
     ac4:	f8 94       	cli
     ac6:	de bf       	out	0x3e, r29	; 62
     ac8:	0f be       	out	0x3f, r0	; 63
     aca:	cd bf       	out	0x3d, r28	; 61
     acc:	78 cf       	rjmp	.-272    	; 0x9be <main+0x38>

00000ace <OLED_Write_Command>:
     ace:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     ad2:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     ad6:	80 83       	st	Z, r24
     ad8:	08 95       	ret

00000ada <OLED_init>:
     ada:	8e ea       	ldi	r24, 0xAE	; 174
     adc:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     ae0:	81 ea       	ldi	r24, 0xA1	; 161
     ae2:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     ae6:	8a ed       	ldi	r24, 0xDA	; 218
     ae8:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     aec:	82 e1       	ldi	r24, 0x12	; 18
     aee:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     af2:	88 ec       	ldi	r24, 0xC8	; 200
     af4:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     af8:	88 ea       	ldi	r24, 0xA8	; 168
     afa:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     afe:	8f e3       	ldi	r24, 0x3F	; 63
     b00:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b04:	85 ed       	ldi	r24, 0xD5	; 213
     b06:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b0a:	80 e8       	ldi	r24, 0x80	; 128
     b0c:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b10:	81 e8       	ldi	r24, 0x81	; 129
     b12:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b16:	80 e5       	ldi	r24, 0x50	; 80
     b18:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b1c:	89 ed       	ldi	r24, 0xD9	; 217
     b1e:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b22:	81 e2       	ldi	r24, 0x21	; 33
     b24:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b28:	80 e2       	ldi	r24, 0x20	; 32
     b2a:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b2e:	82 e0       	ldi	r24, 0x02	; 2
     b30:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b34:	8b ed       	ldi	r24, 0xDB	; 219
     b36:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b3a:	80 e3       	ldi	r24, 0x30	; 48
     b3c:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b40:	8d ea       	ldi	r24, 0xAD	; 173
     b42:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b4c:	84 ea       	ldi	r24, 0xA4	; 164
     b4e:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b52:	86 ea       	ldi	r24, 0xA6	; 166
     b54:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b58:	8f ea       	ldi	r24, 0xAF	; 175
     b5a:	0e 94 67 05 	call	0xace	; 0xace <OLED_Write_Command>
     b5e:	08 95       	ret

00000b60 <SPI_Init>:


void SPI_Init(void)
{
	/* Set MOSI and SCK output, all others input */
	DDRB = (1<<PB4)|(1<<PB5)|(1<<PB7);
     b60:	80 eb       	ldi	r24, 0xB0	; 176
     b62:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     b64:	81 e5       	ldi	r24, 0x51	; 81
     b66:	8d b9       	out	0x0d, r24	; 13
	
	set_bit(PORTB, PB4);
     b68:	88 b3       	in	r24, 0x18	; 24
     b6a:	80 61       	ori	r24, 0x10	; 16
     b6c:	88 bb       	out	0x18, r24	; 24
     b6e:	08 95       	ret

00000b70 <SPI_Transmit>:
}

void SPI_Transmit(char Data)
{
	/* Start transmission */
	SPDR = Data;
     b70:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
     b72:	77 9b       	sbis	0x0e, 7	; 14
     b74:	fe cf       	rjmp	.-4      	; 0xb72 <SPI_Transmit+0x2>
	;
}
     b76:	08 95       	ret

00000b78 <SPI_Recieve>:


char SPI_Recieve(void)
{
	/* Start transmission */
	SPDR = 0x00;
     b78:	1f b8       	out	0x0f, r1	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
     b7a:	77 9b       	sbis	0x0e, 7	; 14
     b7c:	fe cf       	rjmp	.-4      	; 0xb7a <SPI_Recieve+0x2>
	;
	return(SPDR);
     b7e:	8f b1       	in	r24, 0x0f	; 15
}
     b80:	08 95       	ret

00000b82 <uart_start>:
     b82:	2b b1       	in	r18, 0x0b	; 11
     b84:	2d 7f       	andi	r18, 0xFD	; 253
     b86:	2b b9       	out	0x0b, r18	; 11
     b88:	90 bd       	out	0x20, r25	; 32
     b8a:	89 b9       	out	0x09, r24	; 9
     b8c:	88 e1       	ldi	r24, 0x18	; 24
     b8e:	8a b9       	out	0x0a, r24	; 10
     b90:	8e e8       	ldi	r24, 0x8E	; 142
     b92:	80 bd       	out	0x20, r24	; 32
     b94:	08 95       	ret

00000b96 <uart_transmit>:
     b96:	5d 9b       	sbis	0x0b, 5	; 11
     b98:	fe cf       	rjmp	.-4      	; 0xb96 <uart_transmit>
     b9a:	8c b9       	out	0x0c, r24	; 12
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	08 95       	ret

00000ba2 <uart_recieve>:
     ba2:	5d 9b       	sbis	0x0b, 5	; 11
     ba4:	fe cf       	rjmp	.-4      	; 0xba2 <uart_recieve>
     ba6:	8c b1       	in	r24, 0x0c	; 12
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	08 95       	ret

00000bac <__subsf3>:
     bac:	50 58       	subi	r21, 0x80	; 128

00000bae <__addsf3>:
     bae:	bb 27       	eor	r27, r27
     bb0:	aa 27       	eor	r26, r26
     bb2:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__addsf3x>
     bb6:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_round>
     bba:	0e 94 31 07 	call	0xe62	; 0xe62 <__fp_pscA>
     bbe:	38 f0       	brcs	.+14     	; 0xbce <__addsf3+0x20>
     bc0:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscB>
     bc4:	20 f0       	brcs	.+8      	; 0xbce <__addsf3+0x20>
     bc6:	39 f4       	brne	.+14     	; 0xbd6 <__addsf3+0x28>
     bc8:	9f 3f       	cpi	r25, 0xFF	; 255
     bca:	19 f4       	brne	.+6      	; 0xbd2 <__addsf3+0x24>
     bcc:	26 f4       	brtc	.+8      	; 0xbd6 <__addsf3+0x28>
     bce:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_nan>
     bd2:	0e f4       	brtc	.+2      	; 0xbd6 <__addsf3+0x28>
     bd4:	e0 95       	com	r30
     bd6:	e7 fb       	bst	r30, 7
     bd8:	0c 94 28 07 	jmp	0xe50	; 0xe50 <__fp_inf>

00000bdc <__addsf3x>:
     bdc:	e9 2f       	mov	r30, r25
     bde:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_split3>
     be2:	58 f3       	brcs	.-42     	; 0xbba <__addsf3+0xc>
     be4:	ba 17       	cp	r27, r26
     be6:	62 07       	cpc	r22, r18
     be8:	73 07       	cpc	r23, r19
     bea:	84 07       	cpc	r24, r20
     bec:	95 07       	cpc	r25, r21
     bee:	20 f0       	brcs	.+8      	; 0xbf8 <__addsf3x+0x1c>
     bf0:	79 f4       	brne	.+30     	; 0xc10 <__addsf3x+0x34>
     bf2:	a6 f5       	brtc	.+104    	; 0xc5c <__addsf3x+0x80>
     bf4:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_zero>
     bf8:	0e f4       	brtc	.+2      	; 0xbfc <__addsf3x+0x20>
     bfa:	e0 95       	com	r30
     bfc:	0b 2e       	mov	r0, r27
     bfe:	ba 2f       	mov	r27, r26
     c00:	a0 2d       	mov	r26, r0
     c02:	0b 01       	movw	r0, r22
     c04:	b9 01       	movw	r22, r18
     c06:	90 01       	movw	r18, r0
     c08:	0c 01       	movw	r0, r24
     c0a:	ca 01       	movw	r24, r20
     c0c:	a0 01       	movw	r20, r0
     c0e:	11 24       	eor	r1, r1
     c10:	ff 27       	eor	r31, r31
     c12:	59 1b       	sub	r21, r25
     c14:	99 f0       	breq	.+38     	; 0xc3c <__addsf3x+0x60>
     c16:	59 3f       	cpi	r21, 0xF9	; 249
     c18:	50 f4       	brcc	.+20     	; 0xc2e <__addsf3x+0x52>
     c1a:	50 3e       	cpi	r21, 0xE0	; 224
     c1c:	68 f1       	brcs	.+90     	; 0xc78 <__addsf3x+0x9c>
     c1e:	1a 16       	cp	r1, r26
     c20:	f0 40       	sbci	r31, 0x00	; 0
     c22:	a2 2f       	mov	r26, r18
     c24:	23 2f       	mov	r18, r19
     c26:	34 2f       	mov	r19, r20
     c28:	44 27       	eor	r20, r20
     c2a:	58 5f       	subi	r21, 0xF8	; 248
     c2c:	f3 cf       	rjmp	.-26     	; 0xc14 <__addsf3x+0x38>
     c2e:	46 95       	lsr	r20
     c30:	37 95       	ror	r19
     c32:	27 95       	ror	r18
     c34:	a7 95       	ror	r26
     c36:	f0 40       	sbci	r31, 0x00	; 0
     c38:	53 95       	inc	r21
     c3a:	c9 f7       	brne	.-14     	; 0xc2e <__addsf3x+0x52>
     c3c:	7e f4       	brtc	.+30     	; 0xc5c <__addsf3x+0x80>
     c3e:	1f 16       	cp	r1, r31
     c40:	ba 0b       	sbc	r27, r26
     c42:	62 0b       	sbc	r22, r18
     c44:	73 0b       	sbc	r23, r19
     c46:	84 0b       	sbc	r24, r20
     c48:	ba f0       	brmi	.+46     	; 0xc78 <__addsf3x+0x9c>
     c4a:	91 50       	subi	r25, 0x01	; 1
     c4c:	a1 f0       	breq	.+40     	; 0xc76 <__addsf3x+0x9a>
     c4e:	ff 0f       	add	r31, r31
     c50:	bb 1f       	adc	r27, r27
     c52:	66 1f       	adc	r22, r22
     c54:	77 1f       	adc	r23, r23
     c56:	88 1f       	adc	r24, r24
     c58:	c2 f7       	brpl	.-16     	; 0xc4a <__addsf3x+0x6e>
     c5a:	0e c0       	rjmp	.+28     	; 0xc78 <__addsf3x+0x9c>
     c5c:	ba 0f       	add	r27, r26
     c5e:	62 1f       	adc	r22, r18
     c60:	73 1f       	adc	r23, r19
     c62:	84 1f       	adc	r24, r20
     c64:	48 f4       	brcc	.+18     	; 0xc78 <__addsf3x+0x9c>
     c66:	87 95       	ror	r24
     c68:	77 95       	ror	r23
     c6a:	67 95       	ror	r22
     c6c:	b7 95       	ror	r27
     c6e:	f7 95       	ror	r31
     c70:	9e 3f       	cpi	r25, 0xFE	; 254
     c72:	08 f0       	brcs	.+2      	; 0xc76 <__addsf3x+0x9a>
     c74:	b0 cf       	rjmp	.-160    	; 0xbd6 <__addsf3+0x28>
     c76:	93 95       	inc	r25
     c78:	88 0f       	add	r24, r24
     c7a:	08 f0       	brcs	.+2      	; 0xc7e <__addsf3x+0xa2>
     c7c:	99 27       	eor	r25, r25
     c7e:	ee 0f       	add	r30, r30
     c80:	97 95       	ror	r25
     c82:	87 95       	ror	r24
     c84:	08 95       	ret

00000c86 <__divsf3>:
     c86:	0e 94 57 06 	call	0xcae	; 0xcae <__divsf3x>
     c8a:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_round>
     c8e:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscB>
     c92:	58 f0       	brcs	.+22     	; 0xcaa <__divsf3+0x24>
     c94:	0e 94 31 07 	call	0xe62	; 0xe62 <__fp_pscA>
     c98:	40 f0       	brcs	.+16     	; 0xcaa <__divsf3+0x24>
     c9a:	29 f4       	brne	.+10     	; 0xca6 <__divsf3+0x20>
     c9c:	5f 3f       	cpi	r21, 0xFF	; 255
     c9e:	29 f0       	breq	.+10     	; 0xcaa <__divsf3+0x24>
     ca0:	0c 94 28 07 	jmp	0xe50	; 0xe50 <__fp_inf>
     ca4:	51 11       	cpse	r21, r1
     ca6:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__fp_szero>
     caa:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_nan>

00000cae <__divsf3x>:
     cae:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_split3>
     cb2:	68 f3       	brcs	.-38     	; 0xc8e <__divsf3+0x8>

00000cb4 <__divsf3_pse>:
     cb4:	99 23       	and	r25, r25
     cb6:	b1 f3       	breq	.-20     	; 0xca4 <__divsf3+0x1e>
     cb8:	55 23       	and	r21, r21
     cba:	91 f3       	breq	.-28     	; 0xca0 <__divsf3+0x1a>
     cbc:	95 1b       	sub	r25, r21
     cbe:	55 0b       	sbc	r21, r21
     cc0:	bb 27       	eor	r27, r27
     cc2:	aa 27       	eor	r26, r26
     cc4:	62 17       	cp	r22, r18
     cc6:	73 07       	cpc	r23, r19
     cc8:	84 07       	cpc	r24, r20
     cca:	38 f0       	brcs	.+14     	; 0xcda <__divsf3_pse+0x26>
     ccc:	9f 5f       	subi	r25, 0xFF	; 255
     cce:	5f 4f       	sbci	r21, 0xFF	; 255
     cd0:	22 0f       	add	r18, r18
     cd2:	33 1f       	adc	r19, r19
     cd4:	44 1f       	adc	r20, r20
     cd6:	aa 1f       	adc	r26, r26
     cd8:	a9 f3       	breq	.-22     	; 0xcc4 <__divsf3_pse+0x10>
     cda:	35 d0       	rcall	.+106    	; 0xd46 <__divsf3_pse+0x92>
     cdc:	0e 2e       	mov	r0, r30
     cde:	3a f0       	brmi	.+14     	; 0xcee <__divsf3_pse+0x3a>
     ce0:	e0 e8       	ldi	r30, 0x80	; 128
     ce2:	32 d0       	rcall	.+100    	; 0xd48 <__divsf3_pse+0x94>
     ce4:	91 50       	subi	r25, 0x01	; 1
     ce6:	50 40       	sbci	r21, 0x00	; 0
     ce8:	e6 95       	lsr	r30
     cea:	00 1c       	adc	r0, r0
     cec:	ca f7       	brpl	.-14     	; 0xce0 <__divsf3_pse+0x2c>
     cee:	2b d0       	rcall	.+86     	; 0xd46 <__divsf3_pse+0x92>
     cf0:	fe 2f       	mov	r31, r30
     cf2:	29 d0       	rcall	.+82     	; 0xd46 <__divsf3_pse+0x92>
     cf4:	66 0f       	add	r22, r22
     cf6:	77 1f       	adc	r23, r23
     cf8:	88 1f       	adc	r24, r24
     cfa:	bb 1f       	adc	r27, r27
     cfc:	26 17       	cp	r18, r22
     cfe:	37 07       	cpc	r19, r23
     d00:	48 07       	cpc	r20, r24
     d02:	ab 07       	cpc	r26, r27
     d04:	b0 e8       	ldi	r27, 0x80	; 128
     d06:	09 f0       	breq	.+2      	; 0xd0a <__divsf3_pse+0x56>
     d08:	bb 0b       	sbc	r27, r27
     d0a:	80 2d       	mov	r24, r0
     d0c:	bf 01       	movw	r22, r30
     d0e:	ff 27       	eor	r31, r31
     d10:	93 58       	subi	r25, 0x83	; 131
     d12:	5f 4f       	sbci	r21, 0xFF	; 255
     d14:	3a f0       	brmi	.+14     	; 0xd24 <__divsf3_pse+0x70>
     d16:	9e 3f       	cpi	r25, 0xFE	; 254
     d18:	51 05       	cpc	r21, r1
     d1a:	78 f0       	brcs	.+30     	; 0xd3a <__divsf3_pse+0x86>
     d1c:	0c 94 28 07 	jmp	0xe50	; 0xe50 <__fp_inf>
     d20:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__fp_szero>
     d24:	5f 3f       	cpi	r21, 0xFF	; 255
     d26:	e4 f3       	brlt	.-8      	; 0xd20 <__divsf3_pse+0x6c>
     d28:	98 3e       	cpi	r25, 0xE8	; 232
     d2a:	d4 f3       	brlt	.-12     	; 0xd20 <__divsf3_pse+0x6c>
     d2c:	86 95       	lsr	r24
     d2e:	77 95       	ror	r23
     d30:	67 95       	ror	r22
     d32:	b7 95       	ror	r27
     d34:	f7 95       	ror	r31
     d36:	9f 5f       	subi	r25, 0xFF	; 255
     d38:	c9 f7       	brne	.-14     	; 0xd2c <__divsf3_pse+0x78>
     d3a:	88 0f       	add	r24, r24
     d3c:	91 1d       	adc	r25, r1
     d3e:	96 95       	lsr	r25
     d40:	87 95       	ror	r24
     d42:	97 f9       	bld	r25, 7
     d44:	08 95       	ret
     d46:	e1 e0       	ldi	r30, 0x01	; 1
     d48:	66 0f       	add	r22, r22
     d4a:	77 1f       	adc	r23, r23
     d4c:	88 1f       	adc	r24, r24
     d4e:	bb 1f       	adc	r27, r27
     d50:	62 17       	cp	r22, r18
     d52:	73 07       	cpc	r23, r19
     d54:	84 07       	cpc	r24, r20
     d56:	ba 07       	cpc	r27, r26
     d58:	20 f0       	brcs	.+8      	; 0xd62 <__divsf3_pse+0xae>
     d5a:	62 1b       	sub	r22, r18
     d5c:	73 0b       	sbc	r23, r19
     d5e:	84 0b       	sbc	r24, r20
     d60:	ba 0b       	sbc	r27, r26
     d62:	ee 1f       	adc	r30, r30
     d64:	88 f7       	brcc	.-30     	; 0xd48 <__divsf3_pse+0x94>
     d66:	e0 95       	com	r30
     d68:	08 95       	ret

00000d6a <__fixsfsi>:
     d6a:	0e 94 bc 06 	call	0xd78	; 0xd78 <__fixunssfsi>
     d6e:	68 94       	set
     d70:	b1 11       	cpse	r27, r1
     d72:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__fp_szero>
     d76:	08 95       	ret

00000d78 <__fixunssfsi>:
     d78:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__fp_splitA>
     d7c:	88 f0       	brcs	.+34     	; 0xda0 <__fixunssfsi+0x28>
     d7e:	9f 57       	subi	r25, 0x7F	; 127
     d80:	98 f0       	brcs	.+38     	; 0xda8 <__fixunssfsi+0x30>
     d82:	b9 2f       	mov	r27, r25
     d84:	99 27       	eor	r25, r25
     d86:	b7 51       	subi	r27, 0x17	; 23
     d88:	b0 f0       	brcs	.+44     	; 0xdb6 <__fixunssfsi+0x3e>
     d8a:	e1 f0       	breq	.+56     	; 0xdc4 <__fixunssfsi+0x4c>
     d8c:	66 0f       	add	r22, r22
     d8e:	77 1f       	adc	r23, r23
     d90:	88 1f       	adc	r24, r24
     d92:	99 1f       	adc	r25, r25
     d94:	1a f0       	brmi	.+6      	; 0xd9c <__fixunssfsi+0x24>
     d96:	ba 95       	dec	r27
     d98:	c9 f7       	brne	.-14     	; 0xd8c <__fixunssfsi+0x14>
     d9a:	14 c0       	rjmp	.+40     	; 0xdc4 <__fixunssfsi+0x4c>
     d9c:	b1 30       	cpi	r27, 0x01	; 1
     d9e:	91 f0       	breq	.+36     	; 0xdc4 <__fixunssfsi+0x4c>
     da0:	0e 94 72 07 	call	0xee4	; 0xee4 <__fp_zero>
     da4:	b1 e0       	ldi	r27, 0x01	; 1
     da6:	08 95       	ret
     da8:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_zero>
     dac:	67 2f       	mov	r22, r23
     dae:	78 2f       	mov	r23, r24
     db0:	88 27       	eor	r24, r24
     db2:	b8 5f       	subi	r27, 0xF8	; 248
     db4:	39 f0       	breq	.+14     	; 0xdc4 <__fixunssfsi+0x4c>
     db6:	b9 3f       	cpi	r27, 0xF9	; 249
     db8:	cc f3       	brlt	.-14     	; 0xdac <__fixunssfsi+0x34>
     dba:	86 95       	lsr	r24
     dbc:	77 95       	ror	r23
     dbe:	67 95       	ror	r22
     dc0:	b3 95       	inc	r27
     dc2:	d9 f7       	brne	.-10     	; 0xdba <__fixunssfsi+0x42>
     dc4:	3e f4       	brtc	.+14     	; 0xdd4 <__fixunssfsi+0x5c>
     dc6:	90 95       	com	r25
     dc8:	80 95       	com	r24
     dca:	70 95       	com	r23
     dcc:	61 95       	neg	r22
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	8f 4f       	sbci	r24, 0xFF	; 255
     dd2:	9f 4f       	sbci	r25, 0xFF	; 255
     dd4:	08 95       	ret

00000dd6 <__floatunsisf>:
     dd6:	e8 94       	clt
     dd8:	09 c0       	rjmp	.+18     	; 0xdec <__floatsisf+0x12>

00000dda <__floatsisf>:
     dda:	97 fb       	bst	r25, 7
     ddc:	3e f4       	brtc	.+14     	; 0xdec <__floatsisf+0x12>
     dde:	90 95       	com	r25
     de0:	80 95       	com	r24
     de2:	70 95       	com	r23
     de4:	61 95       	neg	r22
     de6:	7f 4f       	sbci	r23, 0xFF	; 255
     de8:	8f 4f       	sbci	r24, 0xFF	; 255
     dea:	9f 4f       	sbci	r25, 0xFF	; 255
     dec:	99 23       	and	r25, r25
     dee:	a9 f0       	breq	.+42     	; 0xe1a <__floatsisf+0x40>
     df0:	f9 2f       	mov	r31, r25
     df2:	96 e9       	ldi	r25, 0x96	; 150
     df4:	bb 27       	eor	r27, r27
     df6:	93 95       	inc	r25
     df8:	f6 95       	lsr	r31
     dfa:	87 95       	ror	r24
     dfc:	77 95       	ror	r23
     dfe:	67 95       	ror	r22
     e00:	b7 95       	ror	r27
     e02:	f1 11       	cpse	r31, r1
     e04:	f8 cf       	rjmp	.-16     	; 0xdf6 <__floatsisf+0x1c>
     e06:	fa f4       	brpl	.+62     	; 0xe46 <__floatsisf+0x6c>
     e08:	bb 0f       	add	r27, r27
     e0a:	11 f4       	brne	.+4      	; 0xe10 <__floatsisf+0x36>
     e0c:	60 ff       	sbrs	r22, 0
     e0e:	1b c0       	rjmp	.+54     	; 0xe46 <__floatsisf+0x6c>
     e10:	6f 5f       	subi	r22, 0xFF	; 255
     e12:	7f 4f       	sbci	r23, 0xFF	; 255
     e14:	8f 4f       	sbci	r24, 0xFF	; 255
     e16:	9f 4f       	sbci	r25, 0xFF	; 255
     e18:	16 c0       	rjmp	.+44     	; 0xe46 <__floatsisf+0x6c>
     e1a:	88 23       	and	r24, r24
     e1c:	11 f0       	breq	.+4      	; 0xe22 <__floatsisf+0x48>
     e1e:	96 e9       	ldi	r25, 0x96	; 150
     e20:	11 c0       	rjmp	.+34     	; 0xe44 <__floatsisf+0x6a>
     e22:	77 23       	and	r23, r23
     e24:	21 f0       	breq	.+8      	; 0xe2e <__floatsisf+0x54>
     e26:	9e e8       	ldi	r25, 0x8E	; 142
     e28:	87 2f       	mov	r24, r23
     e2a:	76 2f       	mov	r23, r22
     e2c:	05 c0       	rjmp	.+10     	; 0xe38 <__floatsisf+0x5e>
     e2e:	66 23       	and	r22, r22
     e30:	71 f0       	breq	.+28     	; 0xe4e <__floatsisf+0x74>
     e32:	96 e8       	ldi	r25, 0x86	; 134
     e34:	86 2f       	mov	r24, r22
     e36:	70 e0       	ldi	r23, 0x00	; 0
     e38:	60 e0       	ldi	r22, 0x00	; 0
     e3a:	2a f0       	brmi	.+10     	; 0xe46 <__floatsisf+0x6c>
     e3c:	9a 95       	dec	r25
     e3e:	66 0f       	add	r22, r22
     e40:	77 1f       	adc	r23, r23
     e42:	88 1f       	adc	r24, r24
     e44:	da f7       	brpl	.-10     	; 0xe3c <__floatsisf+0x62>
     e46:	88 0f       	add	r24, r24
     e48:	96 95       	lsr	r25
     e4a:	87 95       	ror	r24
     e4c:	97 f9       	bld	r25, 7
     e4e:	08 95       	ret

00000e50 <__fp_inf>:
     e50:	97 f9       	bld	r25, 7
     e52:	9f 67       	ori	r25, 0x7F	; 127
     e54:	80 e8       	ldi	r24, 0x80	; 128
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	60 e0       	ldi	r22, 0x00	; 0
     e5a:	08 95       	ret

00000e5c <__fp_nan>:
     e5c:	9f ef       	ldi	r25, 0xFF	; 255
     e5e:	80 ec       	ldi	r24, 0xC0	; 192
     e60:	08 95       	ret

00000e62 <__fp_pscA>:
     e62:	00 24       	eor	r0, r0
     e64:	0a 94       	dec	r0
     e66:	16 16       	cp	r1, r22
     e68:	17 06       	cpc	r1, r23
     e6a:	18 06       	cpc	r1, r24
     e6c:	09 06       	cpc	r0, r25
     e6e:	08 95       	ret

00000e70 <__fp_pscB>:
     e70:	00 24       	eor	r0, r0
     e72:	0a 94       	dec	r0
     e74:	12 16       	cp	r1, r18
     e76:	13 06       	cpc	r1, r19
     e78:	14 06       	cpc	r1, r20
     e7a:	05 06       	cpc	r0, r21
     e7c:	08 95       	ret

00000e7e <__fp_round>:
     e7e:	09 2e       	mov	r0, r25
     e80:	03 94       	inc	r0
     e82:	00 0c       	add	r0, r0
     e84:	11 f4       	brne	.+4      	; 0xe8a <__fp_round+0xc>
     e86:	88 23       	and	r24, r24
     e88:	52 f0       	brmi	.+20     	; 0xe9e <__fp_round+0x20>
     e8a:	bb 0f       	add	r27, r27
     e8c:	40 f4       	brcc	.+16     	; 0xe9e <__fp_round+0x20>
     e8e:	bf 2b       	or	r27, r31
     e90:	11 f4       	brne	.+4      	; 0xe96 <__fp_round+0x18>
     e92:	60 ff       	sbrs	r22, 0
     e94:	04 c0       	rjmp	.+8      	; 0xe9e <__fp_round+0x20>
     e96:	6f 5f       	subi	r22, 0xFF	; 255
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	8f 4f       	sbci	r24, 0xFF	; 255
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	08 95       	ret

00000ea0 <__fp_split3>:
     ea0:	57 fd       	sbrc	r21, 7
     ea2:	90 58       	subi	r25, 0x80	; 128
     ea4:	44 0f       	add	r20, r20
     ea6:	55 1f       	adc	r21, r21
     ea8:	59 f0       	breq	.+22     	; 0xec0 <__fp_splitA+0x10>
     eaa:	5f 3f       	cpi	r21, 0xFF	; 255
     eac:	71 f0       	breq	.+28     	; 0xeca <__fp_splitA+0x1a>
     eae:	47 95       	ror	r20

00000eb0 <__fp_splitA>:
     eb0:	88 0f       	add	r24, r24
     eb2:	97 fb       	bst	r25, 7
     eb4:	99 1f       	adc	r25, r25
     eb6:	61 f0       	breq	.+24     	; 0xed0 <__fp_splitA+0x20>
     eb8:	9f 3f       	cpi	r25, 0xFF	; 255
     eba:	79 f0       	breq	.+30     	; 0xeda <__fp_splitA+0x2a>
     ebc:	87 95       	ror	r24
     ebe:	08 95       	ret
     ec0:	12 16       	cp	r1, r18
     ec2:	13 06       	cpc	r1, r19
     ec4:	14 06       	cpc	r1, r20
     ec6:	55 1f       	adc	r21, r21
     ec8:	f2 cf       	rjmp	.-28     	; 0xeae <__fp_split3+0xe>
     eca:	46 95       	lsr	r20
     ecc:	f1 df       	rcall	.-30     	; 0xeb0 <__fp_splitA>
     ece:	08 c0       	rjmp	.+16     	; 0xee0 <__fp_splitA+0x30>
     ed0:	16 16       	cp	r1, r22
     ed2:	17 06       	cpc	r1, r23
     ed4:	18 06       	cpc	r1, r24
     ed6:	99 1f       	adc	r25, r25
     ed8:	f1 cf       	rjmp	.-30     	; 0xebc <__fp_splitA+0xc>
     eda:	86 95       	lsr	r24
     edc:	71 05       	cpc	r23, r1
     ede:	61 05       	cpc	r22, r1
     ee0:	08 94       	sec
     ee2:	08 95       	ret

00000ee4 <__fp_zero>:
     ee4:	e8 94       	clt

00000ee6 <__fp_szero>:
     ee6:	bb 27       	eor	r27, r27
     ee8:	66 27       	eor	r22, r22
     eea:	77 27       	eor	r23, r23
     eec:	cb 01       	movw	r24, r22
     eee:	97 f9       	bld	r25, 7
     ef0:	08 95       	ret

00000ef2 <__mulsf3>:
     ef2:	0e 94 8c 07 	call	0xf18	; 0xf18 <__mulsf3x>
     ef6:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_round>
     efa:	0e 94 31 07 	call	0xe62	; 0xe62 <__fp_pscA>
     efe:	38 f0       	brcs	.+14     	; 0xf0e <__mulsf3+0x1c>
     f00:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_pscB>
     f04:	20 f0       	brcs	.+8      	; 0xf0e <__mulsf3+0x1c>
     f06:	95 23       	and	r25, r21
     f08:	11 f0       	breq	.+4      	; 0xf0e <__mulsf3+0x1c>
     f0a:	0c 94 28 07 	jmp	0xe50	; 0xe50 <__fp_inf>
     f0e:	0c 94 2e 07 	jmp	0xe5c	; 0xe5c <__fp_nan>
     f12:	11 24       	eor	r1, r1
     f14:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__fp_szero>

00000f18 <__mulsf3x>:
     f18:	0e 94 50 07 	call	0xea0	; 0xea0 <__fp_split3>
     f1c:	70 f3       	brcs	.-36     	; 0xefa <__mulsf3+0x8>

00000f1e <__mulsf3_pse>:
     f1e:	95 9f       	mul	r25, r21
     f20:	c1 f3       	breq	.-16     	; 0xf12 <__mulsf3+0x20>
     f22:	95 0f       	add	r25, r21
     f24:	50 e0       	ldi	r21, 0x00	; 0
     f26:	55 1f       	adc	r21, r21
     f28:	62 9f       	mul	r22, r18
     f2a:	f0 01       	movw	r30, r0
     f2c:	72 9f       	mul	r23, r18
     f2e:	bb 27       	eor	r27, r27
     f30:	f0 0d       	add	r31, r0
     f32:	b1 1d       	adc	r27, r1
     f34:	63 9f       	mul	r22, r19
     f36:	aa 27       	eor	r26, r26
     f38:	f0 0d       	add	r31, r0
     f3a:	b1 1d       	adc	r27, r1
     f3c:	aa 1f       	adc	r26, r26
     f3e:	64 9f       	mul	r22, r20
     f40:	66 27       	eor	r22, r22
     f42:	b0 0d       	add	r27, r0
     f44:	a1 1d       	adc	r26, r1
     f46:	66 1f       	adc	r22, r22
     f48:	82 9f       	mul	r24, r18
     f4a:	22 27       	eor	r18, r18
     f4c:	b0 0d       	add	r27, r0
     f4e:	a1 1d       	adc	r26, r1
     f50:	62 1f       	adc	r22, r18
     f52:	73 9f       	mul	r23, r19
     f54:	b0 0d       	add	r27, r0
     f56:	a1 1d       	adc	r26, r1
     f58:	62 1f       	adc	r22, r18
     f5a:	83 9f       	mul	r24, r19
     f5c:	a0 0d       	add	r26, r0
     f5e:	61 1d       	adc	r22, r1
     f60:	22 1f       	adc	r18, r18
     f62:	74 9f       	mul	r23, r20
     f64:	33 27       	eor	r19, r19
     f66:	a0 0d       	add	r26, r0
     f68:	61 1d       	adc	r22, r1
     f6a:	23 1f       	adc	r18, r19
     f6c:	84 9f       	mul	r24, r20
     f6e:	60 0d       	add	r22, r0
     f70:	21 1d       	adc	r18, r1
     f72:	82 2f       	mov	r24, r18
     f74:	76 2f       	mov	r23, r22
     f76:	6a 2f       	mov	r22, r26
     f78:	11 24       	eor	r1, r1
     f7a:	9f 57       	subi	r25, 0x7F	; 127
     f7c:	50 40       	sbci	r21, 0x00	; 0
     f7e:	9a f0       	brmi	.+38     	; 0xfa6 <__mulsf3_pse+0x88>
     f80:	f1 f0       	breq	.+60     	; 0xfbe <__mulsf3_pse+0xa0>
     f82:	88 23       	and	r24, r24
     f84:	4a f0       	brmi	.+18     	; 0xf98 <__mulsf3_pse+0x7a>
     f86:	ee 0f       	add	r30, r30
     f88:	ff 1f       	adc	r31, r31
     f8a:	bb 1f       	adc	r27, r27
     f8c:	66 1f       	adc	r22, r22
     f8e:	77 1f       	adc	r23, r23
     f90:	88 1f       	adc	r24, r24
     f92:	91 50       	subi	r25, 0x01	; 1
     f94:	50 40       	sbci	r21, 0x00	; 0
     f96:	a9 f7       	brne	.-22     	; 0xf82 <__mulsf3_pse+0x64>
     f98:	9e 3f       	cpi	r25, 0xFE	; 254
     f9a:	51 05       	cpc	r21, r1
     f9c:	80 f0       	brcs	.+32     	; 0xfbe <__mulsf3_pse+0xa0>
     f9e:	0c 94 28 07 	jmp	0xe50	; 0xe50 <__fp_inf>
     fa2:	0c 94 73 07 	jmp	0xee6	; 0xee6 <__fp_szero>
     fa6:	5f 3f       	cpi	r21, 0xFF	; 255
     fa8:	e4 f3       	brlt	.-8      	; 0xfa2 <__mulsf3_pse+0x84>
     faa:	98 3e       	cpi	r25, 0xE8	; 232
     fac:	d4 f3       	brlt	.-12     	; 0xfa2 <__mulsf3_pse+0x84>
     fae:	86 95       	lsr	r24
     fb0:	77 95       	ror	r23
     fb2:	67 95       	ror	r22
     fb4:	b7 95       	ror	r27
     fb6:	f7 95       	ror	r31
     fb8:	e7 95       	ror	r30
     fba:	9f 5f       	subi	r25, 0xFF	; 255
     fbc:	c1 f7       	brne	.-16     	; 0xfae <__mulsf3_pse+0x90>
     fbe:	fe 2b       	or	r31, r30
     fc0:	88 0f       	add	r24, r24
     fc2:	91 1d       	adc	r25, r1
     fc4:	96 95       	lsr	r25
     fc6:	87 95       	ror	r24
     fc8:	97 f9       	bld	r25, 7
     fca:	08 95       	ret

00000fcc <__divmodhi4>:
     fcc:	97 fb       	bst	r25, 7
     fce:	07 2e       	mov	r0, r23
     fd0:	16 f4       	brtc	.+4      	; 0xfd6 <__divmodhi4+0xa>
     fd2:	00 94       	com	r0
     fd4:	07 d0       	rcall	.+14     	; 0xfe4 <__divmodhi4_neg1>
     fd6:	77 fd       	sbrc	r23, 7
     fd8:	09 d0       	rcall	.+18     	; 0xfec <__divmodhi4_neg2>
     fda:	0e 94 fa 07 	call	0xff4	; 0xff4 <__udivmodhi4>
     fde:	07 fc       	sbrc	r0, 7
     fe0:	05 d0       	rcall	.+10     	; 0xfec <__divmodhi4_neg2>
     fe2:	3e f4       	brtc	.+14     	; 0xff2 <__divmodhi4_exit>

00000fe4 <__divmodhi4_neg1>:
     fe4:	90 95       	com	r25
     fe6:	81 95       	neg	r24
     fe8:	9f 4f       	sbci	r25, 0xFF	; 255
     fea:	08 95       	ret

00000fec <__divmodhi4_neg2>:
     fec:	70 95       	com	r23
     fee:	61 95       	neg	r22
     ff0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ff2 <__divmodhi4_exit>:
     ff2:	08 95       	ret

00000ff4 <__udivmodhi4>:
     ff4:	aa 1b       	sub	r26, r26
     ff6:	bb 1b       	sub	r27, r27
     ff8:	51 e1       	ldi	r21, 0x11	; 17
     ffa:	07 c0       	rjmp	.+14     	; 0x100a <__udivmodhi4_ep>

00000ffc <__udivmodhi4_loop>:
     ffc:	aa 1f       	adc	r26, r26
     ffe:	bb 1f       	adc	r27, r27
    1000:	a6 17       	cp	r26, r22
    1002:	b7 07       	cpc	r27, r23
    1004:	10 f0       	brcs	.+4      	; 0x100a <__udivmodhi4_ep>
    1006:	a6 1b       	sub	r26, r22
    1008:	b7 0b       	sbc	r27, r23

0000100a <__udivmodhi4_ep>:
    100a:	88 1f       	adc	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	5a 95       	dec	r21
    1010:	a9 f7       	brne	.-22     	; 0xffc <__udivmodhi4_loop>
    1012:	80 95       	com	r24
    1014:	90 95       	com	r25
    1016:	bc 01       	movw	r22, r24
    1018:	cd 01       	movw	r24, r26
    101a:	08 95       	ret

0000101c <fdevopen>:
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	cf 93       	push	r28
    1022:	df 93       	push	r29
    1024:	00 97       	sbiw	r24, 0x00	; 0
    1026:	31 f4       	brne	.+12     	; 0x1034 <fdevopen+0x18>
    1028:	61 15       	cp	r22, r1
    102a:	71 05       	cpc	r23, r1
    102c:	19 f4       	brne	.+6      	; 0x1034 <fdevopen+0x18>
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	3a c0       	rjmp	.+116    	; 0x10a8 <fdevopen+0x8c>
    1034:	8b 01       	movw	r16, r22
    1036:	ec 01       	movw	r28, r24
    1038:	6e e0       	ldi	r22, 0x0E	; 14
    103a:	70 e0       	ldi	r23, 0x00	; 0
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	0e 94 80 0a 	call	0x1500	; 0x1500 <calloc>
    1044:	fc 01       	movw	r30, r24
    1046:	89 2b       	or	r24, r25
    1048:	91 f3       	breq	.-28     	; 0x102e <fdevopen+0x12>
    104a:	80 e8       	ldi	r24, 0x80	; 128
    104c:	83 83       	std	Z+3, r24	; 0x03
    104e:	01 15       	cp	r16, r1
    1050:	11 05       	cpc	r17, r1
    1052:	71 f0       	breq	.+28     	; 0x1070 <fdevopen+0x54>
    1054:	13 87       	std	Z+11, r17	; 0x0b
    1056:	02 87       	std	Z+10, r16	; 0x0a
    1058:	81 e8       	ldi	r24, 0x81	; 129
    105a:	83 83       	std	Z+3, r24	; 0x03
    105c:	80 91 ec 02 	lds	r24, 0x02EC	; 0x8002ec <__iob>
    1060:	90 91 ed 02 	lds	r25, 0x02ED	; 0x8002ed <__iob+0x1>
    1064:	89 2b       	or	r24, r25
    1066:	21 f4       	brne	.+8      	; 0x1070 <fdevopen+0x54>
    1068:	f0 93 ed 02 	sts	0x02ED, r31	; 0x8002ed <__iob+0x1>
    106c:	e0 93 ec 02 	sts	0x02EC, r30	; 0x8002ec <__iob>
    1070:	20 97       	sbiw	r28, 0x00	; 0
    1072:	c9 f0       	breq	.+50     	; 0x10a6 <fdevopen+0x8a>
    1074:	d1 87       	std	Z+9, r29	; 0x09
    1076:	c0 87       	std	Z+8, r28	; 0x08
    1078:	83 81       	ldd	r24, Z+3	; 0x03
    107a:	82 60       	ori	r24, 0x02	; 2
    107c:	83 83       	std	Z+3, r24	; 0x03
    107e:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <__iob+0x2>
    1082:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <__iob+0x3>
    1086:	89 2b       	or	r24, r25
    1088:	71 f4       	brne	.+28     	; 0x10a6 <fdevopen+0x8a>
    108a:	f0 93 ef 02 	sts	0x02EF, r31	; 0x8002ef <__iob+0x3>
    108e:	e0 93 ee 02 	sts	0x02EE, r30	; 0x8002ee <__iob+0x2>
    1092:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <__iob+0x4>
    1096:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <__iob+0x5>
    109a:	89 2b       	or	r24, r25
    109c:	21 f4       	brne	.+8      	; 0x10a6 <fdevopen+0x8a>
    109e:	f0 93 f1 02 	sts	0x02F1, r31	; 0x8002f1 <__iob+0x5>
    10a2:	e0 93 f0 02 	sts	0x02F0, r30	; 0x8002f0 <__iob+0x4>
    10a6:	cf 01       	movw	r24, r30
    10a8:	df 91       	pop	r29
    10aa:	cf 91       	pop	r28
    10ac:	1f 91       	pop	r17
    10ae:	0f 91       	pop	r16
    10b0:	08 95       	ret

000010b2 <printf>:
    10b2:	a0 e0       	ldi	r26, 0x00	; 0
    10b4:	b0 e0       	ldi	r27, 0x00	; 0
    10b6:	ef e5       	ldi	r30, 0x5F	; 95
    10b8:	f8 e0       	ldi	r31, 0x08	; 8
    10ba:	0c 94 84 0c 	jmp	0x1908	; 0x1908 <__prologue_saves__+0x20>
    10be:	ae 01       	movw	r20, r28
    10c0:	4b 5f       	subi	r20, 0xFB	; 251
    10c2:	5f 4f       	sbci	r21, 0xFF	; 255
    10c4:	fa 01       	movw	r30, r20
    10c6:	61 91       	ld	r22, Z+
    10c8:	71 91       	ld	r23, Z+
    10ca:	af 01       	movw	r20, r30
    10cc:	80 91 ee 02 	lds	r24, 0x02EE	; 0x8002ee <__iob+0x2>
    10d0:	90 91 ef 02 	lds	r25, 0x02EF	; 0x8002ef <__iob+0x3>
    10d4:	0e 94 9f 08 	call	0x113e	; 0x113e <vfprintf>
    10d8:	e2 e0       	ldi	r30, 0x02	; 2
    10da:	0c 94 a0 0c 	jmp	0x1940	; 0x1940 <__epilogue_restores__+0x20>

000010de <puts>:
    10de:	0f 93       	push	r16
    10e0:	1f 93       	push	r17
    10e2:	cf 93       	push	r28
    10e4:	df 93       	push	r29
    10e6:	e0 91 ee 02 	lds	r30, 0x02EE	; 0x8002ee <__iob+0x2>
    10ea:	f0 91 ef 02 	lds	r31, 0x02EF	; 0x8002ef <__iob+0x3>
    10ee:	23 81       	ldd	r18, Z+3	; 0x03
    10f0:	21 ff       	sbrs	r18, 1
    10f2:	1b c0       	rjmp	.+54     	; 0x112a <puts+0x4c>
    10f4:	8c 01       	movw	r16, r24
    10f6:	d0 e0       	ldi	r29, 0x00	; 0
    10f8:	c0 e0       	ldi	r28, 0x00	; 0
    10fa:	f8 01       	movw	r30, r16
    10fc:	81 91       	ld	r24, Z+
    10fe:	8f 01       	movw	r16, r30
    1100:	60 91 ee 02 	lds	r22, 0x02EE	; 0x8002ee <__iob+0x2>
    1104:	70 91 ef 02 	lds	r23, 0x02EF	; 0x8002ef <__iob+0x3>
    1108:	db 01       	movw	r26, r22
    110a:	18 96       	adiw	r26, 0x08	; 8
    110c:	ed 91       	ld	r30, X+
    110e:	fc 91       	ld	r31, X
    1110:	19 97       	sbiw	r26, 0x09	; 9
    1112:	88 23       	and	r24, r24
    1114:	31 f0       	breq	.+12     	; 0x1122 <puts+0x44>
    1116:	09 95       	icall
    1118:	89 2b       	or	r24, r25
    111a:	79 f3       	breq	.-34     	; 0x10fa <puts+0x1c>
    111c:	df ef       	ldi	r29, 0xFF	; 255
    111e:	cf ef       	ldi	r28, 0xFF	; 255
    1120:	ec cf       	rjmp	.-40     	; 0x10fa <puts+0x1c>
    1122:	8a e0       	ldi	r24, 0x0A	; 10
    1124:	09 95       	icall
    1126:	89 2b       	or	r24, r25
    1128:	19 f0       	breq	.+6      	; 0x1130 <puts+0x52>
    112a:	8f ef       	ldi	r24, 0xFF	; 255
    112c:	9f ef       	ldi	r25, 0xFF	; 255
    112e:	02 c0       	rjmp	.+4      	; 0x1134 <puts+0x56>
    1130:	8d 2f       	mov	r24, r29
    1132:	9c 2f       	mov	r25, r28
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	1f 91       	pop	r17
    113a:	0f 91       	pop	r16
    113c:	08 95       	ret

0000113e <vfprintf>:
    113e:	ab e0       	ldi	r26, 0x0B	; 11
    1140:	b0 e0       	ldi	r27, 0x00	; 0
    1142:	e5 ea       	ldi	r30, 0xA5	; 165
    1144:	f8 e0       	ldi	r31, 0x08	; 8
    1146:	0c 94 74 0c 	jmp	0x18e8	; 0x18e8 <__prologue_saves__>
    114a:	6c 01       	movw	r12, r24
    114c:	7b 01       	movw	r14, r22
    114e:	8a 01       	movw	r16, r20
    1150:	fc 01       	movw	r30, r24
    1152:	17 82       	std	Z+7, r1	; 0x07
    1154:	16 82       	std	Z+6, r1	; 0x06
    1156:	83 81       	ldd	r24, Z+3	; 0x03
    1158:	81 ff       	sbrs	r24, 1
    115a:	cc c1       	rjmp	.+920    	; 0x14f4 <vfprintf+0x3b6>
    115c:	ce 01       	movw	r24, r28
    115e:	01 96       	adiw	r24, 0x01	; 1
    1160:	3c 01       	movw	r6, r24
    1162:	f6 01       	movw	r30, r12
    1164:	93 81       	ldd	r25, Z+3	; 0x03
    1166:	f7 01       	movw	r30, r14
    1168:	93 fd       	sbrc	r25, 3
    116a:	85 91       	lpm	r24, Z+
    116c:	93 ff       	sbrs	r25, 3
    116e:	81 91       	ld	r24, Z+
    1170:	7f 01       	movw	r14, r30
    1172:	88 23       	and	r24, r24
    1174:	09 f4       	brne	.+2      	; 0x1178 <vfprintf+0x3a>
    1176:	ba c1       	rjmp	.+884    	; 0x14ec <vfprintf+0x3ae>
    1178:	85 32       	cpi	r24, 0x25	; 37
    117a:	39 f4       	brne	.+14     	; 0x118a <vfprintf+0x4c>
    117c:	93 fd       	sbrc	r25, 3
    117e:	85 91       	lpm	r24, Z+
    1180:	93 ff       	sbrs	r25, 3
    1182:	81 91       	ld	r24, Z+
    1184:	7f 01       	movw	r14, r30
    1186:	85 32       	cpi	r24, 0x25	; 37
    1188:	29 f4       	brne	.+10     	; 0x1194 <vfprintf+0x56>
    118a:	b6 01       	movw	r22, r12
    118c:	90 e0       	ldi	r25, 0x00	; 0
    118e:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    1192:	e7 cf       	rjmp	.-50     	; 0x1162 <vfprintf+0x24>
    1194:	91 2c       	mov	r9, r1
    1196:	21 2c       	mov	r2, r1
    1198:	31 2c       	mov	r3, r1
    119a:	ff e1       	ldi	r31, 0x1F	; 31
    119c:	f3 15       	cp	r31, r3
    119e:	d8 f0       	brcs	.+54     	; 0x11d6 <vfprintf+0x98>
    11a0:	8b 32       	cpi	r24, 0x2B	; 43
    11a2:	79 f0       	breq	.+30     	; 0x11c2 <vfprintf+0x84>
    11a4:	38 f4       	brcc	.+14     	; 0x11b4 <vfprintf+0x76>
    11a6:	80 32       	cpi	r24, 0x20	; 32
    11a8:	79 f0       	breq	.+30     	; 0x11c8 <vfprintf+0x8a>
    11aa:	83 32       	cpi	r24, 0x23	; 35
    11ac:	a1 f4       	brne	.+40     	; 0x11d6 <vfprintf+0x98>
    11ae:	23 2d       	mov	r18, r3
    11b0:	20 61       	ori	r18, 0x10	; 16
    11b2:	1d c0       	rjmp	.+58     	; 0x11ee <vfprintf+0xb0>
    11b4:	8d 32       	cpi	r24, 0x2D	; 45
    11b6:	61 f0       	breq	.+24     	; 0x11d0 <vfprintf+0x92>
    11b8:	80 33       	cpi	r24, 0x30	; 48
    11ba:	69 f4       	brne	.+26     	; 0x11d6 <vfprintf+0x98>
    11bc:	23 2d       	mov	r18, r3
    11be:	21 60       	ori	r18, 0x01	; 1
    11c0:	16 c0       	rjmp	.+44     	; 0x11ee <vfprintf+0xb0>
    11c2:	83 2d       	mov	r24, r3
    11c4:	82 60       	ori	r24, 0x02	; 2
    11c6:	38 2e       	mov	r3, r24
    11c8:	e3 2d       	mov	r30, r3
    11ca:	e4 60       	ori	r30, 0x04	; 4
    11cc:	3e 2e       	mov	r3, r30
    11ce:	2a c0       	rjmp	.+84     	; 0x1224 <vfprintf+0xe6>
    11d0:	f3 2d       	mov	r31, r3
    11d2:	f8 60       	ori	r31, 0x08	; 8
    11d4:	1d c0       	rjmp	.+58     	; 0x1210 <vfprintf+0xd2>
    11d6:	37 fc       	sbrc	r3, 7
    11d8:	2d c0       	rjmp	.+90     	; 0x1234 <vfprintf+0xf6>
    11da:	20 ed       	ldi	r18, 0xD0	; 208
    11dc:	28 0f       	add	r18, r24
    11de:	2a 30       	cpi	r18, 0x0A	; 10
    11e0:	40 f0       	brcs	.+16     	; 0x11f2 <vfprintf+0xb4>
    11e2:	8e 32       	cpi	r24, 0x2E	; 46
    11e4:	b9 f4       	brne	.+46     	; 0x1214 <vfprintf+0xd6>
    11e6:	36 fc       	sbrc	r3, 6
    11e8:	81 c1       	rjmp	.+770    	; 0x14ec <vfprintf+0x3ae>
    11ea:	23 2d       	mov	r18, r3
    11ec:	20 64       	ori	r18, 0x40	; 64
    11ee:	32 2e       	mov	r3, r18
    11f0:	19 c0       	rjmp	.+50     	; 0x1224 <vfprintf+0xe6>
    11f2:	36 fe       	sbrs	r3, 6
    11f4:	06 c0       	rjmp	.+12     	; 0x1202 <vfprintf+0xc4>
    11f6:	8a e0       	ldi	r24, 0x0A	; 10
    11f8:	98 9e       	mul	r9, r24
    11fa:	20 0d       	add	r18, r0
    11fc:	11 24       	eor	r1, r1
    11fe:	92 2e       	mov	r9, r18
    1200:	11 c0       	rjmp	.+34     	; 0x1224 <vfprintf+0xe6>
    1202:	ea e0       	ldi	r30, 0x0A	; 10
    1204:	2e 9e       	mul	r2, r30
    1206:	20 0d       	add	r18, r0
    1208:	11 24       	eor	r1, r1
    120a:	22 2e       	mov	r2, r18
    120c:	f3 2d       	mov	r31, r3
    120e:	f0 62       	ori	r31, 0x20	; 32
    1210:	3f 2e       	mov	r3, r31
    1212:	08 c0       	rjmp	.+16     	; 0x1224 <vfprintf+0xe6>
    1214:	8c 36       	cpi	r24, 0x6C	; 108
    1216:	21 f4       	brne	.+8      	; 0x1220 <vfprintf+0xe2>
    1218:	83 2d       	mov	r24, r3
    121a:	80 68       	ori	r24, 0x80	; 128
    121c:	38 2e       	mov	r3, r24
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <vfprintf+0xe6>
    1220:	88 36       	cpi	r24, 0x68	; 104
    1222:	41 f4       	brne	.+16     	; 0x1234 <vfprintf+0xf6>
    1224:	f7 01       	movw	r30, r14
    1226:	93 fd       	sbrc	r25, 3
    1228:	85 91       	lpm	r24, Z+
    122a:	93 ff       	sbrs	r25, 3
    122c:	81 91       	ld	r24, Z+
    122e:	7f 01       	movw	r14, r30
    1230:	81 11       	cpse	r24, r1
    1232:	b3 cf       	rjmp	.-154    	; 0x119a <vfprintf+0x5c>
    1234:	98 2f       	mov	r25, r24
    1236:	9f 7d       	andi	r25, 0xDF	; 223
    1238:	95 54       	subi	r25, 0x45	; 69
    123a:	93 30       	cpi	r25, 0x03	; 3
    123c:	28 f4       	brcc	.+10     	; 0x1248 <vfprintf+0x10a>
    123e:	0c 5f       	subi	r16, 0xFC	; 252
    1240:	1f 4f       	sbci	r17, 0xFF	; 255
    1242:	9f e3       	ldi	r25, 0x3F	; 63
    1244:	99 83       	std	Y+1, r25	; 0x01
    1246:	0d c0       	rjmp	.+26     	; 0x1262 <vfprintf+0x124>
    1248:	83 36       	cpi	r24, 0x63	; 99
    124a:	31 f0       	breq	.+12     	; 0x1258 <vfprintf+0x11a>
    124c:	83 37       	cpi	r24, 0x73	; 115
    124e:	71 f0       	breq	.+28     	; 0x126c <vfprintf+0x12e>
    1250:	83 35       	cpi	r24, 0x53	; 83
    1252:	09 f0       	breq	.+2      	; 0x1256 <vfprintf+0x118>
    1254:	59 c0       	rjmp	.+178    	; 0x1308 <vfprintf+0x1ca>
    1256:	21 c0       	rjmp	.+66     	; 0x129a <vfprintf+0x15c>
    1258:	f8 01       	movw	r30, r16
    125a:	80 81       	ld	r24, Z
    125c:	89 83       	std	Y+1, r24	; 0x01
    125e:	0e 5f       	subi	r16, 0xFE	; 254
    1260:	1f 4f       	sbci	r17, 0xFF	; 255
    1262:	88 24       	eor	r8, r8
    1264:	83 94       	inc	r8
    1266:	91 2c       	mov	r9, r1
    1268:	53 01       	movw	r10, r6
    126a:	13 c0       	rjmp	.+38     	; 0x1292 <vfprintf+0x154>
    126c:	28 01       	movw	r4, r16
    126e:	f2 e0       	ldi	r31, 0x02	; 2
    1270:	4f 0e       	add	r4, r31
    1272:	51 1c       	adc	r5, r1
    1274:	f8 01       	movw	r30, r16
    1276:	a0 80       	ld	r10, Z
    1278:	b1 80       	ldd	r11, Z+1	; 0x01
    127a:	36 fe       	sbrs	r3, 6
    127c:	03 c0       	rjmp	.+6      	; 0x1284 <vfprintf+0x146>
    127e:	69 2d       	mov	r22, r9
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	02 c0       	rjmp	.+4      	; 0x1288 <vfprintf+0x14a>
    1284:	6f ef       	ldi	r22, 0xFF	; 255
    1286:	7f ef       	ldi	r23, 0xFF	; 255
    1288:	c5 01       	movw	r24, r10
    128a:	0e 94 cf 0b 	call	0x179e	; 0x179e <strnlen>
    128e:	4c 01       	movw	r8, r24
    1290:	82 01       	movw	r16, r4
    1292:	f3 2d       	mov	r31, r3
    1294:	ff 77       	andi	r31, 0x7F	; 127
    1296:	3f 2e       	mov	r3, r31
    1298:	16 c0       	rjmp	.+44     	; 0x12c6 <vfprintf+0x188>
    129a:	28 01       	movw	r4, r16
    129c:	22 e0       	ldi	r18, 0x02	; 2
    129e:	42 0e       	add	r4, r18
    12a0:	51 1c       	adc	r5, r1
    12a2:	f8 01       	movw	r30, r16
    12a4:	a0 80       	ld	r10, Z
    12a6:	b1 80       	ldd	r11, Z+1	; 0x01
    12a8:	36 fe       	sbrs	r3, 6
    12aa:	03 c0       	rjmp	.+6      	; 0x12b2 <vfprintf+0x174>
    12ac:	69 2d       	mov	r22, r9
    12ae:	70 e0       	ldi	r23, 0x00	; 0
    12b0:	02 c0       	rjmp	.+4      	; 0x12b6 <vfprintf+0x178>
    12b2:	6f ef       	ldi	r22, 0xFF	; 255
    12b4:	7f ef       	ldi	r23, 0xFF	; 255
    12b6:	c5 01       	movw	r24, r10
    12b8:	0e 94 bd 0b 	call	0x177a	; 0x177a <strnlen_P>
    12bc:	4c 01       	movw	r8, r24
    12be:	f3 2d       	mov	r31, r3
    12c0:	f0 68       	ori	r31, 0x80	; 128
    12c2:	3f 2e       	mov	r3, r31
    12c4:	82 01       	movw	r16, r4
    12c6:	33 fc       	sbrc	r3, 3
    12c8:	1b c0       	rjmp	.+54     	; 0x1300 <vfprintf+0x1c2>
    12ca:	82 2d       	mov	r24, r2
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	88 16       	cp	r8, r24
    12d0:	99 06       	cpc	r9, r25
    12d2:	b0 f4       	brcc	.+44     	; 0x1300 <vfprintf+0x1c2>
    12d4:	b6 01       	movw	r22, r12
    12d6:	80 e2       	ldi	r24, 0x20	; 32
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    12de:	2a 94       	dec	r2
    12e0:	f4 cf       	rjmp	.-24     	; 0x12ca <vfprintf+0x18c>
    12e2:	f5 01       	movw	r30, r10
    12e4:	37 fc       	sbrc	r3, 7
    12e6:	85 91       	lpm	r24, Z+
    12e8:	37 fe       	sbrs	r3, 7
    12ea:	81 91       	ld	r24, Z+
    12ec:	5f 01       	movw	r10, r30
    12ee:	b6 01       	movw	r22, r12
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    12f6:	21 10       	cpse	r2, r1
    12f8:	2a 94       	dec	r2
    12fa:	21 e0       	ldi	r18, 0x01	; 1
    12fc:	82 1a       	sub	r8, r18
    12fe:	91 08       	sbc	r9, r1
    1300:	81 14       	cp	r8, r1
    1302:	91 04       	cpc	r9, r1
    1304:	71 f7       	brne	.-36     	; 0x12e2 <vfprintf+0x1a4>
    1306:	e8 c0       	rjmp	.+464    	; 0x14d8 <vfprintf+0x39a>
    1308:	84 36       	cpi	r24, 0x64	; 100
    130a:	11 f0       	breq	.+4      	; 0x1310 <vfprintf+0x1d2>
    130c:	89 36       	cpi	r24, 0x69	; 105
    130e:	41 f5       	brne	.+80     	; 0x1360 <vfprintf+0x222>
    1310:	f8 01       	movw	r30, r16
    1312:	37 fe       	sbrs	r3, 7
    1314:	07 c0       	rjmp	.+14     	; 0x1324 <vfprintf+0x1e6>
    1316:	60 81       	ld	r22, Z
    1318:	71 81       	ldd	r23, Z+1	; 0x01
    131a:	82 81       	ldd	r24, Z+2	; 0x02
    131c:	93 81       	ldd	r25, Z+3	; 0x03
    131e:	0c 5f       	subi	r16, 0xFC	; 252
    1320:	1f 4f       	sbci	r17, 0xFF	; 255
    1322:	08 c0       	rjmp	.+16     	; 0x1334 <vfprintf+0x1f6>
    1324:	60 81       	ld	r22, Z
    1326:	71 81       	ldd	r23, Z+1	; 0x01
    1328:	07 2e       	mov	r0, r23
    132a:	00 0c       	add	r0, r0
    132c:	88 0b       	sbc	r24, r24
    132e:	99 0b       	sbc	r25, r25
    1330:	0e 5f       	subi	r16, 0xFE	; 254
    1332:	1f 4f       	sbci	r17, 0xFF	; 255
    1334:	f3 2d       	mov	r31, r3
    1336:	ff 76       	andi	r31, 0x6F	; 111
    1338:	3f 2e       	mov	r3, r31
    133a:	97 ff       	sbrs	r25, 7
    133c:	09 c0       	rjmp	.+18     	; 0x1350 <vfprintf+0x212>
    133e:	90 95       	com	r25
    1340:	80 95       	com	r24
    1342:	70 95       	com	r23
    1344:	61 95       	neg	r22
    1346:	7f 4f       	sbci	r23, 0xFF	; 255
    1348:	8f 4f       	sbci	r24, 0xFF	; 255
    134a:	9f 4f       	sbci	r25, 0xFF	; 255
    134c:	f0 68       	ori	r31, 0x80	; 128
    134e:	3f 2e       	mov	r3, r31
    1350:	2a e0       	ldi	r18, 0x0A	; 10
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	a3 01       	movw	r20, r6
    1356:	0e 94 16 0c 	call	0x182c	; 0x182c <__ultoa_invert>
    135a:	88 2e       	mov	r8, r24
    135c:	86 18       	sub	r8, r6
    135e:	45 c0       	rjmp	.+138    	; 0x13ea <vfprintf+0x2ac>
    1360:	85 37       	cpi	r24, 0x75	; 117
    1362:	31 f4       	brne	.+12     	; 0x1370 <vfprintf+0x232>
    1364:	23 2d       	mov	r18, r3
    1366:	2f 7e       	andi	r18, 0xEF	; 239
    1368:	b2 2e       	mov	r11, r18
    136a:	2a e0       	ldi	r18, 0x0A	; 10
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	25 c0       	rjmp	.+74     	; 0x13ba <vfprintf+0x27c>
    1370:	93 2d       	mov	r25, r3
    1372:	99 7f       	andi	r25, 0xF9	; 249
    1374:	b9 2e       	mov	r11, r25
    1376:	8f 36       	cpi	r24, 0x6F	; 111
    1378:	c1 f0       	breq	.+48     	; 0x13aa <vfprintf+0x26c>
    137a:	18 f4       	brcc	.+6      	; 0x1382 <vfprintf+0x244>
    137c:	88 35       	cpi	r24, 0x58	; 88
    137e:	79 f0       	breq	.+30     	; 0x139e <vfprintf+0x260>
    1380:	b5 c0       	rjmp	.+362    	; 0x14ec <vfprintf+0x3ae>
    1382:	80 37       	cpi	r24, 0x70	; 112
    1384:	19 f0       	breq	.+6      	; 0x138c <vfprintf+0x24e>
    1386:	88 37       	cpi	r24, 0x78	; 120
    1388:	21 f0       	breq	.+8      	; 0x1392 <vfprintf+0x254>
    138a:	b0 c0       	rjmp	.+352    	; 0x14ec <vfprintf+0x3ae>
    138c:	e9 2f       	mov	r30, r25
    138e:	e0 61       	ori	r30, 0x10	; 16
    1390:	be 2e       	mov	r11, r30
    1392:	b4 fe       	sbrs	r11, 4
    1394:	0d c0       	rjmp	.+26     	; 0x13b0 <vfprintf+0x272>
    1396:	fb 2d       	mov	r31, r11
    1398:	f4 60       	ori	r31, 0x04	; 4
    139a:	bf 2e       	mov	r11, r31
    139c:	09 c0       	rjmp	.+18     	; 0x13b0 <vfprintf+0x272>
    139e:	34 fe       	sbrs	r3, 4
    13a0:	0a c0       	rjmp	.+20     	; 0x13b6 <vfprintf+0x278>
    13a2:	29 2f       	mov	r18, r25
    13a4:	26 60       	ori	r18, 0x06	; 6
    13a6:	b2 2e       	mov	r11, r18
    13a8:	06 c0       	rjmp	.+12     	; 0x13b6 <vfprintf+0x278>
    13aa:	28 e0       	ldi	r18, 0x08	; 8
    13ac:	30 e0       	ldi	r19, 0x00	; 0
    13ae:	05 c0       	rjmp	.+10     	; 0x13ba <vfprintf+0x27c>
    13b0:	20 e1       	ldi	r18, 0x10	; 16
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <vfprintf+0x27c>
    13b6:	20 e1       	ldi	r18, 0x10	; 16
    13b8:	32 e0       	ldi	r19, 0x02	; 2
    13ba:	f8 01       	movw	r30, r16
    13bc:	b7 fe       	sbrs	r11, 7
    13be:	07 c0       	rjmp	.+14     	; 0x13ce <vfprintf+0x290>
    13c0:	60 81       	ld	r22, Z
    13c2:	71 81       	ldd	r23, Z+1	; 0x01
    13c4:	82 81       	ldd	r24, Z+2	; 0x02
    13c6:	93 81       	ldd	r25, Z+3	; 0x03
    13c8:	0c 5f       	subi	r16, 0xFC	; 252
    13ca:	1f 4f       	sbci	r17, 0xFF	; 255
    13cc:	06 c0       	rjmp	.+12     	; 0x13da <vfprintf+0x29c>
    13ce:	60 81       	ld	r22, Z
    13d0:	71 81       	ldd	r23, Z+1	; 0x01
    13d2:	80 e0       	ldi	r24, 0x00	; 0
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	0e 5f       	subi	r16, 0xFE	; 254
    13d8:	1f 4f       	sbci	r17, 0xFF	; 255
    13da:	a3 01       	movw	r20, r6
    13dc:	0e 94 16 0c 	call	0x182c	; 0x182c <__ultoa_invert>
    13e0:	88 2e       	mov	r8, r24
    13e2:	86 18       	sub	r8, r6
    13e4:	fb 2d       	mov	r31, r11
    13e6:	ff 77       	andi	r31, 0x7F	; 127
    13e8:	3f 2e       	mov	r3, r31
    13ea:	36 fe       	sbrs	r3, 6
    13ec:	0d c0       	rjmp	.+26     	; 0x1408 <vfprintf+0x2ca>
    13ee:	23 2d       	mov	r18, r3
    13f0:	2e 7f       	andi	r18, 0xFE	; 254
    13f2:	a2 2e       	mov	r10, r18
    13f4:	89 14       	cp	r8, r9
    13f6:	58 f4       	brcc	.+22     	; 0x140e <vfprintf+0x2d0>
    13f8:	34 fe       	sbrs	r3, 4
    13fa:	0b c0       	rjmp	.+22     	; 0x1412 <vfprintf+0x2d4>
    13fc:	32 fc       	sbrc	r3, 2
    13fe:	09 c0       	rjmp	.+18     	; 0x1412 <vfprintf+0x2d4>
    1400:	83 2d       	mov	r24, r3
    1402:	8e 7e       	andi	r24, 0xEE	; 238
    1404:	a8 2e       	mov	r10, r24
    1406:	05 c0       	rjmp	.+10     	; 0x1412 <vfprintf+0x2d4>
    1408:	b8 2c       	mov	r11, r8
    140a:	a3 2c       	mov	r10, r3
    140c:	03 c0       	rjmp	.+6      	; 0x1414 <vfprintf+0x2d6>
    140e:	b8 2c       	mov	r11, r8
    1410:	01 c0       	rjmp	.+2      	; 0x1414 <vfprintf+0x2d6>
    1412:	b9 2c       	mov	r11, r9
    1414:	a4 fe       	sbrs	r10, 4
    1416:	0f c0       	rjmp	.+30     	; 0x1436 <vfprintf+0x2f8>
    1418:	fe 01       	movw	r30, r28
    141a:	e8 0d       	add	r30, r8
    141c:	f1 1d       	adc	r31, r1
    141e:	80 81       	ld	r24, Z
    1420:	80 33       	cpi	r24, 0x30	; 48
    1422:	21 f4       	brne	.+8      	; 0x142c <vfprintf+0x2ee>
    1424:	9a 2d       	mov	r25, r10
    1426:	99 7e       	andi	r25, 0xE9	; 233
    1428:	a9 2e       	mov	r10, r25
    142a:	09 c0       	rjmp	.+18     	; 0x143e <vfprintf+0x300>
    142c:	a2 fe       	sbrs	r10, 2
    142e:	06 c0       	rjmp	.+12     	; 0x143c <vfprintf+0x2fe>
    1430:	b3 94       	inc	r11
    1432:	b3 94       	inc	r11
    1434:	04 c0       	rjmp	.+8      	; 0x143e <vfprintf+0x300>
    1436:	8a 2d       	mov	r24, r10
    1438:	86 78       	andi	r24, 0x86	; 134
    143a:	09 f0       	breq	.+2      	; 0x143e <vfprintf+0x300>
    143c:	b3 94       	inc	r11
    143e:	a3 fc       	sbrc	r10, 3
    1440:	11 c0       	rjmp	.+34     	; 0x1464 <vfprintf+0x326>
    1442:	a0 fe       	sbrs	r10, 0
    1444:	06 c0       	rjmp	.+12     	; 0x1452 <vfprintf+0x314>
    1446:	b2 14       	cp	r11, r2
    1448:	88 f4       	brcc	.+34     	; 0x146c <vfprintf+0x32e>
    144a:	28 0c       	add	r2, r8
    144c:	92 2c       	mov	r9, r2
    144e:	9b 18       	sub	r9, r11
    1450:	0e c0       	rjmp	.+28     	; 0x146e <vfprintf+0x330>
    1452:	b2 14       	cp	r11, r2
    1454:	60 f4       	brcc	.+24     	; 0x146e <vfprintf+0x330>
    1456:	b6 01       	movw	r22, r12
    1458:	80 e2       	ldi	r24, 0x20	; 32
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    1460:	b3 94       	inc	r11
    1462:	f7 cf       	rjmp	.-18     	; 0x1452 <vfprintf+0x314>
    1464:	b2 14       	cp	r11, r2
    1466:	18 f4       	brcc	.+6      	; 0x146e <vfprintf+0x330>
    1468:	2b 18       	sub	r2, r11
    146a:	02 c0       	rjmp	.+4      	; 0x1470 <vfprintf+0x332>
    146c:	98 2c       	mov	r9, r8
    146e:	21 2c       	mov	r2, r1
    1470:	a4 fe       	sbrs	r10, 4
    1472:	10 c0       	rjmp	.+32     	; 0x1494 <vfprintf+0x356>
    1474:	b6 01       	movw	r22, r12
    1476:	80 e3       	ldi	r24, 0x30	; 48
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    147e:	a2 fe       	sbrs	r10, 2
    1480:	17 c0       	rjmp	.+46     	; 0x14b0 <vfprintf+0x372>
    1482:	a1 fc       	sbrc	r10, 1
    1484:	03 c0       	rjmp	.+6      	; 0x148c <vfprintf+0x34e>
    1486:	88 e7       	ldi	r24, 0x78	; 120
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	02 c0       	rjmp	.+4      	; 0x1490 <vfprintf+0x352>
    148c:	88 e5       	ldi	r24, 0x58	; 88
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	b6 01       	movw	r22, r12
    1492:	0c c0       	rjmp	.+24     	; 0x14ac <vfprintf+0x36e>
    1494:	8a 2d       	mov	r24, r10
    1496:	86 78       	andi	r24, 0x86	; 134
    1498:	59 f0       	breq	.+22     	; 0x14b0 <vfprintf+0x372>
    149a:	a1 fe       	sbrs	r10, 1
    149c:	02 c0       	rjmp	.+4      	; 0x14a2 <vfprintf+0x364>
    149e:	8b e2       	ldi	r24, 0x2B	; 43
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <vfprintf+0x366>
    14a2:	80 e2       	ldi	r24, 0x20	; 32
    14a4:	a7 fc       	sbrc	r10, 7
    14a6:	8d e2       	ldi	r24, 0x2D	; 45
    14a8:	b6 01       	movw	r22, r12
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    14b0:	89 14       	cp	r8, r9
    14b2:	38 f4       	brcc	.+14     	; 0x14c2 <vfprintf+0x384>
    14b4:	b6 01       	movw	r22, r12
    14b6:	80 e3       	ldi	r24, 0x30	; 48
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    14be:	9a 94       	dec	r9
    14c0:	f7 cf       	rjmp	.-18     	; 0x14b0 <vfprintf+0x372>
    14c2:	8a 94       	dec	r8
    14c4:	f3 01       	movw	r30, r6
    14c6:	e8 0d       	add	r30, r8
    14c8:	f1 1d       	adc	r31, r1
    14ca:	80 81       	ld	r24, Z
    14cc:	b6 01       	movw	r22, r12
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    14d4:	81 10       	cpse	r8, r1
    14d6:	f5 cf       	rjmp	.-22     	; 0x14c2 <vfprintf+0x384>
    14d8:	22 20       	and	r2, r2
    14da:	09 f4       	brne	.+2      	; 0x14de <vfprintf+0x3a0>
    14dc:	42 ce       	rjmp	.-892    	; 0x1162 <vfprintf+0x24>
    14de:	b6 01       	movw	r22, r12
    14e0:	80 e2       	ldi	r24, 0x20	; 32
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	0e 94 da 0b 	call	0x17b4	; 0x17b4 <fputc>
    14e8:	2a 94       	dec	r2
    14ea:	f6 cf       	rjmp	.-20     	; 0x14d8 <vfprintf+0x39a>
    14ec:	f6 01       	movw	r30, r12
    14ee:	86 81       	ldd	r24, Z+6	; 0x06
    14f0:	97 81       	ldd	r25, Z+7	; 0x07
    14f2:	02 c0       	rjmp	.+4      	; 0x14f8 <vfprintf+0x3ba>
    14f4:	8f ef       	ldi	r24, 0xFF	; 255
    14f6:	9f ef       	ldi	r25, 0xFF	; 255
    14f8:	2b 96       	adiw	r28, 0x0b	; 11
    14fa:	e2 e1       	ldi	r30, 0x12	; 18
    14fc:	0c 94 90 0c 	jmp	0x1920	; 0x1920 <__epilogue_restores__>

00001500 <calloc>:
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	86 9f       	mul	r24, r22
    150a:	80 01       	movw	r16, r0
    150c:	87 9f       	mul	r24, r23
    150e:	10 0d       	add	r17, r0
    1510:	96 9f       	mul	r25, r22
    1512:	10 0d       	add	r17, r0
    1514:	11 24       	eor	r1, r1
    1516:	c8 01       	movw	r24, r16
    1518:	0e 94 9c 0a 	call	0x1538	; 0x1538 <malloc>
    151c:	ec 01       	movw	r28, r24
    151e:	00 97       	sbiw	r24, 0x00	; 0
    1520:	29 f0       	breq	.+10     	; 0x152c <calloc+0x2c>
    1522:	a8 01       	movw	r20, r16
    1524:	60 e0       	ldi	r22, 0x00	; 0
    1526:	70 e0       	ldi	r23, 0x00	; 0
    1528:	0e 94 c8 0b 	call	0x1790	; 0x1790 <memset>
    152c:	ce 01       	movw	r24, r28
    152e:	df 91       	pop	r29
    1530:	cf 91       	pop	r28
    1532:	1f 91       	pop	r17
    1534:	0f 91       	pop	r16
    1536:	08 95       	ret

00001538 <malloc>:
    1538:	0f 93       	push	r16
    153a:	1f 93       	push	r17
    153c:	cf 93       	push	r28
    153e:	df 93       	push	r29
    1540:	82 30       	cpi	r24, 0x02	; 2
    1542:	91 05       	cpc	r25, r1
    1544:	10 f4       	brcc	.+4      	; 0x154a <malloc+0x12>
    1546:	82 e0       	ldi	r24, 0x02	; 2
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	e0 91 f4 02 	lds	r30, 0x02F4	; 0x8002f4 <__flp>
    154e:	f0 91 f5 02 	lds	r31, 0x02F5	; 0x8002f5 <__flp+0x1>
    1552:	20 e0       	ldi	r18, 0x00	; 0
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	a0 e0       	ldi	r26, 0x00	; 0
    1558:	b0 e0       	ldi	r27, 0x00	; 0
    155a:	30 97       	sbiw	r30, 0x00	; 0
    155c:	19 f1       	breq	.+70     	; 0x15a4 <malloc+0x6c>
    155e:	40 81       	ld	r20, Z
    1560:	51 81       	ldd	r21, Z+1	; 0x01
    1562:	02 81       	ldd	r16, Z+2	; 0x02
    1564:	13 81       	ldd	r17, Z+3	; 0x03
    1566:	48 17       	cp	r20, r24
    1568:	59 07       	cpc	r21, r25
    156a:	c8 f0       	brcs	.+50     	; 0x159e <malloc+0x66>
    156c:	84 17       	cp	r24, r20
    156e:	95 07       	cpc	r25, r21
    1570:	69 f4       	brne	.+26     	; 0x158c <malloc+0x54>
    1572:	10 97       	sbiw	r26, 0x00	; 0
    1574:	31 f0       	breq	.+12     	; 0x1582 <malloc+0x4a>
    1576:	12 96       	adiw	r26, 0x02	; 2
    1578:	0c 93       	st	X, r16
    157a:	12 97       	sbiw	r26, 0x02	; 2
    157c:	13 96       	adiw	r26, 0x03	; 3
    157e:	1c 93       	st	X, r17
    1580:	27 c0       	rjmp	.+78     	; 0x15d0 <malloc+0x98>
    1582:	00 93 f4 02 	sts	0x02F4, r16	; 0x8002f4 <__flp>
    1586:	10 93 f5 02 	sts	0x02F5, r17	; 0x8002f5 <__flp+0x1>
    158a:	22 c0       	rjmp	.+68     	; 0x15d0 <malloc+0x98>
    158c:	21 15       	cp	r18, r1
    158e:	31 05       	cpc	r19, r1
    1590:	19 f0       	breq	.+6      	; 0x1598 <malloc+0x60>
    1592:	42 17       	cp	r20, r18
    1594:	53 07       	cpc	r21, r19
    1596:	18 f4       	brcc	.+6      	; 0x159e <malloc+0x66>
    1598:	9a 01       	movw	r18, r20
    159a:	bd 01       	movw	r22, r26
    159c:	ef 01       	movw	r28, r30
    159e:	df 01       	movw	r26, r30
    15a0:	f8 01       	movw	r30, r16
    15a2:	db cf       	rjmp	.-74     	; 0x155a <malloc+0x22>
    15a4:	21 15       	cp	r18, r1
    15a6:	31 05       	cpc	r19, r1
    15a8:	f9 f0       	breq	.+62     	; 0x15e8 <malloc+0xb0>
    15aa:	28 1b       	sub	r18, r24
    15ac:	39 0b       	sbc	r19, r25
    15ae:	24 30       	cpi	r18, 0x04	; 4
    15b0:	31 05       	cpc	r19, r1
    15b2:	80 f4       	brcc	.+32     	; 0x15d4 <malloc+0x9c>
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	9b 81       	ldd	r25, Y+3	; 0x03
    15b8:	61 15       	cp	r22, r1
    15ba:	71 05       	cpc	r23, r1
    15bc:	21 f0       	breq	.+8      	; 0x15c6 <malloc+0x8e>
    15be:	fb 01       	movw	r30, r22
    15c0:	93 83       	std	Z+3, r25	; 0x03
    15c2:	82 83       	std	Z+2, r24	; 0x02
    15c4:	04 c0       	rjmp	.+8      	; 0x15ce <malloc+0x96>
    15c6:	90 93 f5 02 	sts	0x02F5, r25	; 0x8002f5 <__flp+0x1>
    15ca:	80 93 f4 02 	sts	0x02F4, r24	; 0x8002f4 <__flp>
    15ce:	fe 01       	movw	r30, r28
    15d0:	32 96       	adiw	r30, 0x02	; 2
    15d2:	44 c0       	rjmp	.+136    	; 0x165c <malloc+0x124>
    15d4:	fe 01       	movw	r30, r28
    15d6:	e2 0f       	add	r30, r18
    15d8:	f3 1f       	adc	r31, r19
    15da:	81 93       	st	Z+, r24
    15dc:	91 93       	st	Z+, r25
    15de:	22 50       	subi	r18, 0x02	; 2
    15e0:	31 09       	sbc	r19, r1
    15e2:	39 83       	std	Y+1, r19	; 0x01
    15e4:	28 83       	st	Y, r18
    15e6:	3a c0       	rjmp	.+116    	; 0x165c <malloc+0x124>
    15e8:	20 91 f2 02 	lds	r18, 0x02F2	; 0x8002f2 <__brkval>
    15ec:	30 91 f3 02 	lds	r19, 0x02F3	; 0x8002f3 <__brkval+0x1>
    15f0:	23 2b       	or	r18, r19
    15f2:	41 f4       	brne	.+16     	; 0x1604 <malloc+0xcc>
    15f4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    15f8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    15fc:	30 93 f3 02 	sts	0x02F3, r19	; 0x8002f3 <__brkval+0x1>
    1600:	20 93 f2 02 	sts	0x02F2, r18	; 0x8002f2 <__brkval>
    1604:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    1608:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    160c:	21 15       	cp	r18, r1
    160e:	31 05       	cpc	r19, r1
    1610:	41 f4       	brne	.+16     	; 0x1622 <malloc+0xea>
    1612:	2d b7       	in	r18, 0x3d	; 61
    1614:	3e b7       	in	r19, 0x3e	; 62
    1616:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    161a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    161e:	24 1b       	sub	r18, r20
    1620:	35 0b       	sbc	r19, r21
    1622:	e0 91 f2 02 	lds	r30, 0x02F2	; 0x8002f2 <__brkval>
    1626:	f0 91 f3 02 	lds	r31, 0x02F3	; 0x8002f3 <__brkval+0x1>
    162a:	e2 17       	cp	r30, r18
    162c:	f3 07       	cpc	r31, r19
    162e:	a0 f4       	brcc	.+40     	; 0x1658 <malloc+0x120>
    1630:	2e 1b       	sub	r18, r30
    1632:	3f 0b       	sbc	r19, r31
    1634:	28 17       	cp	r18, r24
    1636:	39 07       	cpc	r19, r25
    1638:	78 f0       	brcs	.+30     	; 0x1658 <malloc+0x120>
    163a:	ac 01       	movw	r20, r24
    163c:	4e 5f       	subi	r20, 0xFE	; 254
    163e:	5f 4f       	sbci	r21, 0xFF	; 255
    1640:	24 17       	cp	r18, r20
    1642:	35 07       	cpc	r19, r21
    1644:	48 f0       	brcs	.+18     	; 0x1658 <malloc+0x120>
    1646:	4e 0f       	add	r20, r30
    1648:	5f 1f       	adc	r21, r31
    164a:	50 93 f3 02 	sts	0x02F3, r21	; 0x8002f3 <__brkval+0x1>
    164e:	40 93 f2 02 	sts	0x02F2, r20	; 0x8002f2 <__brkval>
    1652:	81 93       	st	Z+, r24
    1654:	91 93       	st	Z+, r25
    1656:	02 c0       	rjmp	.+4      	; 0x165c <malloc+0x124>
    1658:	e0 e0       	ldi	r30, 0x00	; 0
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	cf 01       	movw	r24, r30
    165e:	df 91       	pop	r29
    1660:	cf 91       	pop	r28
    1662:	1f 91       	pop	r17
    1664:	0f 91       	pop	r16
    1666:	08 95       	ret

00001668 <free>:
    1668:	cf 93       	push	r28
    166a:	df 93       	push	r29
    166c:	00 97       	sbiw	r24, 0x00	; 0
    166e:	09 f4       	brne	.+2      	; 0x1672 <free+0xa>
    1670:	81 c0       	rjmp	.+258    	; 0x1774 <free+0x10c>
    1672:	fc 01       	movw	r30, r24
    1674:	32 97       	sbiw	r30, 0x02	; 2
    1676:	13 82       	std	Z+3, r1	; 0x03
    1678:	12 82       	std	Z+2, r1	; 0x02
    167a:	a0 91 f4 02 	lds	r26, 0x02F4	; 0x8002f4 <__flp>
    167e:	b0 91 f5 02 	lds	r27, 0x02F5	; 0x8002f5 <__flp+0x1>
    1682:	10 97       	sbiw	r26, 0x00	; 0
    1684:	81 f4       	brne	.+32     	; 0x16a6 <free+0x3e>
    1686:	20 81       	ld	r18, Z
    1688:	31 81       	ldd	r19, Z+1	; 0x01
    168a:	82 0f       	add	r24, r18
    168c:	93 1f       	adc	r25, r19
    168e:	20 91 f2 02 	lds	r18, 0x02F2	; 0x8002f2 <__brkval>
    1692:	30 91 f3 02 	lds	r19, 0x02F3	; 0x8002f3 <__brkval+0x1>
    1696:	28 17       	cp	r18, r24
    1698:	39 07       	cpc	r19, r25
    169a:	51 f5       	brne	.+84     	; 0x16f0 <free+0x88>
    169c:	f0 93 f3 02 	sts	0x02F3, r31	; 0x8002f3 <__brkval+0x1>
    16a0:	e0 93 f2 02 	sts	0x02F2, r30	; 0x8002f2 <__brkval>
    16a4:	67 c0       	rjmp	.+206    	; 0x1774 <free+0x10c>
    16a6:	ed 01       	movw	r28, r26
    16a8:	20 e0       	ldi	r18, 0x00	; 0
    16aa:	30 e0       	ldi	r19, 0x00	; 0
    16ac:	ce 17       	cp	r28, r30
    16ae:	df 07       	cpc	r29, r31
    16b0:	40 f4       	brcc	.+16     	; 0x16c2 <free+0x5a>
    16b2:	4a 81       	ldd	r20, Y+2	; 0x02
    16b4:	5b 81       	ldd	r21, Y+3	; 0x03
    16b6:	9e 01       	movw	r18, r28
    16b8:	41 15       	cp	r20, r1
    16ba:	51 05       	cpc	r21, r1
    16bc:	f1 f0       	breq	.+60     	; 0x16fa <free+0x92>
    16be:	ea 01       	movw	r28, r20
    16c0:	f5 cf       	rjmp	.-22     	; 0x16ac <free+0x44>
    16c2:	d3 83       	std	Z+3, r29	; 0x03
    16c4:	c2 83       	std	Z+2, r28	; 0x02
    16c6:	40 81       	ld	r20, Z
    16c8:	51 81       	ldd	r21, Z+1	; 0x01
    16ca:	84 0f       	add	r24, r20
    16cc:	95 1f       	adc	r25, r21
    16ce:	c8 17       	cp	r28, r24
    16d0:	d9 07       	cpc	r29, r25
    16d2:	59 f4       	brne	.+22     	; 0x16ea <free+0x82>
    16d4:	88 81       	ld	r24, Y
    16d6:	99 81       	ldd	r25, Y+1	; 0x01
    16d8:	84 0f       	add	r24, r20
    16da:	95 1f       	adc	r25, r21
    16dc:	02 96       	adiw	r24, 0x02	; 2
    16de:	91 83       	std	Z+1, r25	; 0x01
    16e0:	80 83       	st	Z, r24
    16e2:	8a 81       	ldd	r24, Y+2	; 0x02
    16e4:	9b 81       	ldd	r25, Y+3	; 0x03
    16e6:	93 83       	std	Z+3, r25	; 0x03
    16e8:	82 83       	std	Z+2, r24	; 0x02
    16ea:	21 15       	cp	r18, r1
    16ec:	31 05       	cpc	r19, r1
    16ee:	29 f4       	brne	.+10     	; 0x16fa <free+0x92>
    16f0:	f0 93 f5 02 	sts	0x02F5, r31	; 0x8002f5 <__flp+0x1>
    16f4:	e0 93 f4 02 	sts	0x02F4, r30	; 0x8002f4 <__flp>
    16f8:	3d c0       	rjmp	.+122    	; 0x1774 <free+0x10c>
    16fa:	e9 01       	movw	r28, r18
    16fc:	fb 83       	std	Y+3, r31	; 0x03
    16fe:	ea 83       	std	Y+2, r30	; 0x02
    1700:	49 91       	ld	r20, Y+
    1702:	59 91       	ld	r21, Y+
    1704:	c4 0f       	add	r28, r20
    1706:	d5 1f       	adc	r29, r21
    1708:	ec 17       	cp	r30, r28
    170a:	fd 07       	cpc	r31, r29
    170c:	61 f4       	brne	.+24     	; 0x1726 <free+0xbe>
    170e:	80 81       	ld	r24, Z
    1710:	91 81       	ldd	r25, Z+1	; 0x01
    1712:	84 0f       	add	r24, r20
    1714:	95 1f       	adc	r25, r21
    1716:	02 96       	adiw	r24, 0x02	; 2
    1718:	e9 01       	movw	r28, r18
    171a:	99 83       	std	Y+1, r25	; 0x01
    171c:	88 83       	st	Y, r24
    171e:	82 81       	ldd	r24, Z+2	; 0x02
    1720:	93 81       	ldd	r25, Z+3	; 0x03
    1722:	9b 83       	std	Y+3, r25	; 0x03
    1724:	8a 83       	std	Y+2, r24	; 0x02
    1726:	e0 e0       	ldi	r30, 0x00	; 0
    1728:	f0 e0       	ldi	r31, 0x00	; 0
    172a:	12 96       	adiw	r26, 0x02	; 2
    172c:	8d 91       	ld	r24, X+
    172e:	9c 91       	ld	r25, X
    1730:	13 97       	sbiw	r26, 0x03	; 3
    1732:	00 97       	sbiw	r24, 0x00	; 0
    1734:	19 f0       	breq	.+6      	; 0x173c <free+0xd4>
    1736:	fd 01       	movw	r30, r26
    1738:	dc 01       	movw	r26, r24
    173a:	f7 cf       	rjmp	.-18     	; 0x172a <free+0xc2>
    173c:	8d 91       	ld	r24, X+
    173e:	9c 91       	ld	r25, X
    1740:	11 97       	sbiw	r26, 0x01	; 1
    1742:	9d 01       	movw	r18, r26
    1744:	2e 5f       	subi	r18, 0xFE	; 254
    1746:	3f 4f       	sbci	r19, 0xFF	; 255
    1748:	82 0f       	add	r24, r18
    174a:	93 1f       	adc	r25, r19
    174c:	20 91 f2 02 	lds	r18, 0x02F2	; 0x8002f2 <__brkval>
    1750:	30 91 f3 02 	lds	r19, 0x02F3	; 0x8002f3 <__brkval+0x1>
    1754:	28 17       	cp	r18, r24
    1756:	39 07       	cpc	r19, r25
    1758:	69 f4       	brne	.+26     	; 0x1774 <free+0x10c>
    175a:	30 97       	sbiw	r30, 0x00	; 0
    175c:	29 f4       	brne	.+10     	; 0x1768 <free+0x100>
    175e:	10 92 f5 02 	sts	0x02F5, r1	; 0x8002f5 <__flp+0x1>
    1762:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <__flp>
    1766:	02 c0       	rjmp	.+4      	; 0x176c <free+0x104>
    1768:	13 82       	std	Z+3, r1	; 0x03
    176a:	12 82       	std	Z+2, r1	; 0x02
    176c:	b0 93 f3 02 	sts	0x02F3, r27	; 0x8002f3 <__brkval+0x1>
    1770:	a0 93 f2 02 	sts	0x02F2, r26	; 0x8002f2 <__brkval>
    1774:	df 91       	pop	r29
    1776:	cf 91       	pop	r28
    1778:	08 95       	ret

0000177a <strnlen_P>:
    177a:	fc 01       	movw	r30, r24
    177c:	05 90       	lpm	r0, Z+
    177e:	61 50       	subi	r22, 0x01	; 1
    1780:	70 40       	sbci	r23, 0x00	; 0
    1782:	01 10       	cpse	r0, r1
    1784:	d8 f7       	brcc	.-10     	; 0x177c <strnlen_P+0x2>
    1786:	80 95       	com	r24
    1788:	90 95       	com	r25
    178a:	8e 0f       	add	r24, r30
    178c:	9f 1f       	adc	r25, r31
    178e:	08 95       	ret

00001790 <memset>:
    1790:	dc 01       	movw	r26, r24
    1792:	01 c0       	rjmp	.+2      	; 0x1796 <memset+0x6>
    1794:	6d 93       	st	X+, r22
    1796:	41 50       	subi	r20, 0x01	; 1
    1798:	50 40       	sbci	r21, 0x00	; 0
    179a:	e0 f7       	brcc	.-8      	; 0x1794 <memset+0x4>
    179c:	08 95       	ret

0000179e <strnlen>:
    179e:	fc 01       	movw	r30, r24
    17a0:	61 50       	subi	r22, 0x01	; 1
    17a2:	70 40       	sbci	r23, 0x00	; 0
    17a4:	01 90       	ld	r0, Z+
    17a6:	01 10       	cpse	r0, r1
    17a8:	d8 f7       	brcc	.-10     	; 0x17a0 <strnlen+0x2>
    17aa:	80 95       	com	r24
    17ac:	90 95       	com	r25
    17ae:	8e 0f       	add	r24, r30
    17b0:	9f 1f       	adc	r25, r31
    17b2:	08 95       	ret

000017b4 <fputc>:
    17b4:	0f 93       	push	r16
    17b6:	1f 93       	push	r17
    17b8:	cf 93       	push	r28
    17ba:	df 93       	push	r29
    17bc:	fb 01       	movw	r30, r22
    17be:	23 81       	ldd	r18, Z+3	; 0x03
    17c0:	21 fd       	sbrc	r18, 1
    17c2:	03 c0       	rjmp	.+6      	; 0x17ca <fputc+0x16>
    17c4:	8f ef       	ldi	r24, 0xFF	; 255
    17c6:	9f ef       	ldi	r25, 0xFF	; 255
    17c8:	2c c0       	rjmp	.+88     	; 0x1822 <fputc+0x6e>
    17ca:	22 ff       	sbrs	r18, 2
    17cc:	16 c0       	rjmp	.+44     	; 0x17fa <fputc+0x46>
    17ce:	46 81       	ldd	r20, Z+6	; 0x06
    17d0:	57 81       	ldd	r21, Z+7	; 0x07
    17d2:	24 81       	ldd	r18, Z+4	; 0x04
    17d4:	35 81       	ldd	r19, Z+5	; 0x05
    17d6:	42 17       	cp	r20, r18
    17d8:	53 07       	cpc	r21, r19
    17da:	44 f4       	brge	.+16     	; 0x17ec <fputc+0x38>
    17dc:	a0 81       	ld	r26, Z
    17de:	b1 81       	ldd	r27, Z+1	; 0x01
    17e0:	9d 01       	movw	r18, r26
    17e2:	2f 5f       	subi	r18, 0xFF	; 255
    17e4:	3f 4f       	sbci	r19, 0xFF	; 255
    17e6:	31 83       	std	Z+1, r19	; 0x01
    17e8:	20 83       	st	Z, r18
    17ea:	8c 93       	st	X, r24
    17ec:	26 81       	ldd	r18, Z+6	; 0x06
    17ee:	37 81       	ldd	r19, Z+7	; 0x07
    17f0:	2f 5f       	subi	r18, 0xFF	; 255
    17f2:	3f 4f       	sbci	r19, 0xFF	; 255
    17f4:	37 83       	std	Z+7, r19	; 0x07
    17f6:	26 83       	std	Z+6, r18	; 0x06
    17f8:	14 c0       	rjmp	.+40     	; 0x1822 <fputc+0x6e>
    17fa:	8b 01       	movw	r16, r22
    17fc:	ec 01       	movw	r28, r24
    17fe:	fb 01       	movw	r30, r22
    1800:	00 84       	ldd	r0, Z+8	; 0x08
    1802:	f1 85       	ldd	r31, Z+9	; 0x09
    1804:	e0 2d       	mov	r30, r0
    1806:	09 95       	icall
    1808:	89 2b       	or	r24, r25
    180a:	e1 f6       	brne	.-72     	; 0x17c4 <fputc+0x10>
    180c:	d8 01       	movw	r26, r16
    180e:	16 96       	adiw	r26, 0x06	; 6
    1810:	8d 91       	ld	r24, X+
    1812:	9c 91       	ld	r25, X
    1814:	17 97       	sbiw	r26, 0x07	; 7
    1816:	01 96       	adiw	r24, 0x01	; 1
    1818:	17 96       	adiw	r26, 0x07	; 7
    181a:	9c 93       	st	X, r25
    181c:	8e 93       	st	-X, r24
    181e:	16 97       	sbiw	r26, 0x06	; 6
    1820:	ce 01       	movw	r24, r28
    1822:	df 91       	pop	r29
    1824:	cf 91       	pop	r28
    1826:	1f 91       	pop	r17
    1828:	0f 91       	pop	r16
    182a:	08 95       	ret

0000182c <__ultoa_invert>:
    182c:	fa 01       	movw	r30, r20
    182e:	aa 27       	eor	r26, r26
    1830:	28 30       	cpi	r18, 0x08	; 8
    1832:	51 f1       	breq	.+84     	; 0x1888 <__ultoa_invert+0x5c>
    1834:	20 31       	cpi	r18, 0x10	; 16
    1836:	81 f1       	breq	.+96     	; 0x1898 <__ultoa_invert+0x6c>
    1838:	e8 94       	clt
    183a:	6f 93       	push	r22
    183c:	6e 7f       	andi	r22, 0xFE	; 254
    183e:	6e 5f       	subi	r22, 0xFE	; 254
    1840:	7f 4f       	sbci	r23, 0xFF	; 255
    1842:	8f 4f       	sbci	r24, 0xFF	; 255
    1844:	9f 4f       	sbci	r25, 0xFF	; 255
    1846:	af 4f       	sbci	r26, 0xFF	; 255
    1848:	b1 e0       	ldi	r27, 0x01	; 1
    184a:	3e d0       	rcall	.+124    	; 0x18c8 <__ultoa_invert+0x9c>
    184c:	b4 e0       	ldi	r27, 0x04	; 4
    184e:	3c d0       	rcall	.+120    	; 0x18c8 <__ultoa_invert+0x9c>
    1850:	67 0f       	add	r22, r23
    1852:	78 1f       	adc	r23, r24
    1854:	89 1f       	adc	r24, r25
    1856:	9a 1f       	adc	r25, r26
    1858:	a1 1d       	adc	r26, r1
    185a:	68 0f       	add	r22, r24
    185c:	79 1f       	adc	r23, r25
    185e:	8a 1f       	adc	r24, r26
    1860:	91 1d       	adc	r25, r1
    1862:	a1 1d       	adc	r26, r1
    1864:	6a 0f       	add	r22, r26
    1866:	71 1d       	adc	r23, r1
    1868:	81 1d       	adc	r24, r1
    186a:	91 1d       	adc	r25, r1
    186c:	a1 1d       	adc	r26, r1
    186e:	20 d0       	rcall	.+64     	; 0x18b0 <__ultoa_invert+0x84>
    1870:	09 f4       	brne	.+2      	; 0x1874 <__ultoa_invert+0x48>
    1872:	68 94       	set
    1874:	3f 91       	pop	r19
    1876:	2a e0       	ldi	r18, 0x0A	; 10
    1878:	26 9f       	mul	r18, r22
    187a:	11 24       	eor	r1, r1
    187c:	30 19       	sub	r19, r0
    187e:	30 5d       	subi	r19, 0xD0	; 208
    1880:	31 93       	st	Z+, r19
    1882:	de f6       	brtc	.-74     	; 0x183a <__ultoa_invert+0xe>
    1884:	cf 01       	movw	r24, r30
    1886:	08 95       	ret
    1888:	46 2f       	mov	r20, r22
    188a:	47 70       	andi	r20, 0x07	; 7
    188c:	40 5d       	subi	r20, 0xD0	; 208
    188e:	41 93       	st	Z+, r20
    1890:	b3 e0       	ldi	r27, 0x03	; 3
    1892:	0f d0       	rcall	.+30     	; 0x18b2 <__ultoa_invert+0x86>
    1894:	c9 f7       	brne	.-14     	; 0x1888 <__ultoa_invert+0x5c>
    1896:	f6 cf       	rjmp	.-20     	; 0x1884 <__ultoa_invert+0x58>
    1898:	46 2f       	mov	r20, r22
    189a:	4f 70       	andi	r20, 0x0F	; 15
    189c:	40 5d       	subi	r20, 0xD0	; 208
    189e:	4a 33       	cpi	r20, 0x3A	; 58
    18a0:	18 f0       	brcs	.+6      	; 0x18a8 <__ultoa_invert+0x7c>
    18a2:	49 5d       	subi	r20, 0xD9	; 217
    18a4:	31 fd       	sbrc	r19, 1
    18a6:	40 52       	subi	r20, 0x20	; 32
    18a8:	41 93       	st	Z+, r20
    18aa:	02 d0       	rcall	.+4      	; 0x18b0 <__ultoa_invert+0x84>
    18ac:	a9 f7       	brne	.-22     	; 0x1898 <__ultoa_invert+0x6c>
    18ae:	ea cf       	rjmp	.-44     	; 0x1884 <__ultoa_invert+0x58>
    18b0:	b4 e0       	ldi	r27, 0x04	; 4
    18b2:	a6 95       	lsr	r26
    18b4:	97 95       	ror	r25
    18b6:	87 95       	ror	r24
    18b8:	77 95       	ror	r23
    18ba:	67 95       	ror	r22
    18bc:	ba 95       	dec	r27
    18be:	c9 f7       	brne	.-14     	; 0x18b2 <__ultoa_invert+0x86>
    18c0:	00 97       	sbiw	r24, 0x00	; 0
    18c2:	61 05       	cpc	r22, r1
    18c4:	71 05       	cpc	r23, r1
    18c6:	08 95       	ret
    18c8:	9b 01       	movw	r18, r22
    18ca:	ac 01       	movw	r20, r24
    18cc:	0a 2e       	mov	r0, r26
    18ce:	06 94       	lsr	r0
    18d0:	57 95       	ror	r21
    18d2:	47 95       	ror	r20
    18d4:	37 95       	ror	r19
    18d6:	27 95       	ror	r18
    18d8:	ba 95       	dec	r27
    18da:	c9 f7       	brne	.-14     	; 0x18ce <__ultoa_invert+0xa2>
    18dc:	62 0f       	add	r22, r18
    18de:	73 1f       	adc	r23, r19
    18e0:	84 1f       	adc	r24, r20
    18e2:	95 1f       	adc	r25, r21
    18e4:	a0 1d       	adc	r26, r0
    18e6:	08 95       	ret

000018e8 <__prologue_saves__>:
    18e8:	2f 92       	push	r2
    18ea:	3f 92       	push	r3
    18ec:	4f 92       	push	r4
    18ee:	5f 92       	push	r5
    18f0:	6f 92       	push	r6
    18f2:	7f 92       	push	r7
    18f4:	8f 92       	push	r8
    18f6:	9f 92       	push	r9
    18f8:	af 92       	push	r10
    18fa:	bf 92       	push	r11
    18fc:	cf 92       	push	r12
    18fe:	df 92       	push	r13
    1900:	ef 92       	push	r14
    1902:	ff 92       	push	r15
    1904:	0f 93       	push	r16
    1906:	1f 93       	push	r17
    1908:	cf 93       	push	r28
    190a:	df 93       	push	r29
    190c:	cd b7       	in	r28, 0x3d	; 61
    190e:	de b7       	in	r29, 0x3e	; 62
    1910:	ca 1b       	sub	r28, r26
    1912:	db 0b       	sbc	r29, r27
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	f8 94       	cli
    1918:	de bf       	out	0x3e, r29	; 62
    191a:	0f be       	out	0x3f, r0	; 63
    191c:	cd bf       	out	0x3d, r28	; 61
    191e:	09 94       	ijmp

00001920 <__epilogue_restores__>:
    1920:	2a 88       	ldd	r2, Y+18	; 0x12
    1922:	39 88       	ldd	r3, Y+17	; 0x11
    1924:	48 88       	ldd	r4, Y+16	; 0x10
    1926:	5f 84       	ldd	r5, Y+15	; 0x0f
    1928:	6e 84       	ldd	r6, Y+14	; 0x0e
    192a:	7d 84       	ldd	r7, Y+13	; 0x0d
    192c:	8c 84       	ldd	r8, Y+12	; 0x0c
    192e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1930:	aa 84       	ldd	r10, Y+10	; 0x0a
    1932:	b9 84       	ldd	r11, Y+9	; 0x09
    1934:	c8 84       	ldd	r12, Y+8	; 0x08
    1936:	df 80       	ldd	r13, Y+7	; 0x07
    1938:	ee 80       	ldd	r14, Y+6	; 0x06
    193a:	fd 80       	ldd	r15, Y+5	; 0x05
    193c:	0c 81       	ldd	r16, Y+4	; 0x04
    193e:	1b 81       	ldd	r17, Y+3	; 0x03
    1940:	aa 81       	ldd	r26, Y+2	; 0x02
    1942:	b9 81       	ldd	r27, Y+1	; 0x01
    1944:	ce 0f       	add	r28, r30
    1946:	d1 1d       	adc	r29, r1
    1948:	0f b6       	in	r0, 0x3f	; 63
    194a:	f8 94       	cli
    194c:	de bf       	out	0x3e, r29	; 62
    194e:	0f be       	out	0x3f, r0	; 63
    1950:	cd bf       	out	0x3d, r28	; 61
    1952:	ed 01       	movw	r28, r26
    1954:	08 95       	ret

00001956 <_exit>:
    1956:	f8 94       	cli

00001958 <__stop_program>:
    1958:	ff cf       	rjmp	.-2      	; 0x1958 <__stop_program>
