
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000190  00800100  000018fa  0000198e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000043  00800290  00800290  00001b1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000026eb  00000000  00000000  00001de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001111  00000000  00000000  000044cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014af  00000000  00000000  000055dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000065c  00000000  00000000  00006a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a4c  00000000  00000000  000070e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000013a3  00000000  00000000  00007b34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00008ed7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 9a 03 	jmp	0x734	; 0x734 <__vector_1>
       8:	0c 94 83 03 	jmp	0x706	; 0x706 <__vector_2>
       c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_15>
      40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	12 e0       	ldi	r17, 0x02	; 2
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	ea ef       	ldi	r30, 0xFA	; 250
      84:	f8 e1       	ldi	r31, 0x18	; 24
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a0 39       	cpi	r26, 0x90	; 144
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	22 e0       	ldi	r18, 0x02	; 2
      94:	a0 e9       	ldi	r26, 0x90	; 144
      96:	b2 e0       	ldi	r27, 0x02	; 2
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a3 3d       	cpi	r26, 0xD3	; 211
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 96 04 	call	0x92c	; 0x92c <main>
      a6:	0c 94 7b 0c 	jmp	0x18f6	; 0x18f6 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_15>:
float negYfactor;
float negYadd;

volatile char ADC_data;

ISR (TIMER1_OVF_vect){
      ae:	1f 92       	push	r1
      b0:	0f 92       	push	r0
      b2:	0f b6       	in	r0, 0x3f	; 63
      b4:	0f 92       	push	r0
      b6:	11 24       	eor	r1, r1
      b8:	2f 93       	push	r18
      ba:	3f 93       	push	r19
      bc:	4f 93       	push	r20
      be:	5f 93       	push	r21
      c0:	6f 93       	push	r22
      c2:	7f 93       	push	r23
      c4:	8f 93       	push	r24
      c6:	9f 93       	push	r25
      c8:	af 93       	push	r26
      ca:	bf 93       	push	r27
      cc:	cf 93       	push	r28
      ce:	df 93       	push	r29
      d0:	ef 93       	push	r30
      d2:	ff 93       	push	r31
	ADC[0x00] = 0x00;
      d4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
      d8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
      dc:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      de:	89 ef       	ldi	r24, 0xF9	; 249
      e0:	90 e0       	ldi	r25, 0x00	; 0
      e2:	01 97       	sbiw	r24, 0x01	; 1
      e4:	f1 f7       	brne	.-4      	; 0xe2 <__vector_15+0x34>
      e6:	00 c0       	rjmp	.+0      	; 0xe8 <__vector_15+0x3a>
      e8:	00 00       	nop
	_delay_ms(1);
	joyy=ADC[0x00];
      ea:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
      ee:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
      f2:	80 81       	ld	r24, Z
      f4:	90 e0       	ldi	r25, 0x00	; 0
      f6:	90 93 a8 02 	sts	0x02A8, r25	; 0x8002a8 <joyy+0x1>
      fa:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <joyy>
	joyx=ADC[0x00];
      fe:	80 81       	ld	r24, Z
     100:	90 e0       	ldi	r25, 0x00	; 0
     102:	90 93 c7 02 	sts	0x02C7, r25	; 0x8002c7 <joyx+0x1>
     106:	80 93 c6 02 	sts	0x02C6, r24	; 0x8002c6 <joyx>
	sliderRight = ADC[0x00];
     10a:	80 81       	ld	r24, Z
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	90 93 96 02 	sts	0x0296, r25	; 0x800296 <sliderRight+0x1>
     112:	80 93 95 02 	sts	0x0295, r24	; 0x800295 <sliderRight>
	sliderLeft = ADC[0x00];
     116:	80 81       	ld	r24, Z
     118:	90 e0       	ldi	r25, 0x00	; 0
     11a:	90 93 a4 02 	sts	0x02A4, r25	; 0x8002a4 <sliderLeft+0x1>
     11e:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <sliderLeft>
	
	button1State = 0 != (PIND & (1<<PD2)); 
     122:	80 b3       	in	r24, 0x10	; 16
     124:	82 fb       	bst	r24, 2
     126:	88 27       	eor	r24, r24
     128:	80 f9       	bld	r24, 0
     12a:	80 93 c0 02 	sts	0x02C0, r24	; 0x8002c0 <button1State>
	button2State = 0 != (PIND & (1<<PD3));
     12e:	80 b3       	in	r24, 0x10	; 16
     130:	83 fb       	bst	r24, 3
     132:	88 27       	eor	r24, r24
     134:	80 f9       	bld	r24, 0
     136:	80 93 a9 02 	sts	0x02A9, r24	; 0x8002a9 <button2State>
	button3State = 1 != (0 != (PIND & (1<<PD5))); 
     13a:	80 b3       	in	r24, 0x10	; 16
     13c:	82 95       	swap	r24
     13e:	86 95       	lsr	r24
     140:	87 70       	andi	r24, 0x07	; 7
     142:	91 e0       	ldi	r25, 0x01	; 1
     144:	89 27       	eor	r24, r25
     146:	81 70       	andi	r24, 0x01	; 1
     148:	80 93 c8 02 	sts	0x02C8, r24	; 0x8002c8 <button3State>
	
	if (joyy < middleyjoyy)
     14c:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <joyy>
     150:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <joyy+0x1>
     154:	c0 91 9b 02 	lds	r28, 0x029B	; 0x80029b <middleyjoyy>
     158:	d0 91 9c 02 	lds	r29, 0x029C	; 0x80029c <middleyjoyy+0x1>
     15c:	8c 17       	cp	r24, r28
     15e:	9d 07       	cpc	r25, r29
     160:	54 f5       	brge	.+84     	; 0x1b6 <__vector_15+0x108>
	{
		joyyPercent = joyy*negYfactor/100+negYadd;
     162:	60 91 a7 02 	lds	r22, 0x02A7	; 0x8002a7 <joyy>
     166:	70 91 a8 02 	lds	r23, 0x02A8	; 0x8002a8 <joyy+0x1>
     16a:	07 2e       	mov	r0, r23
     16c:	00 0c       	add	r0, r0
     16e:	88 0b       	sbc	r24, r24
     170:	99 0b       	sbc	r25, r25
     172:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     176:	20 91 b8 02 	lds	r18, 0x02B8	; 0x8002b8 <negYfactor>
     17a:	30 91 b9 02 	lds	r19, 0x02B9	; 0x8002b9 <negYfactor+0x1>
     17e:	40 91 ba 02 	lds	r20, 0x02BA	; 0x8002ba <negYfactor+0x2>
     182:	50 91 bb 02 	lds	r21, 0x02BB	; 0x8002bb <negYfactor+0x3>
     186:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	48 ec       	ldi	r20, 0xC8	; 200
     190:	52 e4       	ldi	r21, 0x42	; 66
     192:	0e 94 13 06 	call	0xc26	; 0xc26 <__divsf3>
     196:	20 91 97 02 	lds	r18, 0x0297	; 0x800297 <negYadd>
     19a:	30 91 98 02 	lds	r19, 0x0298	; 0x800298 <negYadd+0x1>
     19e:	40 91 99 02 	lds	r20, 0x0299	; 0x800299 <negYadd+0x2>
     1a2:	50 91 9a 02 	lds	r21, 0x029A	; 0x80029a <negYadd+0x3>
     1a6:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__addsf3>
     1aa:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     1ae:	70 93 a6 02 	sts	0x02A6, r23	; 0x8002a6 <joyyPercent+0x1>
     1b2:	60 93 a5 02 	sts	0x02A5, r22	; 0x8002a5 <joyyPercent>
	}
	if (joyy >= middleyjoyy)
     1b6:	80 91 a7 02 	lds	r24, 0x02A7	; 0x8002a7 <joyy>
     1ba:	90 91 a8 02 	lds	r25, 0x02A8	; 0x8002a8 <joyy+0x1>
     1be:	8c 17       	cp	r24, r28
     1c0:	9d 07       	cpc	r25, r29
     1c2:	54 f1       	brlt	.+84     	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
	{
		joyyPercent = joyy*posYfactor/100+posYadd;
     1c4:	60 91 a7 02 	lds	r22, 0x02A7	; 0x8002a7 <joyy>
     1c8:	70 91 a8 02 	lds	r23, 0x02A8	; 0x8002a8 <joyy+0x1>
     1cc:	07 2e       	mov	r0, r23
     1ce:	00 0c       	add	r0, r0
     1d0:	88 0b       	sbc	r24, r24
     1d2:	99 0b       	sbc	r25, r25
     1d4:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     1d8:	20 91 ae 02 	lds	r18, 0x02AE	; 0x8002ae <posYfactor>
     1dc:	30 91 af 02 	lds	r19, 0x02AF	; 0x8002af <posYfactor+0x1>
     1e0:	40 91 b0 02 	lds	r20, 0x02B0	; 0x8002b0 <posYfactor+0x2>
     1e4:	50 91 b1 02 	lds	r21, 0x02B1	; 0x8002b1 <posYfactor+0x3>
     1e8:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     1ec:	20 e0       	ldi	r18, 0x00	; 0
     1ee:	30 e0       	ldi	r19, 0x00	; 0
     1f0:	48 ec       	ldi	r20, 0xC8	; 200
     1f2:	52 e4       	ldi	r21, 0x42	; 66
     1f4:	0e 94 13 06 	call	0xc26	; 0xc26 <__divsf3>
     1f8:	20 91 9f 02 	lds	r18, 0x029F	; 0x80029f <posYadd>
     1fc:	30 91 a0 02 	lds	r19, 0x02A0	; 0x8002a0 <posYadd+0x1>
     200:	40 91 a1 02 	lds	r20, 0x02A1	; 0x8002a1 <posYadd+0x2>
     204:	50 91 a2 02 	lds	r21, 0x02A2	; 0x8002a2 <posYadd+0x3>
     208:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__addsf3>
     20c:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     210:	70 93 a6 02 	sts	0x02A6, r23	; 0x8002a6 <joyyPercent+0x1>
     214:	60 93 a5 02 	sts	0x02A5, r22	; 0x8002a5 <joyyPercent>
	}
	if (joyx < middleyjoyx)
     218:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <joyx>
     21c:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <joyx+0x1>
     220:	c0 91 b6 02 	lds	r28, 0x02B6	; 0x8002b6 <middleyjoyx>
     224:	d0 91 b7 02 	lds	r29, 0x02B7	; 0x8002b7 <middleyjoyx+0x1>
     228:	8c 17       	cp	r24, r28
     22a:	9d 07       	cpc	r25, r29
     22c:	54 f5       	brge	.+84     	; 0x282 <__EEPROM_REGION_LENGTH__+0x82>
	{
		joyxPercent = joyx*negXfactor/100+negXadd;
     22e:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <joyx>
     232:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <joyx+0x1>
     236:	07 2e       	mov	r0, r23
     238:	00 0c       	add	r0, r0
     23a:	88 0b       	sbc	r24, r24
     23c:	99 0b       	sbc	r25, r25
     23e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     242:	20 91 bc 02 	lds	r18, 0x02BC	; 0x8002bc <negXfactor>
     246:	30 91 bd 02 	lds	r19, 0x02BD	; 0x8002bd <negXfactor+0x1>
     24a:	40 91 be 02 	lds	r20, 0x02BE	; 0x8002be <negXfactor+0x2>
     24e:	50 91 bf 02 	lds	r21, 0x02BF	; 0x8002bf <negXfactor+0x3>
     252:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     256:	20 e0       	ldi	r18, 0x00	; 0
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	48 ec       	ldi	r20, 0xC8	; 200
     25c:	52 e4       	ldi	r21, 0x42	; 66
     25e:	0e 94 13 06 	call	0xc26	; 0xc26 <__divsf3>
     262:	20 91 b2 02 	lds	r18, 0x02B2	; 0x8002b2 <negXadd>
     266:	30 91 b3 02 	lds	r19, 0x02B3	; 0x8002b3 <negXadd+0x1>
     26a:	40 91 b4 02 	lds	r20, 0x02B4	; 0x8002b4 <negXadd+0x2>
     26e:	50 91 b5 02 	lds	r21, 0x02B5	; 0x8002b5 <negXadd+0x3>
     272:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__addsf3>
     276:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     27a:	70 93 9e 02 	sts	0x029E, r23	; 0x80029e <joyxPercent+0x1>
     27e:	60 93 9d 02 	sts	0x029D, r22	; 0x80029d <joyxPercent>
	}
	if (joyx >= middleyjoyx)
     282:	80 91 c6 02 	lds	r24, 0x02C6	; 0x8002c6 <joyx>
     286:	90 91 c7 02 	lds	r25, 0x02C7	; 0x8002c7 <joyx+0x1>
     28a:	8c 17       	cp	r24, r28
     28c:	9d 07       	cpc	r25, r29
     28e:	54 f1       	brlt	.+84     	; 0x2e4 <__EEPROM_REGION_LENGTH__+0xe4>
	{
		joyxPercent = joyx*posXfactor/100+posXadd;
     290:	60 91 c6 02 	lds	r22, 0x02C6	; 0x8002c6 <joyx>
     294:	70 91 c7 02 	lds	r23, 0x02C7	; 0x8002c7 <joyx+0x1>
     298:	07 2e       	mov	r0, r23
     29a:	00 0c       	add	r0, r0
     29c:	88 0b       	sbc	r24, r24
     29e:	99 0b       	sbc	r25, r25
     2a0:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     2a4:	20 91 c2 02 	lds	r18, 0x02C2	; 0x8002c2 <posXfactor>
     2a8:	30 91 c3 02 	lds	r19, 0x02C3	; 0x8002c3 <posXfactor+0x1>
     2ac:	40 91 c4 02 	lds	r20, 0x02C4	; 0x8002c4 <posXfactor+0x2>
     2b0:	50 91 c5 02 	lds	r21, 0x02C5	; 0x8002c5 <posXfactor+0x3>
     2b4:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	48 ec       	ldi	r20, 0xC8	; 200
     2be:	52 e4       	ldi	r21, 0x42	; 66
     2c0:	0e 94 13 06 	call	0xc26	; 0xc26 <__divsf3>
     2c4:	20 91 aa 02 	lds	r18, 0x02AA	; 0x8002aa <posXadd>
     2c8:	30 91 ab 02 	lds	r19, 0x02AB	; 0x8002ab <posXadd+0x1>
     2cc:	40 91 ac 02 	lds	r20, 0x02AC	; 0x8002ac <posXadd+0x2>
     2d0:	50 91 ad 02 	lds	r21, 0x02AD	; 0x8002ad <posXadd+0x3>
     2d4:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__addsf3>
     2d8:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     2dc:	70 93 9e 02 	sts	0x029E, r23	; 0x80029e <joyxPercent+0x1>
     2e0:	60 93 9d 02 	sts	0x029D, r22	; 0x80029d <joyxPercent>
	}	
	if (joyxPercent > -5 && joyxPercent < 5)
     2e4:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <joyxPercent>
     2e8:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <joyxPercent+0x1>
     2ec:	8c 3f       	cpi	r24, 0xFC	; 252
     2ee:	9f 4f       	sbci	r25, 0xFF	; 255
     2f0:	54 f0       	brlt	.+20     	; 0x306 <__EEPROM_REGION_LENGTH__+0x106>
     2f2:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <joyxPercent>
     2f6:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <joyxPercent+0x1>
     2fa:	05 97       	sbiw	r24, 0x05	; 5
     2fc:	24 f4       	brge	.+8      	; 0x306 <__EEPROM_REGION_LENGTH__+0x106>
	{
		joyxPercent = 0;
     2fe:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <joyxPercent+0x1>
     302:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <joyxPercent>
	}
	if (joyyPercent > -5 && joyyPercent < 5)
     306:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <joyyPercent>
     30a:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <joyyPercent+0x1>
     30e:	8c 3f       	cpi	r24, 0xFC	; 252
     310:	9f 4f       	sbci	r25, 0xFF	; 255
     312:	54 f0       	brlt	.+20     	; 0x328 <__EEPROM_REGION_LENGTH__+0x128>
     314:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <joyyPercent>
     318:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <joyyPercent+0x1>
     31c:	05 97       	sbiw	r24, 0x05	; 5
     31e:	24 f4       	brge	.+8      	; 0x328 <__EEPROM_REGION_LENGTH__+0x128>
	{
		joyyPercent = 0;
     320:	10 92 a6 02 	sts	0x02A6, r1	; 0x8002a6 <joyyPercent+0x1>
     324:	10 92 a5 02 	sts	0x02A5, r1	; 0x8002a5 <joyyPercent>
	}

}
     328:	ff 91       	pop	r31
     32a:	ef 91       	pop	r30
     32c:	df 91       	pop	r29
     32e:	cf 91       	pop	r28
     330:	bf 91       	pop	r27
     332:	af 91       	pop	r26
     334:	9f 91       	pop	r25
     336:	8f 91       	pop	r24
     338:	7f 91       	pop	r23
     33a:	6f 91       	pop	r22
     33c:	5f 91       	pop	r21
     33e:	4f 91       	pop	r20
     340:	3f 91       	pop	r19
     342:	2f 91       	pop	r18
     344:	0f 90       	pop	r0
     346:	0f be       	out	0x3f, r0	; 63
     348:	0f 90       	pop	r0
     34a:	1f 90       	pop	r1
     34c:	18 95       	reti

0000034e <adc_init>:





void adc_init(){
     34e:	6f 92       	push	r6
     350:	7f 92       	push	r7
     352:	8f 92       	push	r8
     354:	9f 92       	push	r9
     356:	af 92       	push	r10
     358:	bf 92       	push	r11
     35a:	cf 92       	push	r12
     35c:	df 92       	push	r13
     35e:	ef 92       	push	r14
     360:	ff 92       	push	r15
     362:	0f 93       	push	r16
     364:	1f 93       	push	r17
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
    TCCR3A = (1 << WGM30) | (1 << WGM31) | (1 << COM3A0);
     36a:	83 e4       	ldi	r24, 0x43	; 67
     36c:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
    TCCR3B = (1 << CS30) | (1 << WGM33);
     370:	81 e1       	ldi	r24, 0x11	; 17
     372:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
    OCR3A = 2; // Define the frequency of the generated PWM signal
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     37e:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
     382:	81 b3       	in	r24, 0x11	; 17
     384:	80 61       	ori	r24, 0x10	; 16
     386:	81 bb       	out	0x11, r24	; 17
     388:	83 ec       	ldi	r24, 0xC3	; 195
     38a:	99 e0       	ldi	r25, 0x09	; 9
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	f1 f7       	brne	.-4      	; 0x38c <adc_init+0x3e>
     390:	00 c0       	rjmp	.+0      	; 0x392 <adc_init+0x44>
     392:	00 00       	nop
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     394:	20 e0       	ldi	r18, 0x00	; 0
     396:	30 e0       	ldi	r19, 0x00	; 0
    OCR3A = 2; // Define the frequency of the generated PWM signal
    DDRD |= (1 << DDD4); // Configure PD4 as PWM output
	
	
	_delay_ms(10);
	int times = 0;
     398:	c0 e0       	ldi	r28, 0x00	; 0
     39a:	d0 e0       	ldi	r29, 0x00	; 0
	int ignore;
	for (int i = 0; i<100; i++)
     39c:	30 c0       	rjmp	.+96     	; 0x3fe <adc_init+0xb0>
	{
		ADC[0x00] = 0x00;
     39e:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     3a2:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     3a6:	10 82       	st	Z, r1
     3a8:	89 ef       	ldi	r24, 0xF9	; 249
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <adc_init+0x5e>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <adc_init+0x64>
     3b2:	00 00       	nop
		_delay_ms(1);
		intermittentx = intermittentx + ADC[0x00];
     3b4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     3b8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     3bc:	40 81       	ld	r20, Z
     3be:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
     3c2:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <__data_end+0x1>
     3c6:	84 0f       	add	r24, r20
     3c8:	91 1d       	adc	r25, r1
     3ca:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <__data_end+0x1>
     3ce:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <__data_end>
		intermittenty = intermittenty + ADC[0x00];
     3d2:	40 81       	ld	r20, Z
     3d4:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <intermittenty>
     3d8:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <intermittenty+0x1>
     3dc:	84 0f       	add	r24, r20
     3de:	91 1d       	adc	r25, r1
     3e0:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <intermittenty+0x1>
     3e4:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <intermittenty>
		ignore = ADC[0x00];
     3e8:	80 81       	ld	r24, Z
		ignore = ADC[0x00];
     3ea:	80 81       	ld	r24, Z
     3ec:	89 ef       	ldi	r24, 0xF9	; 249
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	01 97       	sbiw	r24, 0x01	; 1
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <adc_init+0xa2>
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <adc_init+0xa8>
     3f6:	00 00       	nop
		_delay_ms(1);
		times++;
     3f8:	21 96       	adiw	r28, 0x01	; 1
	
	
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     3fa:	2f 5f       	subi	r18, 0xFF	; 255
     3fc:	3f 4f       	sbci	r19, 0xFF	; 255
     3fe:	24 36       	cpi	r18, 0x64	; 100
     400:	31 05       	cpc	r19, r1
     402:	6c f2       	brlt	.-102    	; 0x39e <adc_init+0x50>
		ignore = ADC[0x00];
		ignore = ADC[0x00];
		_delay_ms(1);
		times++;
	}
	middleyjoyx = intermittentx/times;
     404:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
     408:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <__data_end+0x1>
     40c:	be 01       	movw	r22, r28
     40e:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     412:	26 2f       	mov	r18, r22
     414:	37 2f       	mov	r19, r23
     416:	60 93 b6 02 	sts	0x02B6, r22	; 0x8002b6 <middleyjoyx>
     41a:	70 93 b7 02 	sts	0x02B7, r23	; 0x8002b7 <middleyjoyx+0x1>
	middleyjoyy = intermittenty/times;
     41e:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <intermittenty>
     422:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <intermittenty+0x1>
     426:	be 01       	movw	r22, r28
     428:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     42c:	60 93 9b 02 	sts	0x029B, r22	; 0x80029b <middleyjoyy>
     430:	70 93 9c 02 	sts	0x029C, r23	; 0x80029c <middleyjoyy+0x1>
	printf("\n\n\r %d %d \n", middleyjoyx, middleyjoyy);
     434:	7f 93       	push	r23
     436:	6f 93       	push	r22
     438:	3f 93       	push	r19
     43a:	2f 93       	push	r18
     43c:	8a e0       	ldi	r24, 0x0A	; 10
     43e:	91 e0       	ldi	r25, 0x01	; 1
     440:	9f 93       	push	r25
     442:	8f 93       	push	r24
     444:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	
	posXfactor = (10000)/(255-middleyjoyx);
     448:	00 91 b6 02 	lds	r16, 0x02B6	; 0x8002b6 <middleyjoyx>
     44c:	10 91 b7 02 	lds	r17, 0x02B7	; 0x8002b7 <middleyjoyx+0x1>
     450:	66 24       	eor	r6, r6
     452:	6a 94       	dec	r6
     454:	71 2c       	mov	r7, r1
     456:	73 01       	movw	r14, r6
     458:	e0 1a       	sub	r14, r16
     45a:	f1 0a       	sbc	r15, r17
     45c:	c0 e1       	ldi	r28, 0x10	; 16
     45e:	d7 e2       	ldi	r29, 0x27	; 39
     460:	ce 01       	movw	r24, r28
     462:	b7 01       	movw	r22, r14
     464:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     468:	07 2e       	mov	r0, r23
     46a:	00 0c       	add	r0, r0
     46c:	88 0b       	sbc	r24, r24
     46e:	99 0b       	sbc	r25, r25
     470:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     474:	4b 01       	movw	r8, r22
     476:	5c 01       	movw	r10, r24
     478:	60 93 c2 02 	sts	0x02C2, r22	; 0x8002c2 <posXfactor>
     47c:	70 93 c3 02 	sts	0x02C3, r23	; 0x8002c3 <posXfactor+0x1>
     480:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <posXfactor+0x2>
     484:	90 93 c5 02 	sts	0x02C5, r25	; 0x8002c5 <posXfactor+0x3>
	posXadd = -1*(100*middleyjoyx)/(255-middleyjoyx);
     488:	2c e9       	ldi	r18, 0x9C	; 156
     48a:	20 03       	mulsu	r18, r16
     48c:	60 01       	movw	r12, r0
     48e:	21 9f       	mul	r18, r17
     490:	d0 0c       	add	r13, r0
     492:	11 24       	eor	r1, r1
     494:	c6 01       	movw	r24, r12
     496:	b7 01       	movw	r22, r14
     498:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     49c:	7b 01       	movw	r14, r22
     49e:	07 2e       	mov	r0, r23
     4a0:	00 0c       	add	r0, r0
     4a2:	88 0b       	sbc	r24, r24
     4a4:	99 0b       	sbc	r25, r25
     4a6:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     4aa:	60 93 aa 02 	sts	0x02AA, r22	; 0x8002aa <posXadd>
     4ae:	70 93 ab 02 	sts	0x02AB, r23	; 0x8002ab <posXadd+0x1>
     4b2:	80 93 ac 02 	sts	0x02AC, r24	; 0x8002ac <posXadd+0x2>
     4b6:	90 93 ad 02 	sts	0x02AD, r25	; 0x8002ad <posXadd+0x3>
	negXfactor = (10000/middleyjoyx);
     4ba:	ce 01       	movw	r24, r28
     4bc:	b8 01       	movw	r22, r16
     4be:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     4c2:	07 2e       	mov	r0, r23
     4c4:	00 0c       	add	r0, r0
     4c6:	88 0b       	sbc	r24, r24
     4c8:	99 0b       	sbc	r25, r25
     4ca:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     4ce:	60 93 bc 02 	sts	0x02BC, r22	; 0x8002bc <negXfactor>
     4d2:	70 93 bd 02 	sts	0x02BD, r23	; 0x8002bd <negXfactor+0x1>
     4d6:	80 93 be 02 	sts	0x02BE, r24	; 0x8002be <negXfactor+0x2>
     4da:	90 93 bf 02 	sts	0x02BF, r25	; 0x8002bf <negXfactor+0x3>
	negXadd = -1*(middleyjoyx*100)/(middleyjoyx);
     4de:	c6 01       	movw	r24, r12
     4e0:	b8 01       	movw	r22, r16
     4e2:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     4e6:	07 2e       	mov	r0, r23
     4e8:	00 0c       	add	r0, r0
     4ea:	88 0b       	sbc	r24, r24
     4ec:	99 0b       	sbc	r25, r25
     4ee:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     4f2:	60 93 b2 02 	sts	0x02B2, r22	; 0x8002b2 <negXadd>
     4f6:	70 93 b3 02 	sts	0x02B3, r23	; 0x8002b3 <negXadd+0x1>
     4fa:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <negXadd+0x2>
     4fe:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <negXadd+0x3>
	posYfactor = (10000)/(255-middleyjoyy);
     502:	00 91 9b 02 	lds	r16, 0x029B	; 0x80029b <middleyjoyy>
     506:	10 91 9c 02 	lds	r17, 0x029C	; 0x80029c <middleyjoyy+0x1>
     50a:	60 1a       	sub	r6, r16
     50c:	71 0a       	sbc	r7, r17
     50e:	ce 01       	movw	r24, r28
     510:	b3 01       	movw	r22, r6
     512:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     516:	07 2e       	mov	r0, r23
     518:	00 0c       	add	r0, r0
     51a:	88 0b       	sbc	r24, r24
     51c:	99 0b       	sbc	r25, r25
     51e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     522:	60 93 ae 02 	sts	0x02AE, r22	; 0x8002ae <posYfactor>
     526:	70 93 af 02 	sts	0x02AF, r23	; 0x8002af <posYfactor+0x1>
     52a:	80 93 b0 02 	sts	0x02B0, r24	; 0x8002b0 <posYfactor+0x2>
     52e:	90 93 b1 02 	sts	0x02B1, r25	; 0x8002b1 <posYfactor+0x3>
	posYadd= -1*(100*middleyjoyy)/(255-middleyjoyy);
     532:	2c e9       	ldi	r18, 0x9C	; 156
     534:	20 03       	mulsu	r18, r16
     536:	60 01       	movw	r12, r0
     538:	21 9f       	mul	r18, r17
     53a:	d0 0c       	add	r13, r0
     53c:	11 24       	eor	r1, r1
     53e:	c6 01       	movw	r24, r12
     540:	b3 01       	movw	r22, r6
     542:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     546:	07 2e       	mov	r0, r23
     548:	00 0c       	add	r0, r0
     54a:	88 0b       	sbc	r24, r24
     54c:	99 0b       	sbc	r25, r25
     54e:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     552:	60 93 9f 02 	sts	0x029F, r22	; 0x80029f <posYadd>
     556:	70 93 a0 02 	sts	0x02A0, r23	; 0x8002a0 <posYadd+0x1>
     55a:	80 93 a1 02 	sts	0x02A1, r24	; 0x8002a1 <posYadd+0x2>
     55e:	90 93 a2 02 	sts	0x02A2, r25	; 0x8002a2 <posYadd+0x3>
	negYfactor = (10000/middleyjoyy);
     562:	ce 01       	movw	r24, r28
     564:	b8 01       	movw	r22, r16
     566:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     56a:	07 2e       	mov	r0, r23
     56c:	00 0c       	add	r0, r0
     56e:	88 0b       	sbc	r24, r24
     570:	99 0b       	sbc	r25, r25
     572:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     576:	60 93 b8 02 	sts	0x02B8, r22	; 0x8002b8 <negYfactor>
     57a:	70 93 b9 02 	sts	0x02B9, r23	; 0x8002b9 <negYfactor+0x1>
     57e:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <negYfactor+0x2>
     582:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <negYfactor+0x3>
	negYadd = -1*(middleyjoyy*100)/(middleyjoyy);
     586:	c6 01       	movw	r24, r12
     588:	b8 01       	movw	r22, r16
     58a:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__divmodhi4>
     58e:	07 2e       	mov	r0, r23
     590:	00 0c       	add	r0, r0
     592:	88 0b       	sbc	r24, r24
     594:	99 0b       	sbc	r25, r25
     596:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__floatsisf>
     59a:	60 93 97 02 	sts	0x0297, r22	; 0x800297 <negYadd>
     59e:	70 93 98 02 	sts	0x0298, r23	; 0x800298 <negYadd+0x1>
     5a2:	80 93 99 02 	sts	0x0299, r24	; 0x800299 <negYadd+0x2>
     5a6:	90 93 9a 02 	sts	0x029A, r25	; 0x80029a <negYadd+0x3>
	printf("Pos x: %d*x + %d\n\r", (int)(posXfactor*1000), (int)posXadd);
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	4a e7       	ldi	r20, 0x7A	; 122
     5b0:	54 e4       	ldi	r21, 0x44	; 68
     5b2:	c5 01       	movw	r24, r10
     5b4:	b4 01       	movw	r22, r8
     5b6:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     5ba:	ff 92       	push	r15
     5bc:	ef 92       	push	r14
     5be:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     5c2:	7f 93       	push	r23
     5c4:	6f 93       	push	r22
     5c6:	86 e1       	ldi	r24, 0x16	; 22
     5c8:	91 e0       	ldi	r25, 0x01	; 1
     5ca:	9f 93       	push	r25
     5cc:	8f 93       	push	r24
     5ce:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Neg x: %d*x + %d\n\r", (int)(negXfactor*1000), (int)negXadd);
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	30 e0       	ldi	r19, 0x00	; 0
     5d6:	4a e7       	ldi	r20, 0x7A	; 122
     5d8:	54 e4       	ldi	r21, 0x44	; 68
     5da:	60 91 bc 02 	lds	r22, 0x02BC	; 0x8002bc <negXfactor>
     5de:	70 91 bd 02 	lds	r23, 0x02BD	; 0x8002bd <negXfactor+0x1>
     5e2:	80 91 be 02 	lds	r24, 0x02BE	; 0x8002be <negXfactor+0x2>
     5e6:	90 91 bf 02 	lds	r25, 0x02BF	; 0x8002bf <negXfactor+0x3>
     5ea:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     5ee:	6b 01       	movw	r12, r22
     5f0:	7c 01       	movw	r14, r24
     5f2:	60 91 b2 02 	lds	r22, 0x02B2	; 0x8002b2 <negXadd>
     5f6:	70 91 b3 02 	lds	r23, 0x02B3	; 0x8002b3 <negXadd+0x1>
     5fa:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <negXadd+0x2>
     5fe:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <negXadd+0x3>
     602:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     606:	7f 93       	push	r23
     608:	6f 93       	push	r22
     60a:	c7 01       	movw	r24, r14
     60c:	b6 01       	movw	r22, r12
     60e:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     612:	7f 93       	push	r23
     614:	6f 93       	push	r22
     616:	89 e2       	ldi	r24, 0x29	; 41
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	9f 93       	push	r25
     61c:	8f 93       	push	r24
     61e:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Pos y: %d*y + %d\n\r", (int)(posYfactor*1000), (int)posYadd);
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	30 e0       	ldi	r19, 0x00	; 0
     626:	4a e7       	ldi	r20, 0x7A	; 122
     628:	54 e4       	ldi	r21, 0x44	; 68
     62a:	60 91 ae 02 	lds	r22, 0x02AE	; 0x8002ae <posYfactor>
     62e:	70 91 af 02 	lds	r23, 0x02AF	; 0x8002af <posYfactor+0x1>
     632:	80 91 b0 02 	lds	r24, 0x02B0	; 0x8002b0 <posYfactor+0x2>
     636:	90 91 b1 02 	lds	r25, 0x02B1	; 0x8002b1 <posYfactor+0x3>
     63a:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     63e:	6b 01       	movw	r12, r22
     640:	7c 01       	movw	r14, r24
     642:	60 91 9f 02 	lds	r22, 0x029F	; 0x80029f <posYadd>
     646:	70 91 a0 02 	lds	r23, 0x02A0	; 0x8002a0 <posYadd+0x1>
     64a:	80 91 a1 02 	lds	r24, 0x02A1	; 0x8002a1 <posYadd+0x2>
     64e:	90 91 a2 02 	lds	r25, 0x02A2	; 0x8002a2 <posYadd+0x3>
     652:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     656:	7f 93       	push	r23
     658:	6f 93       	push	r22
     65a:	c7 01       	movw	r24, r14
     65c:	b6 01       	movw	r22, r12
     65e:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     662:	7f 93       	push	r23
     664:	6f 93       	push	r22
     666:	8c e3       	ldi	r24, 0x3C	; 60
     668:	91 e0       	ldi	r25, 0x01	; 1
     66a:	9f 93       	push	r25
     66c:	8f 93       	push	r24
     66e:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Neg y: %d*y + %d\n\r", (int)(negYfactor*1000), (int)negYadd);
     672:	20 e0       	ldi	r18, 0x00	; 0
     674:	30 e0       	ldi	r19, 0x00	; 0
     676:	4a e7       	ldi	r20, 0x7A	; 122
     678:	54 e4       	ldi	r21, 0x44	; 68
     67a:	60 91 b8 02 	lds	r22, 0x02B8	; 0x8002b8 <negYfactor>
     67e:	70 91 b9 02 	lds	r23, 0x02B9	; 0x8002b9 <negYfactor+0x1>
     682:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <negYfactor+0x2>
     686:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <negYfactor+0x3>
     68a:	0e 94 49 07 	call	0xe92	; 0xe92 <__mulsf3>
     68e:	6b 01       	movw	r12, r22
     690:	7c 01       	movw	r14, r24
     692:	60 91 97 02 	lds	r22, 0x0297	; 0x800297 <negYadd>
     696:	70 91 98 02 	lds	r23, 0x0298	; 0x800298 <negYadd+0x1>
     69a:	80 91 99 02 	lds	r24, 0x0299	; 0x800299 <negYadd+0x2>
     69e:	90 91 9a 02 	lds	r25, 0x029A	; 0x80029a <negYadd+0x3>
     6a2:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     6a6:	7f 93       	push	r23
     6a8:	6f 93       	push	r22
     6aa:	c7 01       	movw	r24, r14
     6ac:	b6 01       	movw	r22, r12
     6ae:	0e 94 85 06 	call	0xd0a	; 0xd0a <__fixsfsi>
     6b2:	7f 93       	push	r23
     6b4:	6f 93       	push	r22
     6b6:	8f e4       	ldi	r24, 0x4F	; 79
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	9f 93       	push	r25
     6bc:	8f 93       	push	r24
     6be:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	
	TCCR1A = 0x00;
     6c2:	1f bc       	out	0x2f, r1	; 47
	TCCR1B =  (1<<CS11);
     6c4:	82 e0       	ldi	r24, 0x02	; 2
     6c6:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1);   
     6c8:	80 e8       	ldi	r24, 0x80	; 128
     6ca:	89 bf       	out	0x39, r24	; 57
	sei(); 
     6cc:	78 94       	sei
	
	ADC[0x00] = 0x00;
     6ce:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6d2:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6d6:	10 82       	st	Z, r1


}
     6d8:	8d b7       	in	r24, 0x3d	; 61
     6da:	9e b7       	in	r25, 0x3e	; 62
     6dc:	4e 96       	adiw	r24, 0x1e	; 30
     6de:	0f b6       	in	r0, 0x3f	; 63
     6e0:	f8 94       	cli
     6e2:	9e bf       	out	0x3e, r25	; 62
     6e4:	0f be       	out	0x3f, r0	; 63
     6e6:	8d bf       	out	0x3d, r24	; 61
     6e8:	df 91       	pop	r29
     6ea:	cf 91       	pop	r28
     6ec:	1f 91       	pop	r17
     6ee:	0f 91       	pop	r16
     6f0:	ff 90       	pop	r15
     6f2:	ef 90       	pop	r14
     6f4:	df 90       	pop	r13
     6f6:	cf 90       	pop	r12
     6f8:	bf 90       	pop	r11
     6fa:	af 90       	pop	r10
     6fc:	9f 90       	pop	r9
     6fe:	8f 90       	pop	r8
     700:	7f 90       	pop	r7
     702:	6f 90       	pop	r6
     704:	08 95       	ret

00000706 <__vector_2>:

ISR(INT1_vect){
     706:	1f 92       	push	r1
     708:	0f 92       	push	r0
     70a:	0f b6       	in	r0, 0x3f	; 63
     70c:	0f 92       	push	r0
     70e:	11 24       	eor	r1, r1
     710:	8f 93       	push	r24
     712:	ef 93       	push	r30
     714:	ff 93       	push	r31
	
	ADC_data = ADC[0x00];
     716:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     71a:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     71e:	80 81       	ld	r24, Z
     720:	80 93 c1 02 	sts	0x02C1, r24	; 0x8002c1 <ADC_data>
}
     724:	ff 91       	pop	r31
     726:	ef 91       	pop	r30
     728:	8f 91       	pop	r24
     72a:	0f 90       	pop	r0
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	0f 90       	pop	r0
     730:	1f 90       	pop	r1
     732:	18 95       	reti

00000734 <__vector_1>:
}
uint8_t CAN_message_recieved(void){
	uint8_t temp = message_interrupt_flag;
	message_interrupt_flag=0;
	return(temp);
}
     734:	1f 92       	push	r1
     736:	0f 92       	push	r0
     738:	0f b6       	in	r0, 0x3f	; 63
     73a:	0f 92       	push	r0
     73c:	11 24       	eor	r1, r1
     73e:	2f 93       	push	r18
     740:	3f 93       	push	r19
     742:	4f 93       	push	r20
     744:	5f 93       	push	r21
     746:	6f 93       	push	r22
     748:	7f 93       	push	r23
     74a:	8f 93       	push	r24
     74c:	9f 93       	push	r25
     74e:	af 93       	push	r26
     750:	bf 93       	push	r27
     752:	ef 93       	push	r30
     754:	ff 93       	push	r31
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	80 93 94 02 	sts	0x0294, r24	; 0x800294 <message_interrupt_flag>
     75c:	82 e6       	ldi	r24, 0x62	; 98
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	9f 93       	push	r25
     762:	8f 93       	push	r24
     764:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
     768:	0f 90       	pop	r0
     76a:	0f 90       	pop	r0
     76c:	ff 91       	pop	r31
     76e:	ef 91       	pop	r30
     770:	bf 91       	pop	r27
     772:	af 91       	pop	r26
     774:	9f 91       	pop	r25
     776:	8f 91       	pop	r24
     778:	7f 91       	pop	r23
     77a:	6f 91       	pop	r22
     77c:	5f 91       	pop	r21
     77e:	4f 91       	pop	r20
     780:	3f 91       	pop	r19
     782:	2f 91       	pop	r18
     784:	0f 90       	pop	r0
     786:	0f be       	out	0x3f, r0	; 63
     788:	0f 90       	pop	r0
     78a:	1f 90       	pop	r1
     78c:	18 95       	reti

0000078e <CAN_init>:
     78e:	0e 94 56 04 	call	0x8ac	; 0x8ac <CAN_module_init>
     792:	f8 94       	cli
     794:	85 b7       	in	r24, 0x35	; 53
     796:	83 60       	ori	r24, 0x03	; 3
     798:	85 bf       	out	0x35, r24	; 53
     79a:	80 e4       	ldi	r24, 0x40	; 64
     79c:	8b bf       	out	0x3b, r24	; 59
     79e:	78 94       	sei
     7a0:	60 e8       	ldi	r22, 0x80	; 128
     7a2:	8f e0       	ldi	r24, 0x0F	; 15
     7a4:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	8b e2       	ldi	r24, 0x2B	; 43
     7ac:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7b0:	63 e0       	ldi	r22, 0x03	; 3
     7b2:	8a e2       	ldi	r24, 0x2A	; 42
     7b4:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7b8:	61 eb       	ldi	r22, 0xB1	; 177
     7ba:	89 e2       	ldi	r24, 0x29	; 41
     7bc:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7c0:	65 e0       	ldi	r22, 0x05	; 5
     7c2:	88 e2       	ldi	r24, 0x28	; 40
     7c4:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7c8:	60 e0       	ldi	r22, 0x00	; 0
     7ca:	8f e0       	ldi	r24, 0x0F	; 15
     7cc:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
     7d0:	08 95       	ret

000007d2 <CAN_send_message>:




void CAN_send_message(CAN_message_struct* message){
     7d2:	0f 93       	push	r16
     7d4:	1f 93       	push	r17
     7d6:	cf 93       	push	r28
     7d8:	8c 01       	movw	r16, r24
	//load tx0 buffer with data
	//printf("ID: %x%x, DLC: %x, Data[8]: %x\n\r", message->message_id[0], message->message_id[1], message->data_length_code, message->data[6]);
	CAN_module_write(MCP_TXB0CTRL + 0x01, message->message_id[0]);
     7da:	fc 01       	movw	r30, r24
     7dc:	60 81       	ld	r22, Z
     7de:	81 e3       	ldi	r24, 0x31	; 49
     7e0:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
     7e4:	f8 01       	movw	r30, r16
     7e6:	61 81       	ldd	r22, Z+1	; 0x01
     7e8:	62 95       	swap	r22
     7ea:	66 0f       	add	r22, r22
     7ec:	60 7e       	andi	r22, 0xE0	; 224
     7ee:	82 e3       	ldi	r24, 0x32	; 50
     7f0:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
     7f4:	f8 01       	movw	r30, r16
     7f6:	62 81       	ldd	r22, Z+2	; 0x02
     7f8:	85 e3       	ldi	r24, 0x35	; 53
     7fa:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
	for (uint8_t i = 0; i < 8; i++)
     7fe:	c0 e0       	ldi	r28, 0x00	; 0
     800:	09 c0       	rjmp	.+18     	; 0x814 <CAN_send_message+0x42>
	{
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
     802:	f8 01       	movw	r30, r16
     804:	ec 0f       	add	r30, r28
     806:	f1 1d       	adc	r31, r1
     808:	63 81       	ldd	r22, Z+3	; 0x03
     80a:	86 e3       	ldi	r24, 0x36	; 54
     80c:	8c 0f       	add	r24, r28
     80e:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
	//load tx0 buffer with data
	//printf("ID: %x%x, DLC: %x, Data[8]: %x\n\r", message->message_id[0], message->message_id[1], message->data_length_code, message->data[6]);
	CAN_module_write(MCP_TXB0CTRL + 0x01, message->message_id[0]);
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
	for (uint8_t i = 0; i < 8; i++)
     812:	cf 5f       	subi	r28, 0xFF	; 255
     814:	c8 30       	cpi	r28, 0x08	; 8
     816:	a8 f3       	brcs	.-22     	; 0x802 <CAN_send_message+0x30>
     818:	83 ec       	ldi	r24, 0xC3	; 195
     81a:	99 e0       	ldi	r25, 0x09	; 9
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	f1 f7       	brne	.-4      	; 0x81c <CAN_send_message+0x4a>
     820:	00 c0       	rjmp	.+0      	; 0x822 <CAN_send_message+0x50>
     822:	00 00       	nop
	{
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
	}
	//request to send
	_delay_ms(10);
	CAN_module_activate_cs();
     824:	0e 94 1d 04 	call	0x83a	; 0x83a <CAN_module_activate_cs>
	SPI_Transmit(MCP_RTS_TX0);
     828:	81 e8       	ldi	r24, 0x81	; 129
     82a:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
	CAN_module_deactivate_cs();
     82e:	0e 94 1f 04 	call	0x83e	; 0x83e <CAN_module_deactivate_cs>
}
     832:	cf 91       	pop	r28
     834:	1f 91       	pop	r17
     836:	0f 91       	pop	r16
     838:	08 95       	ret

0000083a <CAN_module_activate_cs>:
	SPI_Transmit(MCP_RESET);
	CAN_module_deactivate_cs();
	_delay_ms(10); //change if timing is off
}

void CAN_module_test(void){
     83a:	18 ba       	out	0x18, r1	; 24
     83c:	08 95       	ret

0000083e <CAN_module_deactivate_cs>:
     83e:	80 e1       	ldi	r24, 0x10	; 16
     840:	88 bb       	out	0x18, r24	; 24
     842:	08 95       	ret

00000844 <CAN_module_read>:
     844:	cf 93       	push	r28
     846:	c8 2f       	mov	r28, r24
     848:	0e 94 1d 04 	call	0x83a	; 0x83a <CAN_module_activate_cs>
     84c:	83 e0       	ldi	r24, 0x03	; 3
     84e:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     852:	8c 2f       	mov	r24, r28
     854:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     858:	0e 94 8c 05 	call	0xb18	; 0xb18 <SPI_Recieve>
     85c:	c8 2f       	mov	r28, r24
     85e:	0e 94 1f 04 	call	0x83e	; 0x83e <CAN_module_deactivate_cs>
     862:	8c 2f       	mov	r24, r28
     864:	cf 91       	pop	r28
     866:	08 95       	ret

00000868 <CAN_module_write>:
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	d8 2f       	mov	r29, r24
     86e:	c6 2f       	mov	r28, r22
     870:	0e 94 1d 04 	call	0x83a	; 0x83a <CAN_module_activate_cs>
     874:	82 e0       	ldi	r24, 0x02	; 2
     876:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     87a:	8d 2f       	mov	r24, r29
     87c:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     880:	8c 2f       	mov	r24, r28
     882:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     886:	0e 94 1f 04 	call	0x83e	; 0x83e <CAN_module_deactivate_cs>
     88a:	df 91       	pop	r29
     88c:	cf 91       	pop	r28
     88e:	08 95       	ret

00000890 <CAN_module_reset>:
     890:	0e 94 1d 04 	call	0x83a	; 0x83a <CAN_module_activate_cs>
     894:	80 ec       	ldi	r24, 0xC0	; 192
     896:	0e 94 88 05 	call	0xb10	; 0xb10 <SPI_Transmit>
     89a:	0e 94 1f 04 	call	0x83e	; 0x83e <CAN_module_deactivate_cs>
     89e:	83 ec       	ldi	r24, 0xC3	; 195
     8a0:	99 e0       	ldi	r25, 0x09	; 9
     8a2:	01 97       	sbiw	r24, 0x01	; 1
     8a4:	f1 f7       	brne	.-4      	; 0x8a2 <CAN_module_reset+0x12>
     8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <CAN_module_reset+0x18>
     8a8:	00 00       	nop
     8aa:	08 95       	ret

000008ac <CAN_module_init>:
	
}

void CAN_module_init(){
     8ac:	cf 93       	push	r28
	uint8_t val;
	SPI_Init();
     8ae:	0e 94 80 05 	call	0xb00	; 0xb00 <SPI_Init>
	
	CAN_module_reset();
     8b2:	0e 94 48 04 	call	0x890	; 0x890 <CAN_module_reset>
	
	val = CAN_module_read(MCP_CANSTAT);
     8b6:	8e e0       	ldi	r24, 0x0E	; 14
     8b8:	0e 94 22 04 	call	0x844	; 0x844 <CAN_module_read>
	uint8_t mode_bits = (val & MODE_MASK);
     8bc:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_CONFIG){
     8be:	80 38       	cpi	r24, 0x80	; 128
     8c0:	61 f0       	breq	.+24     	; 0x8da <CAN_module_init+0x2e>
	printf("MCP2515 is NOT in Configuration mode after reset! Its config bits are %x\n\r", mode_bits);
     8c2:	1f 92       	push	r1
     8c4:	8f 93       	push	r24
     8c6:	86 e8       	ldi	r24, 0x86	; 134
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	9f 93       	push	r25
     8cc:	8f 93       	push	r24
     8ce:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
     8d2:	0f 90       	pop	r0
     8d4:	0f 90       	pop	r0
     8d6:	0f 90       	pop	r0
     8d8:	0f 90       	pop	r0
	//return(1);
	}
	
	CAN_module_write(MCP_CANCTRL, MODE_LOOPBACK);
     8da:	60 e4       	ldi	r22, 0x40	; 64
     8dc:	8f e0       	ldi	r24, 0x0F	; 15
     8de:	0e 94 34 04 	call	0x868	; 0x868 <CAN_module_write>
	
	val = CAN_module_read(MCP_CANSTAT);
     8e2:	8e e0       	ldi	r24, 0x0E	; 14
     8e4:	0e 94 22 04 	call	0x844	; 0x844 <CAN_module_read>
     8e8:	c8 2f       	mov	r28, r24
	printf("%x\n\r", val);
     8ea:	1f 92       	push	r1
     8ec:	8f 93       	push	r24
     8ee:	8c ec       	ldi	r24, 0xCC	; 204
     8f0:	91 e0       	ldi	r25, 0x01	; 1
     8f2:	9f 93       	push	r25
     8f4:	8f 93       	push	r24
     8f6:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	mode_bits = (val & MODE_MASK);
     8fa:	c0 7e       	andi	r28, 0xE0	; 224
	if(mode_bits != MODE_LOOPBACK){
     8fc:	0f 90       	pop	r0
     8fe:	0f 90       	pop	r0
     900:	0f 90       	pop	r0
     902:	0f 90       	pop	r0
     904:	c0 34       	cpi	r28, 0x40	; 64
     906:	81 f0       	breq	.+32     	; 0x928 <CAN_module_init+0x7c>
	
	printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n\r", mode_bits);
     908:	1f 92       	push	r1
     90a:	cf 93       	push	r28
     90c:	81 ed       	ldi	r24, 0xD1	; 209
     90e:	91 e0       	ldi	r25, 0x01	; 1
     910:	9f 93       	push	r25
     912:	8f 93       	push	r24
     914:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("\n!\n");
     918:	86 e1       	ldi	r24, 0x16	; 22
     91a:	92 e0       	ldi	r25, 0x02	; 2
     91c:	0e 94 3f 08 	call	0x107e	; 0x107e <puts>
     920:	0f 90       	pop	r0
     922:	0f 90       	pop	r0
     924:	0f 90       	pop	r0
     926:	0f 90       	pop	r0
	//return(1);
	}
	
	
	//return(0);
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <main>:
#define F_CPU 4915200
#define BAUD 9600
#define MYBURR F_CPU/16/BAUD-1


int main(){
     92c:	cf 93       	push	r28
     92e:	df 93       	push	r29
     930:	cd b7       	in	r28, 0x3d	; 61
     932:	de b7       	in	r29, 0x3e	; 62
     934:	2b 97       	sbiw	r28, 0x0b	; 11
     936:	0f b6       	in	r0, 0x3f	; 63
     938:	f8 94       	cli
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	cd bf       	out	0x3d, r28	; 61
	MCUCR = (1<<SRE);
     940:	80 e8       	ldi	r24, 0x80	; 128
     942:	85 bf       	out	0x35, r24	; 53
	uart_start(MYBURR);
     944:	8f e1       	ldi	r24, 0x1F	; 31
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	0e 94 91 05 	call	0xb22	; 0xb22 <uart_start>
	fdevopen(&uart_transmit, &uart_recieve);
     94c:	61 ea       	ldi	r22, 0xA1	; 161
     94e:	75 e0       	ldi	r23, 0x05	; 5
     950:	8b e9       	ldi	r24, 0x9B	; 155
     952:	95 e0       	ldi	r25, 0x05	; 5
     954:	0e 94 de 07 	call	0xfbc	; 0xfbc <fdevopen>
	
	//Comment
	
	adc_init();
     958:	0e 94 a7 01 	call	0x34e	; 0x34e <adc_init>
	OLED_init();
     95c:	0e 94 3d 05 	call	0xa7a	; 0xa7a <OLED_init>
	CAN_init();
     960:	0e 94 c7 03 	call	0x78e	; 0x78e <CAN_init>
	CAN_message_struct message;
	
	while (1)
	{
	message.message_id[0] = 0xFF;
     964:	8f ef       	ldi	r24, 0xFF	; 255
     966:	89 83       	std	Y+1, r24	; 0x01
	message.message_id[1] = 0xFF;
     968:	8a 83       	std	Y+2, r24	; 0x02
	message.data_length_code = 7;
     96a:	87 e0       	ldi	r24, 0x07	; 7
     96c:	8b 83       	std	Y+3, r24	; 0x03
	message.data[0]=(uint8_t)joyyPercent+100;
     96e:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <joyyPercent>
     972:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <joyyPercent+0x1>
     976:	8c 59       	subi	r24, 0x9C	; 156
     978:	8c 83       	std	Y+4, r24	; 0x04
	message.data[1]=(uint8_t)joyxPercent+100;
     97a:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <joyxPercent>
     97e:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <joyxPercent+0x1>
     982:	8c 59       	subi	r24, 0x9C	; 156
     984:	8d 83       	std	Y+5, r24	; 0x05
	message.data[2]=sliderLeft;
     986:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <sliderLeft>
     98a:	90 91 a4 02 	lds	r25, 0x02A4	; 0x8002a4 <sliderLeft+0x1>
     98e:	8e 83       	std	Y+6, r24	; 0x06
	message.data[3]=sliderRight;
     990:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <sliderRight>
     994:	90 91 96 02 	lds	r25, 0x0296	; 0x800296 <sliderRight+0x1>
     998:	8f 83       	std	Y+7, r24	; 0x07
	message.data[4]=button1State;
     99a:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <button1State>
     99e:	88 87       	std	Y+8, r24	; 0x08
	message.data[5]=button3State;
     9a0:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <button3State>
     9a4:	89 87       	std	Y+9, r24	; 0x09
	message.data[6]=button2State;
     9a6:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <button2State>
     9aa:	8a 87       	std	Y+10, r24	; 0x0a
	CAN_send_message(&message);
     9ac:	ce 01       	movw	r24, r28
     9ae:	01 96       	adiw	r24, 0x01	; 1
     9b0:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <CAN_send_message>
     9b4:	2f e3       	ldi	r18, 0x3F	; 63
     9b6:	8d e0       	ldi	r24, 0x0D	; 13
     9b8:	93 e0       	ldi	r25, 0x03	; 3
     9ba:	21 50       	subi	r18, 0x01	; 1
     9bc:	80 40       	sbci	r24, 0x00	; 0
     9be:	90 40       	sbci	r25, 0x00	; 0
     9c0:	e1 f7       	brne	.-8      	; 0x9ba <main+0x8e>
     9c2:	00 c0       	rjmp	.+0      	; 0x9c4 <main+0x98>
     9c4:	00 00       	nop
	_delay_ms(1000);
	
	
	printf("Joy Y: %d,\t", joyyPercent);
     9c6:	80 91 a5 02 	lds	r24, 0x02A5	; 0x8002a5 <joyyPercent>
     9ca:	90 91 a6 02 	lds	r25, 0x02A6	; 0x8002a6 <joyyPercent+0x1>
     9ce:	9f 93       	push	r25
     9d0:	8f 93       	push	r24
     9d2:	89 e1       	ldi	r24, 0x19	; 25
     9d4:	92 e0       	ldi	r25, 0x02	; 2
     9d6:	9f 93       	push	r25
     9d8:	8f 93       	push	r24
     9da:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Joy X: %d,\t", joyxPercent);
     9de:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <joyxPercent>
     9e2:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <joyxPercent+0x1>
     9e6:	9f 93       	push	r25
     9e8:	8f 93       	push	r24
     9ea:	85 e2       	ldi	r24, 0x25	; 37
     9ec:	92 e0       	ldi	r25, 0x02	; 2
     9ee:	9f 93       	push	r25
     9f0:	8f 93       	push	r24
     9f2:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Left Slider: %d,  \t", sliderLeft);
     9f6:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <sliderLeft>
     9fa:	90 91 a4 02 	lds	r25, 0x02A4	; 0x8002a4 <sliderLeft+0x1>
     9fe:	9f 93       	push	r25
     a00:	8f 93       	push	r24
     a02:	81 e3       	ldi	r24, 0x31	; 49
     a04:	92 e0       	ldi	r25, 0x02	; 2
     a06:	9f 93       	push	r25
     a08:	8f 93       	push	r24
     a0a:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Right Slider: %d,\t", sliderRight);
     a0e:	80 91 95 02 	lds	r24, 0x0295	; 0x800295 <sliderRight>
     a12:	90 91 96 02 	lds	r25, 0x0296	; 0x800296 <sliderRight+0x1>
     a16:	9f 93       	push	r25
     a18:	8f 93       	push	r24
     a1a:	85 e4       	ldi	r24, 0x45	; 69
     a1c:	92 e0       	ldi	r25, 0x02	; 2
     a1e:	9f 93       	push	r25
     a20:	8f 93       	push	r24
     a22:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Left Button: %d, \t", button2State);
     a26:	80 91 a9 02 	lds	r24, 0x02A9	; 0x8002a9 <button2State>
     a2a:	1f 92       	push	r1
     a2c:	8f 93       	push	r24
     a2e:	88 e5       	ldi	r24, 0x58	; 88
     a30:	92 e0       	ldi	r25, 0x02	; 2
     a32:	9f 93       	push	r25
     a34:	8f 93       	push	r24
     a36:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Right button: %d,\t", button1State);
     a3a:	80 91 c0 02 	lds	r24, 0x02C0	; 0x8002c0 <button1State>
     a3e:	1f 92       	push	r1
     a40:	8f 93       	push	r24
     a42:	8b e6       	ldi	r24, 0x6B	; 107
     a44:	92 e0       	ldi	r25, 0x02	; 2
     a46:	9f 93       	push	r25
     a48:	8f 93       	push	r24
     a4a:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
	printf("Joy button: %d\n\r", button3State);
     a4e:	80 91 c8 02 	lds	r24, 0x02C8	; 0x8002c8 <button3State>
     a52:	1f 92       	push	r1
     a54:	8f 93       	push	r24
     a56:	8e e7       	ldi	r24, 0x7E	; 126
     a58:	92 e0       	ldi	r25, 0x02	; 2
     a5a:	9f 93       	push	r25
     a5c:	8f 93       	push	r24
     a5e:	0e 94 29 08 	call	0x1052	; 0x1052 <printf>
     a62:	0f b6       	in	r0, 0x3f	; 63
     a64:	f8 94       	cli
     a66:	de bf       	out	0x3e, r29	; 62
     a68:	0f be       	out	0x3f, r0	; 63
     a6a:	cd bf       	out	0x3d, r28	; 61
     a6c:	7b cf       	rjmp	.-266    	; 0x964 <main+0x38>

00000a6e <OLED_Write_Command>:
     a6e:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <oled_command>
     a72:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <oled_command+0x1>
     a76:	80 83       	st	Z, r24
     a78:	08 95       	ret

00000a7a <OLED_init>:
     a7a:	8e ea       	ldi	r24, 0xAE	; 174
     a7c:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a80:	81 ea       	ldi	r24, 0xA1	; 161
     a82:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a86:	8a ed       	ldi	r24, 0xDA	; 218
     a88:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a8c:	82 e1       	ldi	r24, 0x12	; 18
     a8e:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a92:	88 ec       	ldi	r24, 0xC8	; 200
     a94:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a98:	88 ea       	ldi	r24, 0xA8	; 168
     a9a:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     a9e:	8f e3       	ldi	r24, 0x3F	; 63
     aa0:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     aa4:	85 ed       	ldi	r24, 0xD5	; 213
     aa6:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     aaa:	80 e8       	ldi	r24, 0x80	; 128
     aac:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ab0:	81 e8       	ldi	r24, 0x81	; 129
     ab2:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ab6:	80 e5       	ldi	r24, 0x50	; 80
     ab8:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     abc:	89 ed       	ldi	r24, 0xD9	; 217
     abe:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ac2:	81 e2       	ldi	r24, 0x21	; 33
     ac4:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ac8:	80 e2       	ldi	r24, 0x20	; 32
     aca:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ace:	82 e0       	ldi	r24, 0x02	; 2
     ad0:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ad4:	8b ed       	ldi	r24, 0xDB	; 219
     ad6:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ada:	80 e3       	ldi	r24, 0x30	; 48
     adc:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ae0:	8d ea       	ldi	r24, 0xAD	; 173
     ae2:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     aec:	84 ea       	ldi	r24, 0xA4	; 164
     aee:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     af2:	86 ea       	ldi	r24, 0xA6	; 166
     af4:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     af8:	8f ea       	ldi	r24, 0xAF	; 175
     afa:	0e 94 37 05 	call	0xa6e	; 0xa6e <OLED_Write_Command>
     afe:	08 95       	ret

00000b00 <SPI_Init>:


void SPI_Init(void)
{
	/* Set MOSI and SCK output, all others input */
	DDRB = (1<<PB4)|(1<<PB5)|(1<<PB7);
     b00:	80 eb       	ldi	r24, 0xB0	; 176
     b02:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
     b04:	81 e5       	ldi	r24, 0x51	; 81
     b06:	8d b9       	out	0x0d, r24	; 13
	
	set_bit(PORTB, PB4);
     b08:	88 b3       	in	r24, 0x18	; 24
     b0a:	80 61       	ori	r24, 0x10	; 16
     b0c:	88 bb       	out	0x18, r24	; 24
     b0e:	08 95       	ret

00000b10 <SPI_Transmit>:
}

void SPI_Transmit(char Data)
{
	/* Start transmission */
	SPDR = Data;
     b10:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
     b12:	77 9b       	sbis	0x0e, 7	; 14
     b14:	fe cf       	rjmp	.-4      	; 0xb12 <SPI_Transmit+0x2>
	;
}
     b16:	08 95       	ret

00000b18 <SPI_Recieve>:


char SPI_Recieve(void)
{
	/* Start transmission */
	SPDR = 0x00;
     b18:	1f b8       	out	0x0f, r1	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
     b1a:	77 9b       	sbis	0x0e, 7	; 14
     b1c:	fe cf       	rjmp	.-4      	; 0xb1a <SPI_Recieve+0x2>
	;
	return(SPDR);
     b1e:	8f b1       	in	r24, 0x0f	; 15
}
     b20:	08 95       	ret

00000b22 <uart_start>:
     b22:	2b b1       	in	r18, 0x0b	; 11
     b24:	2d 7f       	andi	r18, 0xFD	; 253
     b26:	2b b9       	out	0x0b, r18	; 11
     b28:	90 bd       	out	0x20, r25	; 32
     b2a:	89 b9       	out	0x09, r24	; 9
     b2c:	88 e1       	ldi	r24, 0x18	; 24
     b2e:	8a b9       	out	0x0a, r24	; 10
     b30:	8e e8       	ldi	r24, 0x8E	; 142
     b32:	80 bd       	out	0x20, r24	; 32
     b34:	08 95       	ret

00000b36 <uart_transmit>:
     b36:	5d 9b       	sbis	0x0b, 5	; 11
     b38:	fe cf       	rjmp	.-4      	; 0xb36 <uart_transmit>
     b3a:	8c b9       	out	0x0c, r24	; 12
     b3c:	80 e0       	ldi	r24, 0x00	; 0
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	08 95       	ret

00000b42 <uart_recieve>:
     b42:	5d 9b       	sbis	0x0b, 5	; 11
     b44:	fe cf       	rjmp	.-4      	; 0xb42 <uart_recieve>
     b46:	8c b1       	in	r24, 0x0c	; 12
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	08 95       	ret

00000b4c <__subsf3>:
     b4c:	50 58       	subi	r21, 0x80	; 128

00000b4e <__addsf3>:
     b4e:	bb 27       	eor	r27, r27
     b50:	aa 27       	eor	r26, r26
     b52:	0e 94 be 05 	call	0xb7c	; 0xb7c <__addsf3x>
     b56:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_round>
     b5a:	0e 94 01 07 	call	0xe02	; 0xe02 <__fp_pscA>
     b5e:	38 f0       	brcs	.+14     	; 0xb6e <__addsf3+0x20>
     b60:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_pscB>
     b64:	20 f0       	brcs	.+8      	; 0xb6e <__addsf3+0x20>
     b66:	39 f4       	brne	.+14     	; 0xb76 <__addsf3+0x28>
     b68:	9f 3f       	cpi	r25, 0xFF	; 255
     b6a:	19 f4       	brne	.+6      	; 0xb72 <__addsf3+0x24>
     b6c:	26 f4       	brtc	.+8      	; 0xb76 <__addsf3+0x28>
     b6e:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__fp_nan>
     b72:	0e f4       	brtc	.+2      	; 0xb76 <__addsf3+0x28>
     b74:	e0 95       	com	r30
     b76:	e7 fb       	bst	r30, 7
     b78:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__fp_inf>

00000b7c <__addsf3x>:
     b7c:	e9 2f       	mov	r30, r25
     b7e:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_split3>
     b82:	58 f3       	brcs	.-42     	; 0xb5a <__addsf3+0xc>
     b84:	ba 17       	cp	r27, r26
     b86:	62 07       	cpc	r22, r18
     b88:	73 07       	cpc	r23, r19
     b8a:	84 07       	cpc	r24, r20
     b8c:	95 07       	cpc	r25, r21
     b8e:	20 f0       	brcs	.+8      	; 0xb98 <__addsf3x+0x1c>
     b90:	79 f4       	brne	.+30     	; 0xbb0 <__addsf3x+0x34>
     b92:	a6 f5       	brtc	.+104    	; 0xbfc <__addsf3x+0x80>
     b94:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_zero>
     b98:	0e f4       	brtc	.+2      	; 0xb9c <__addsf3x+0x20>
     b9a:	e0 95       	com	r30
     b9c:	0b 2e       	mov	r0, r27
     b9e:	ba 2f       	mov	r27, r26
     ba0:	a0 2d       	mov	r26, r0
     ba2:	0b 01       	movw	r0, r22
     ba4:	b9 01       	movw	r22, r18
     ba6:	90 01       	movw	r18, r0
     ba8:	0c 01       	movw	r0, r24
     baa:	ca 01       	movw	r24, r20
     bac:	a0 01       	movw	r20, r0
     bae:	11 24       	eor	r1, r1
     bb0:	ff 27       	eor	r31, r31
     bb2:	59 1b       	sub	r21, r25
     bb4:	99 f0       	breq	.+38     	; 0xbdc <__addsf3x+0x60>
     bb6:	59 3f       	cpi	r21, 0xF9	; 249
     bb8:	50 f4       	brcc	.+20     	; 0xbce <__addsf3x+0x52>
     bba:	50 3e       	cpi	r21, 0xE0	; 224
     bbc:	68 f1       	brcs	.+90     	; 0xc18 <__addsf3x+0x9c>
     bbe:	1a 16       	cp	r1, r26
     bc0:	f0 40       	sbci	r31, 0x00	; 0
     bc2:	a2 2f       	mov	r26, r18
     bc4:	23 2f       	mov	r18, r19
     bc6:	34 2f       	mov	r19, r20
     bc8:	44 27       	eor	r20, r20
     bca:	58 5f       	subi	r21, 0xF8	; 248
     bcc:	f3 cf       	rjmp	.-26     	; 0xbb4 <__addsf3x+0x38>
     bce:	46 95       	lsr	r20
     bd0:	37 95       	ror	r19
     bd2:	27 95       	ror	r18
     bd4:	a7 95       	ror	r26
     bd6:	f0 40       	sbci	r31, 0x00	; 0
     bd8:	53 95       	inc	r21
     bda:	c9 f7       	brne	.-14     	; 0xbce <__addsf3x+0x52>
     bdc:	7e f4       	brtc	.+30     	; 0xbfc <__addsf3x+0x80>
     bde:	1f 16       	cp	r1, r31
     be0:	ba 0b       	sbc	r27, r26
     be2:	62 0b       	sbc	r22, r18
     be4:	73 0b       	sbc	r23, r19
     be6:	84 0b       	sbc	r24, r20
     be8:	ba f0       	brmi	.+46     	; 0xc18 <__addsf3x+0x9c>
     bea:	91 50       	subi	r25, 0x01	; 1
     bec:	a1 f0       	breq	.+40     	; 0xc16 <__addsf3x+0x9a>
     bee:	ff 0f       	add	r31, r31
     bf0:	bb 1f       	adc	r27, r27
     bf2:	66 1f       	adc	r22, r22
     bf4:	77 1f       	adc	r23, r23
     bf6:	88 1f       	adc	r24, r24
     bf8:	c2 f7       	brpl	.-16     	; 0xbea <__addsf3x+0x6e>
     bfa:	0e c0       	rjmp	.+28     	; 0xc18 <__addsf3x+0x9c>
     bfc:	ba 0f       	add	r27, r26
     bfe:	62 1f       	adc	r22, r18
     c00:	73 1f       	adc	r23, r19
     c02:	84 1f       	adc	r24, r20
     c04:	48 f4       	brcc	.+18     	; 0xc18 <__addsf3x+0x9c>
     c06:	87 95       	ror	r24
     c08:	77 95       	ror	r23
     c0a:	67 95       	ror	r22
     c0c:	b7 95       	ror	r27
     c0e:	f7 95       	ror	r31
     c10:	9e 3f       	cpi	r25, 0xFE	; 254
     c12:	08 f0       	brcs	.+2      	; 0xc16 <__addsf3x+0x9a>
     c14:	b0 cf       	rjmp	.-160    	; 0xb76 <__addsf3+0x28>
     c16:	93 95       	inc	r25
     c18:	88 0f       	add	r24, r24
     c1a:	08 f0       	brcs	.+2      	; 0xc1e <__addsf3x+0xa2>
     c1c:	99 27       	eor	r25, r25
     c1e:	ee 0f       	add	r30, r30
     c20:	97 95       	ror	r25
     c22:	87 95       	ror	r24
     c24:	08 95       	ret

00000c26 <__divsf3>:
     c26:	0e 94 27 06 	call	0xc4e	; 0xc4e <__divsf3x>
     c2a:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_round>
     c2e:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_pscB>
     c32:	58 f0       	brcs	.+22     	; 0xc4a <__divsf3+0x24>
     c34:	0e 94 01 07 	call	0xe02	; 0xe02 <__fp_pscA>
     c38:	40 f0       	brcs	.+16     	; 0xc4a <__divsf3+0x24>
     c3a:	29 f4       	brne	.+10     	; 0xc46 <__divsf3+0x20>
     c3c:	5f 3f       	cpi	r21, 0xFF	; 255
     c3e:	29 f0       	breq	.+10     	; 0xc4a <__divsf3+0x24>
     c40:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__fp_inf>
     c44:	51 11       	cpse	r21, r1
     c46:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_szero>
     c4a:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__fp_nan>

00000c4e <__divsf3x>:
     c4e:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_split3>
     c52:	68 f3       	brcs	.-38     	; 0xc2e <__divsf3+0x8>

00000c54 <__divsf3_pse>:
     c54:	99 23       	and	r25, r25
     c56:	b1 f3       	breq	.-20     	; 0xc44 <__divsf3+0x1e>
     c58:	55 23       	and	r21, r21
     c5a:	91 f3       	breq	.-28     	; 0xc40 <__divsf3+0x1a>
     c5c:	95 1b       	sub	r25, r21
     c5e:	55 0b       	sbc	r21, r21
     c60:	bb 27       	eor	r27, r27
     c62:	aa 27       	eor	r26, r26
     c64:	62 17       	cp	r22, r18
     c66:	73 07       	cpc	r23, r19
     c68:	84 07       	cpc	r24, r20
     c6a:	38 f0       	brcs	.+14     	; 0xc7a <__divsf3_pse+0x26>
     c6c:	9f 5f       	subi	r25, 0xFF	; 255
     c6e:	5f 4f       	sbci	r21, 0xFF	; 255
     c70:	22 0f       	add	r18, r18
     c72:	33 1f       	adc	r19, r19
     c74:	44 1f       	adc	r20, r20
     c76:	aa 1f       	adc	r26, r26
     c78:	a9 f3       	breq	.-22     	; 0xc64 <__divsf3_pse+0x10>
     c7a:	35 d0       	rcall	.+106    	; 0xce6 <__divsf3_pse+0x92>
     c7c:	0e 2e       	mov	r0, r30
     c7e:	3a f0       	brmi	.+14     	; 0xc8e <__divsf3_pse+0x3a>
     c80:	e0 e8       	ldi	r30, 0x80	; 128
     c82:	32 d0       	rcall	.+100    	; 0xce8 <__divsf3_pse+0x94>
     c84:	91 50       	subi	r25, 0x01	; 1
     c86:	50 40       	sbci	r21, 0x00	; 0
     c88:	e6 95       	lsr	r30
     c8a:	00 1c       	adc	r0, r0
     c8c:	ca f7       	brpl	.-14     	; 0xc80 <__divsf3_pse+0x2c>
     c8e:	2b d0       	rcall	.+86     	; 0xce6 <__divsf3_pse+0x92>
     c90:	fe 2f       	mov	r31, r30
     c92:	29 d0       	rcall	.+82     	; 0xce6 <__divsf3_pse+0x92>
     c94:	66 0f       	add	r22, r22
     c96:	77 1f       	adc	r23, r23
     c98:	88 1f       	adc	r24, r24
     c9a:	bb 1f       	adc	r27, r27
     c9c:	26 17       	cp	r18, r22
     c9e:	37 07       	cpc	r19, r23
     ca0:	48 07       	cpc	r20, r24
     ca2:	ab 07       	cpc	r26, r27
     ca4:	b0 e8       	ldi	r27, 0x80	; 128
     ca6:	09 f0       	breq	.+2      	; 0xcaa <__divsf3_pse+0x56>
     ca8:	bb 0b       	sbc	r27, r27
     caa:	80 2d       	mov	r24, r0
     cac:	bf 01       	movw	r22, r30
     cae:	ff 27       	eor	r31, r31
     cb0:	93 58       	subi	r25, 0x83	; 131
     cb2:	5f 4f       	sbci	r21, 0xFF	; 255
     cb4:	3a f0       	brmi	.+14     	; 0xcc4 <__divsf3_pse+0x70>
     cb6:	9e 3f       	cpi	r25, 0xFE	; 254
     cb8:	51 05       	cpc	r21, r1
     cba:	78 f0       	brcs	.+30     	; 0xcda <__divsf3_pse+0x86>
     cbc:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__fp_inf>
     cc0:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_szero>
     cc4:	5f 3f       	cpi	r21, 0xFF	; 255
     cc6:	e4 f3       	brlt	.-8      	; 0xcc0 <__divsf3_pse+0x6c>
     cc8:	98 3e       	cpi	r25, 0xE8	; 232
     cca:	d4 f3       	brlt	.-12     	; 0xcc0 <__divsf3_pse+0x6c>
     ccc:	86 95       	lsr	r24
     cce:	77 95       	ror	r23
     cd0:	67 95       	ror	r22
     cd2:	b7 95       	ror	r27
     cd4:	f7 95       	ror	r31
     cd6:	9f 5f       	subi	r25, 0xFF	; 255
     cd8:	c9 f7       	brne	.-14     	; 0xccc <__divsf3_pse+0x78>
     cda:	88 0f       	add	r24, r24
     cdc:	91 1d       	adc	r25, r1
     cde:	96 95       	lsr	r25
     ce0:	87 95       	ror	r24
     ce2:	97 f9       	bld	r25, 7
     ce4:	08 95       	ret
     ce6:	e1 e0       	ldi	r30, 0x01	; 1
     ce8:	66 0f       	add	r22, r22
     cea:	77 1f       	adc	r23, r23
     cec:	88 1f       	adc	r24, r24
     cee:	bb 1f       	adc	r27, r27
     cf0:	62 17       	cp	r22, r18
     cf2:	73 07       	cpc	r23, r19
     cf4:	84 07       	cpc	r24, r20
     cf6:	ba 07       	cpc	r27, r26
     cf8:	20 f0       	brcs	.+8      	; 0xd02 <__divsf3_pse+0xae>
     cfa:	62 1b       	sub	r22, r18
     cfc:	73 0b       	sbc	r23, r19
     cfe:	84 0b       	sbc	r24, r20
     d00:	ba 0b       	sbc	r27, r26
     d02:	ee 1f       	adc	r30, r30
     d04:	88 f7       	brcc	.-30     	; 0xce8 <__divsf3_pse+0x94>
     d06:	e0 95       	com	r30
     d08:	08 95       	ret

00000d0a <__fixsfsi>:
     d0a:	0e 94 8c 06 	call	0xd18	; 0xd18 <__fixunssfsi>
     d0e:	68 94       	set
     d10:	b1 11       	cpse	r27, r1
     d12:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_szero>
     d16:	08 95       	ret

00000d18 <__fixunssfsi>:
     d18:	0e 94 28 07 	call	0xe50	; 0xe50 <__fp_splitA>
     d1c:	88 f0       	brcs	.+34     	; 0xd40 <__fixunssfsi+0x28>
     d1e:	9f 57       	subi	r25, 0x7F	; 127
     d20:	98 f0       	brcs	.+38     	; 0xd48 <__fixunssfsi+0x30>
     d22:	b9 2f       	mov	r27, r25
     d24:	99 27       	eor	r25, r25
     d26:	b7 51       	subi	r27, 0x17	; 23
     d28:	b0 f0       	brcs	.+44     	; 0xd56 <__fixunssfsi+0x3e>
     d2a:	e1 f0       	breq	.+56     	; 0xd64 <__fixunssfsi+0x4c>
     d2c:	66 0f       	add	r22, r22
     d2e:	77 1f       	adc	r23, r23
     d30:	88 1f       	adc	r24, r24
     d32:	99 1f       	adc	r25, r25
     d34:	1a f0       	brmi	.+6      	; 0xd3c <__fixunssfsi+0x24>
     d36:	ba 95       	dec	r27
     d38:	c9 f7       	brne	.-14     	; 0xd2c <__fixunssfsi+0x14>
     d3a:	14 c0       	rjmp	.+40     	; 0xd64 <__fixunssfsi+0x4c>
     d3c:	b1 30       	cpi	r27, 0x01	; 1
     d3e:	91 f0       	breq	.+36     	; 0xd64 <__fixunssfsi+0x4c>
     d40:	0e 94 42 07 	call	0xe84	; 0xe84 <__fp_zero>
     d44:	b1 e0       	ldi	r27, 0x01	; 1
     d46:	08 95       	ret
     d48:	0c 94 42 07 	jmp	0xe84	; 0xe84 <__fp_zero>
     d4c:	67 2f       	mov	r22, r23
     d4e:	78 2f       	mov	r23, r24
     d50:	88 27       	eor	r24, r24
     d52:	b8 5f       	subi	r27, 0xF8	; 248
     d54:	39 f0       	breq	.+14     	; 0xd64 <__fixunssfsi+0x4c>
     d56:	b9 3f       	cpi	r27, 0xF9	; 249
     d58:	cc f3       	brlt	.-14     	; 0xd4c <__fixunssfsi+0x34>
     d5a:	86 95       	lsr	r24
     d5c:	77 95       	ror	r23
     d5e:	67 95       	ror	r22
     d60:	b3 95       	inc	r27
     d62:	d9 f7       	brne	.-10     	; 0xd5a <__fixunssfsi+0x42>
     d64:	3e f4       	brtc	.+14     	; 0xd74 <__fixunssfsi+0x5c>
     d66:	90 95       	com	r25
     d68:	80 95       	com	r24
     d6a:	70 95       	com	r23
     d6c:	61 95       	neg	r22
     d6e:	7f 4f       	sbci	r23, 0xFF	; 255
     d70:	8f 4f       	sbci	r24, 0xFF	; 255
     d72:	9f 4f       	sbci	r25, 0xFF	; 255
     d74:	08 95       	ret

00000d76 <__floatunsisf>:
     d76:	e8 94       	clt
     d78:	09 c0       	rjmp	.+18     	; 0xd8c <__floatsisf+0x12>

00000d7a <__floatsisf>:
     d7a:	97 fb       	bst	r25, 7
     d7c:	3e f4       	brtc	.+14     	; 0xd8c <__floatsisf+0x12>
     d7e:	90 95       	com	r25
     d80:	80 95       	com	r24
     d82:	70 95       	com	r23
     d84:	61 95       	neg	r22
     d86:	7f 4f       	sbci	r23, 0xFF	; 255
     d88:	8f 4f       	sbci	r24, 0xFF	; 255
     d8a:	9f 4f       	sbci	r25, 0xFF	; 255
     d8c:	99 23       	and	r25, r25
     d8e:	a9 f0       	breq	.+42     	; 0xdba <__floatsisf+0x40>
     d90:	f9 2f       	mov	r31, r25
     d92:	96 e9       	ldi	r25, 0x96	; 150
     d94:	bb 27       	eor	r27, r27
     d96:	93 95       	inc	r25
     d98:	f6 95       	lsr	r31
     d9a:	87 95       	ror	r24
     d9c:	77 95       	ror	r23
     d9e:	67 95       	ror	r22
     da0:	b7 95       	ror	r27
     da2:	f1 11       	cpse	r31, r1
     da4:	f8 cf       	rjmp	.-16     	; 0xd96 <__floatsisf+0x1c>
     da6:	fa f4       	brpl	.+62     	; 0xde6 <__floatsisf+0x6c>
     da8:	bb 0f       	add	r27, r27
     daa:	11 f4       	brne	.+4      	; 0xdb0 <__floatsisf+0x36>
     dac:	60 ff       	sbrs	r22, 0
     dae:	1b c0       	rjmp	.+54     	; 0xde6 <__floatsisf+0x6c>
     db0:	6f 5f       	subi	r22, 0xFF	; 255
     db2:	7f 4f       	sbci	r23, 0xFF	; 255
     db4:	8f 4f       	sbci	r24, 0xFF	; 255
     db6:	9f 4f       	sbci	r25, 0xFF	; 255
     db8:	16 c0       	rjmp	.+44     	; 0xde6 <__floatsisf+0x6c>
     dba:	88 23       	and	r24, r24
     dbc:	11 f0       	breq	.+4      	; 0xdc2 <__floatsisf+0x48>
     dbe:	96 e9       	ldi	r25, 0x96	; 150
     dc0:	11 c0       	rjmp	.+34     	; 0xde4 <__floatsisf+0x6a>
     dc2:	77 23       	and	r23, r23
     dc4:	21 f0       	breq	.+8      	; 0xdce <__floatsisf+0x54>
     dc6:	9e e8       	ldi	r25, 0x8E	; 142
     dc8:	87 2f       	mov	r24, r23
     dca:	76 2f       	mov	r23, r22
     dcc:	05 c0       	rjmp	.+10     	; 0xdd8 <__floatsisf+0x5e>
     dce:	66 23       	and	r22, r22
     dd0:	71 f0       	breq	.+28     	; 0xdee <__floatsisf+0x74>
     dd2:	96 e8       	ldi	r25, 0x86	; 134
     dd4:	86 2f       	mov	r24, r22
     dd6:	70 e0       	ldi	r23, 0x00	; 0
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	2a f0       	brmi	.+10     	; 0xde6 <__floatsisf+0x6c>
     ddc:	9a 95       	dec	r25
     dde:	66 0f       	add	r22, r22
     de0:	77 1f       	adc	r23, r23
     de2:	88 1f       	adc	r24, r24
     de4:	da f7       	brpl	.-10     	; 0xddc <__floatsisf+0x62>
     de6:	88 0f       	add	r24, r24
     de8:	96 95       	lsr	r25
     dea:	87 95       	ror	r24
     dec:	97 f9       	bld	r25, 7
     dee:	08 95       	ret

00000df0 <__fp_inf>:
     df0:	97 f9       	bld	r25, 7
     df2:	9f 67       	ori	r25, 0x7F	; 127
     df4:	80 e8       	ldi	r24, 0x80	; 128
     df6:	70 e0       	ldi	r23, 0x00	; 0
     df8:	60 e0       	ldi	r22, 0x00	; 0
     dfa:	08 95       	ret

00000dfc <__fp_nan>:
     dfc:	9f ef       	ldi	r25, 0xFF	; 255
     dfe:	80 ec       	ldi	r24, 0xC0	; 192
     e00:	08 95       	ret

00000e02 <__fp_pscA>:
     e02:	00 24       	eor	r0, r0
     e04:	0a 94       	dec	r0
     e06:	16 16       	cp	r1, r22
     e08:	17 06       	cpc	r1, r23
     e0a:	18 06       	cpc	r1, r24
     e0c:	09 06       	cpc	r0, r25
     e0e:	08 95       	ret

00000e10 <__fp_pscB>:
     e10:	00 24       	eor	r0, r0
     e12:	0a 94       	dec	r0
     e14:	12 16       	cp	r1, r18
     e16:	13 06       	cpc	r1, r19
     e18:	14 06       	cpc	r1, r20
     e1a:	05 06       	cpc	r0, r21
     e1c:	08 95       	ret

00000e1e <__fp_round>:
     e1e:	09 2e       	mov	r0, r25
     e20:	03 94       	inc	r0
     e22:	00 0c       	add	r0, r0
     e24:	11 f4       	brne	.+4      	; 0xe2a <__fp_round+0xc>
     e26:	88 23       	and	r24, r24
     e28:	52 f0       	brmi	.+20     	; 0xe3e <__fp_round+0x20>
     e2a:	bb 0f       	add	r27, r27
     e2c:	40 f4       	brcc	.+16     	; 0xe3e <__fp_round+0x20>
     e2e:	bf 2b       	or	r27, r31
     e30:	11 f4       	brne	.+4      	; 0xe36 <__fp_round+0x18>
     e32:	60 ff       	sbrs	r22, 0
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <__fp_round+0x20>
     e36:	6f 5f       	subi	r22, 0xFF	; 255
     e38:	7f 4f       	sbci	r23, 0xFF	; 255
     e3a:	8f 4f       	sbci	r24, 0xFF	; 255
     e3c:	9f 4f       	sbci	r25, 0xFF	; 255
     e3e:	08 95       	ret

00000e40 <__fp_split3>:
     e40:	57 fd       	sbrc	r21, 7
     e42:	90 58       	subi	r25, 0x80	; 128
     e44:	44 0f       	add	r20, r20
     e46:	55 1f       	adc	r21, r21
     e48:	59 f0       	breq	.+22     	; 0xe60 <__fp_splitA+0x10>
     e4a:	5f 3f       	cpi	r21, 0xFF	; 255
     e4c:	71 f0       	breq	.+28     	; 0xe6a <__fp_splitA+0x1a>
     e4e:	47 95       	ror	r20

00000e50 <__fp_splitA>:
     e50:	88 0f       	add	r24, r24
     e52:	97 fb       	bst	r25, 7
     e54:	99 1f       	adc	r25, r25
     e56:	61 f0       	breq	.+24     	; 0xe70 <__fp_splitA+0x20>
     e58:	9f 3f       	cpi	r25, 0xFF	; 255
     e5a:	79 f0       	breq	.+30     	; 0xe7a <__fp_splitA+0x2a>
     e5c:	87 95       	ror	r24
     e5e:	08 95       	ret
     e60:	12 16       	cp	r1, r18
     e62:	13 06       	cpc	r1, r19
     e64:	14 06       	cpc	r1, r20
     e66:	55 1f       	adc	r21, r21
     e68:	f2 cf       	rjmp	.-28     	; 0xe4e <__fp_split3+0xe>
     e6a:	46 95       	lsr	r20
     e6c:	f1 df       	rcall	.-30     	; 0xe50 <__fp_splitA>
     e6e:	08 c0       	rjmp	.+16     	; 0xe80 <__fp_splitA+0x30>
     e70:	16 16       	cp	r1, r22
     e72:	17 06       	cpc	r1, r23
     e74:	18 06       	cpc	r1, r24
     e76:	99 1f       	adc	r25, r25
     e78:	f1 cf       	rjmp	.-30     	; 0xe5c <__fp_splitA+0xc>
     e7a:	86 95       	lsr	r24
     e7c:	71 05       	cpc	r23, r1
     e7e:	61 05       	cpc	r22, r1
     e80:	08 94       	sec
     e82:	08 95       	ret

00000e84 <__fp_zero>:
     e84:	e8 94       	clt

00000e86 <__fp_szero>:
     e86:	bb 27       	eor	r27, r27
     e88:	66 27       	eor	r22, r22
     e8a:	77 27       	eor	r23, r23
     e8c:	cb 01       	movw	r24, r22
     e8e:	97 f9       	bld	r25, 7
     e90:	08 95       	ret

00000e92 <__mulsf3>:
     e92:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__mulsf3x>
     e96:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_round>
     e9a:	0e 94 01 07 	call	0xe02	; 0xe02 <__fp_pscA>
     e9e:	38 f0       	brcs	.+14     	; 0xeae <__mulsf3+0x1c>
     ea0:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_pscB>
     ea4:	20 f0       	brcs	.+8      	; 0xeae <__mulsf3+0x1c>
     ea6:	95 23       	and	r25, r21
     ea8:	11 f0       	breq	.+4      	; 0xeae <__mulsf3+0x1c>
     eaa:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__fp_inf>
     eae:	0c 94 fe 06 	jmp	0xdfc	; 0xdfc <__fp_nan>
     eb2:	11 24       	eor	r1, r1
     eb4:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_szero>

00000eb8 <__mulsf3x>:
     eb8:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_split3>
     ebc:	70 f3       	brcs	.-36     	; 0xe9a <__mulsf3+0x8>

00000ebe <__mulsf3_pse>:
     ebe:	95 9f       	mul	r25, r21
     ec0:	c1 f3       	breq	.-16     	; 0xeb2 <__mulsf3+0x20>
     ec2:	95 0f       	add	r25, r21
     ec4:	50 e0       	ldi	r21, 0x00	; 0
     ec6:	55 1f       	adc	r21, r21
     ec8:	62 9f       	mul	r22, r18
     eca:	f0 01       	movw	r30, r0
     ecc:	72 9f       	mul	r23, r18
     ece:	bb 27       	eor	r27, r27
     ed0:	f0 0d       	add	r31, r0
     ed2:	b1 1d       	adc	r27, r1
     ed4:	63 9f       	mul	r22, r19
     ed6:	aa 27       	eor	r26, r26
     ed8:	f0 0d       	add	r31, r0
     eda:	b1 1d       	adc	r27, r1
     edc:	aa 1f       	adc	r26, r26
     ede:	64 9f       	mul	r22, r20
     ee0:	66 27       	eor	r22, r22
     ee2:	b0 0d       	add	r27, r0
     ee4:	a1 1d       	adc	r26, r1
     ee6:	66 1f       	adc	r22, r22
     ee8:	82 9f       	mul	r24, r18
     eea:	22 27       	eor	r18, r18
     eec:	b0 0d       	add	r27, r0
     eee:	a1 1d       	adc	r26, r1
     ef0:	62 1f       	adc	r22, r18
     ef2:	73 9f       	mul	r23, r19
     ef4:	b0 0d       	add	r27, r0
     ef6:	a1 1d       	adc	r26, r1
     ef8:	62 1f       	adc	r22, r18
     efa:	83 9f       	mul	r24, r19
     efc:	a0 0d       	add	r26, r0
     efe:	61 1d       	adc	r22, r1
     f00:	22 1f       	adc	r18, r18
     f02:	74 9f       	mul	r23, r20
     f04:	33 27       	eor	r19, r19
     f06:	a0 0d       	add	r26, r0
     f08:	61 1d       	adc	r22, r1
     f0a:	23 1f       	adc	r18, r19
     f0c:	84 9f       	mul	r24, r20
     f0e:	60 0d       	add	r22, r0
     f10:	21 1d       	adc	r18, r1
     f12:	82 2f       	mov	r24, r18
     f14:	76 2f       	mov	r23, r22
     f16:	6a 2f       	mov	r22, r26
     f18:	11 24       	eor	r1, r1
     f1a:	9f 57       	subi	r25, 0x7F	; 127
     f1c:	50 40       	sbci	r21, 0x00	; 0
     f1e:	9a f0       	brmi	.+38     	; 0xf46 <__mulsf3_pse+0x88>
     f20:	f1 f0       	breq	.+60     	; 0xf5e <__mulsf3_pse+0xa0>
     f22:	88 23       	and	r24, r24
     f24:	4a f0       	brmi	.+18     	; 0xf38 <__mulsf3_pse+0x7a>
     f26:	ee 0f       	add	r30, r30
     f28:	ff 1f       	adc	r31, r31
     f2a:	bb 1f       	adc	r27, r27
     f2c:	66 1f       	adc	r22, r22
     f2e:	77 1f       	adc	r23, r23
     f30:	88 1f       	adc	r24, r24
     f32:	91 50       	subi	r25, 0x01	; 1
     f34:	50 40       	sbci	r21, 0x00	; 0
     f36:	a9 f7       	brne	.-22     	; 0xf22 <__mulsf3_pse+0x64>
     f38:	9e 3f       	cpi	r25, 0xFE	; 254
     f3a:	51 05       	cpc	r21, r1
     f3c:	80 f0       	brcs	.+32     	; 0xf5e <__mulsf3_pse+0xa0>
     f3e:	0c 94 f8 06 	jmp	0xdf0	; 0xdf0 <__fp_inf>
     f42:	0c 94 43 07 	jmp	0xe86	; 0xe86 <__fp_szero>
     f46:	5f 3f       	cpi	r21, 0xFF	; 255
     f48:	e4 f3       	brlt	.-8      	; 0xf42 <__mulsf3_pse+0x84>
     f4a:	98 3e       	cpi	r25, 0xE8	; 232
     f4c:	d4 f3       	brlt	.-12     	; 0xf42 <__mulsf3_pse+0x84>
     f4e:	86 95       	lsr	r24
     f50:	77 95       	ror	r23
     f52:	67 95       	ror	r22
     f54:	b7 95       	ror	r27
     f56:	f7 95       	ror	r31
     f58:	e7 95       	ror	r30
     f5a:	9f 5f       	subi	r25, 0xFF	; 255
     f5c:	c1 f7       	brne	.-16     	; 0xf4e <__mulsf3_pse+0x90>
     f5e:	fe 2b       	or	r31, r30
     f60:	88 0f       	add	r24, r24
     f62:	91 1d       	adc	r25, r1
     f64:	96 95       	lsr	r25
     f66:	87 95       	ror	r24
     f68:	97 f9       	bld	r25, 7
     f6a:	08 95       	ret

00000f6c <__divmodhi4>:
     f6c:	97 fb       	bst	r25, 7
     f6e:	07 2e       	mov	r0, r23
     f70:	16 f4       	brtc	.+4      	; 0xf76 <__divmodhi4+0xa>
     f72:	00 94       	com	r0
     f74:	07 d0       	rcall	.+14     	; 0xf84 <__divmodhi4_neg1>
     f76:	77 fd       	sbrc	r23, 7
     f78:	09 d0       	rcall	.+18     	; 0xf8c <__divmodhi4_neg2>
     f7a:	0e 94 ca 07 	call	0xf94	; 0xf94 <__udivmodhi4>
     f7e:	07 fc       	sbrc	r0, 7
     f80:	05 d0       	rcall	.+10     	; 0xf8c <__divmodhi4_neg2>
     f82:	3e f4       	brtc	.+14     	; 0xf92 <__divmodhi4_exit>

00000f84 <__divmodhi4_neg1>:
     f84:	90 95       	com	r25
     f86:	81 95       	neg	r24
     f88:	9f 4f       	sbci	r25, 0xFF	; 255
     f8a:	08 95       	ret

00000f8c <__divmodhi4_neg2>:
     f8c:	70 95       	com	r23
     f8e:	61 95       	neg	r22
     f90:	7f 4f       	sbci	r23, 0xFF	; 255

00000f92 <__divmodhi4_exit>:
     f92:	08 95       	ret

00000f94 <__udivmodhi4>:
     f94:	aa 1b       	sub	r26, r26
     f96:	bb 1b       	sub	r27, r27
     f98:	51 e1       	ldi	r21, 0x11	; 17
     f9a:	07 c0       	rjmp	.+14     	; 0xfaa <__udivmodhi4_ep>

00000f9c <__udivmodhi4_loop>:
     f9c:	aa 1f       	adc	r26, r26
     f9e:	bb 1f       	adc	r27, r27
     fa0:	a6 17       	cp	r26, r22
     fa2:	b7 07       	cpc	r27, r23
     fa4:	10 f0       	brcs	.+4      	; 0xfaa <__udivmodhi4_ep>
     fa6:	a6 1b       	sub	r26, r22
     fa8:	b7 0b       	sbc	r27, r23

00000faa <__udivmodhi4_ep>:
     faa:	88 1f       	adc	r24, r24
     fac:	99 1f       	adc	r25, r25
     fae:	5a 95       	dec	r21
     fb0:	a9 f7       	brne	.-22     	; 0xf9c <__udivmodhi4_loop>
     fb2:	80 95       	com	r24
     fb4:	90 95       	com	r25
     fb6:	bc 01       	movw	r22, r24
     fb8:	cd 01       	movw	r24, r26
     fba:	08 95       	ret

00000fbc <fdevopen>:
     fbc:	0f 93       	push	r16
     fbe:	1f 93       	push	r17
     fc0:	cf 93       	push	r28
     fc2:	df 93       	push	r29
     fc4:	00 97       	sbiw	r24, 0x00	; 0
     fc6:	31 f4       	brne	.+12     	; 0xfd4 <fdevopen+0x18>
     fc8:	61 15       	cp	r22, r1
     fca:	71 05       	cpc	r23, r1
     fcc:	19 f4       	brne	.+6      	; 0xfd4 <fdevopen+0x18>
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	3a c0       	rjmp	.+116    	; 0x1048 <fdevopen+0x8c>
     fd4:	8b 01       	movw	r16, r22
     fd6:	ec 01       	movw	r28, r24
     fd8:	6e e0       	ldi	r22, 0x0E	; 14
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	81 e0       	ldi	r24, 0x01	; 1
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <calloc>
     fe4:	fc 01       	movw	r30, r24
     fe6:	89 2b       	or	r24, r25
     fe8:	91 f3       	breq	.-28     	; 0xfce <fdevopen+0x12>
     fea:	80 e8       	ldi	r24, 0x80	; 128
     fec:	83 83       	std	Z+3, r24	; 0x03
     fee:	01 15       	cp	r16, r1
     ff0:	11 05       	cpc	r17, r1
     ff2:	71 f0       	breq	.+28     	; 0x1010 <fdevopen+0x54>
     ff4:	13 87       	std	Z+11, r17	; 0x0b
     ff6:	02 87       	std	Z+10, r16	; 0x0a
     ff8:	81 e8       	ldi	r24, 0x81	; 129
     ffa:	83 83       	std	Z+3, r24	; 0x03
     ffc:	80 91 c9 02 	lds	r24, 0x02C9	; 0x8002c9 <__iob>
    1000:	90 91 ca 02 	lds	r25, 0x02CA	; 0x8002ca <__iob+0x1>
    1004:	89 2b       	or	r24, r25
    1006:	21 f4       	brne	.+8      	; 0x1010 <fdevopen+0x54>
    1008:	f0 93 ca 02 	sts	0x02CA, r31	; 0x8002ca <__iob+0x1>
    100c:	e0 93 c9 02 	sts	0x02C9, r30	; 0x8002c9 <__iob>
    1010:	20 97       	sbiw	r28, 0x00	; 0
    1012:	c9 f0       	breq	.+50     	; 0x1046 <fdevopen+0x8a>
    1014:	d1 87       	std	Z+9, r29	; 0x09
    1016:	c0 87       	std	Z+8, r28	; 0x08
    1018:	83 81       	ldd	r24, Z+3	; 0x03
    101a:	82 60       	ori	r24, 0x02	; 2
    101c:	83 83       	std	Z+3, r24	; 0x03
    101e:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <__iob+0x2>
    1022:	90 91 cc 02 	lds	r25, 0x02CC	; 0x8002cc <__iob+0x3>
    1026:	89 2b       	or	r24, r25
    1028:	71 f4       	brne	.+28     	; 0x1046 <fdevopen+0x8a>
    102a:	f0 93 cc 02 	sts	0x02CC, r31	; 0x8002cc <__iob+0x3>
    102e:	e0 93 cb 02 	sts	0x02CB, r30	; 0x8002cb <__iob+0x2>
    1032:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <__iob+0x4>
    1036:	90 91 ce 02 	lds	r25, 0x02CE	; 0x8002ce <__iob+0x5>
    103a:	89 2b       	or	r24, r25
    103c:	21 f4       	brne	.+8      	; 0x1046 <fdevopen+0x8a>
    103e:	f0 93 ce 02 	sts	0x02CE, r31	; 0x8002ce <__iob+0x5>
    1042:	e0 93 cd 02 	sts	0x02CD, r30	; 0x8002cd <__iob+0x4>
    1046:	cf 01       	movw	r24, r30
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	1f 91       	pop	r17
    104e:	0f 91       	pop	r16
    1050:	08 95       	ret

00001052 <printf>:
    1052:	a0 e0       	ldi	r26, 0x00	; 0
    1054:	b0 e0       	ldi	r27, 0x00	; 0
    1056:	ef e2       	ldi	r30, 0x2F	; 47
    1058:	f8 e0       	ldi	r31, 0x08	; 8
    105a:	0c 94 54 0c 	jmp	0x18a8	; 0x18a8 <__prologue_saves__+0x20>
    105e:	ae 01       	movw	r20, r28
    1060:	4b 5f       	subi	r20, 0xFB	; 251
    1062:	5f 4f       	sbci	r21, 0xFF	; 255
    1064:	fa 01       	movw	r30, r20
    1066:	61 91       	ld	r22, Z+
    1068:	71 91       	ld	r23, Z+
    106a:	af 01       	movw	r20, r30
    106c:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <__iob+0x2>
    1070:	90 91 cc 02 	lds	r25, 0x02CC	; 0x8002cc <__iob+0x3>
    1074:	0e 94 6f 08 	call	0x10de	; 0x10de <vfprintf>
    1078:	e2 e0       	ldi	r30, 0x02	; 2
    107a:	0c 94 70 0c 	jmp	0x18e0	; 0x18e0 <__epilogue_restores__+0x20>

0000107e <puts>:
    107e:	0f 93       	push	r16
    1080:	1f 93       	push	r17
    1082:	cf 93       	push	r28
    1084:	df 93       	push	r29
    1086:	e0 91 cb 02 	lds	r30, 0x02CB	; 0x8002cb <__iob+0x2>
    108a:	f0 91 cc 02 	lds	r31, 0x02CC	; 0x8002cc <__iob+0x3>
    108e:	23 81       	ldd	r18, Z+3	; 0x03
    1090:	21 ff       	sbrs	r18, 1
    1092:	1b c0       	rjmp	.+54     	; 0x10ca <puts+0x4c>
    1094:	8c 01       	movw	r16, r24
    1096:	d0 e0       	ldi	r29, 0x00	; 0
    1098:	c0 e0       	ldi	r28, 0x00	; 0
    109a:	f8 01       	movw	r30, r16
    109c:	81 91       	ld	r24, Z+
    109e:	8f 01       	movw	r16, r30
    10a0:	60 91 cb 02 	lds	r22, 0x02CB	; 0x8002cb <__iob+0x2>
    10a4:	70 91 cc 02 	lds	r23, 0x02CC	; 0x8002cc <__iob+0x3>
    10a8:	db 01       	movw	r26, r22
    10aa:	18 96       	adiw	r26, 0x08	; 8
    10ac:	ed 91       	ld	r30, X+
    10ae:	fc 91       	ld	r31, X
    10b0:	19 97       	sbiw	r26, 0x09	; 9
    10b2:	88 23       	and	r24, r24
    10b4:	31 f0       	breq	.+12     	; 0x10c2 <puts+0x44>
    10b6:	09 95       	icall
    10b8:	89 2b       	or	r24, r25
    10ba:	79 f3       	breq	.-34     	; 0x109a <puts+0x1c>
    10bc:	df ef       	ldi	r29, 0xFF	; 255
    10be:	cf ef       	ldi	r28, 0xFF	; 255
    10c0:	ec cf       	rjmp	.-40     	; 0x109a <puts+0x1c>
    10c2:	8a e0       	ldi	r24, 0x0A	; 10
    10c4:	09 95       	icall
    10c6:	89 2b       	or	r24, r25
    10c8:	19 f0       	breq	.+6      	; 0x10d0 <puts+0x52>
    10ca:	8f ef       	ldi	r24, 0xFF	; 255
    10cc:	9f ef       	ldi	r25, 0xFF	; 255
    10ce:	02 c0       	rjmp	.+4      	; 0x10d4 <puts+0x56>
    10d0:	8d 2f       	mov	r24, r29
    10d2:	9c 2f       	mov	r25, r28
    10d4:	df 91       	pop	r29
    10d6:	cf 91       	pop	r28
    10d8:	1f 91       	pop	r17
    10da:	0f 91       	pop	r16
    10dc:	08 95       	ret

000010de <vfprintf>:
    10de:	ab e0       	ldi	r26, 0x0B	; 11
    10e0:	b0 e0       	ldi	r27, 0x00	; 0
    10e2:	e5 e7       	ldi	r30, 0x75	; 117
    10e4:	f8 e0       	ldi	r31, 0x08	; 8
    10e6:	0c 94 44 0c 	jmp	0x1888	; 0x1888 <__prologue_saves__>
    10ea:	6c 01       	movw	r12, r24
    10ec:	7b 01       	movw	r14, r22
    10ee:	8a 01       	movw	r16, r20
    10f0:	fc 01       	movw	r30, r24
    10f2:	17 82       	std	Z+7, r1	; 0x07
    10f4:	16 82       	std	Z+6, r1	; 0x06
    10f6:	83 81       	ldd	r24, Z+3	; 0x03
    10f8:	81 ff       	sbrs	r24, 1
    10fa:	cc c1       	rjmp	.+920    	; 0x1494 <vfprintf+0x3b6>
    10fc:	ce 01       	movw	r24, r28
    10fe:	01 96       	adiw	r24, 0x01	; 1
    1100:	3c 01       	movw	r6, r24
    1102:	f6 01       	movw	r30, r12
    1104:	93 81       	ldd	r25, Z+3	; 0x03
    1106:	f7 01       	movw	r30, r14
    1108:	93 fd       	sbrc	r25, 3
    110a:	85 91       	lpm	r24, Z+
    110c:	93 ff       	sbrs	r25, 3
    110e:	81 91       	ld	r24, Z+
    1110:	7f 01       	movw	r14, r30
    1112:	88 23       	and	r24, r24
    1114:	09 f4       	brne	.+2      	; 0x1118 <vfprintf+0x3a>
    1116:	ba c1       	rjmp	.+884    	; 0x148c <vfprintf+0x3ae>
    1118:	85 32       	cpi	r24, 0x25	; 37
    111a:	39 f4       	brne	.+14     	; 0x112a <vfprintf+0x4c>
    111c:	93 fd       	sbrc	r25, 3
    111e:	85 91       	lpm	r24, Z+
    1120:	93 ff       	sbrs	r25, 3
    1122:	81 91       	ld	r24, Z+
    1124:	7f 01       	movw	r14, r30
    1126:	85 32       	cpi	r24, 0x25	; 37
    1128:	29 f4       	brne	.+10     	; 0x1134 <vfprintf+0x56>
    112a:	b6 01       	movw	r22, r12
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1132:	e7 cf       	rjmp	.-50     	; 0x1102 <vfprintf+0x24>
    1134:	91 2c       	mov	r9, r1
    1136:	21 2c       	mov	r2, r1
    1138:	31 2c       	mov	r3, r1
    113a:	ff e1       	ldi	r31, 0x1F	; 31
    113c:	f3 15       	cp	r31, r3
    113e:	d8 f0       	brcs	.+54     	; 0x1176 <vfprintf+0x98>
    1140:	8b 32       	cpi	r24, 0x2B	; 43
    1142:	79 f0       	breq	.+30     	; 0x1162 <vfprintf+0x84>
    1144:	38 f4       	brcc	.+14     	; 0x1154 <vfprintf+0x76>
    1146:	80 32       	cpi	r24, 0x20	; 32
    1148:	79 f0       	breq	.+30     	; 0x1168 <vfprintf+0x8a>
    114a:	83 32       	cpi	r24, 0x23	; 35
    114c:	a1 f4       	brne	.+40     	; 0x1176 <vfprintf+0x98>
    114e:	23 2d       	mov	r18, r3
    1150:	20 61       	ori	r18, 0x10	; 16
    1152:	1d c0       	rjmp	.+58     	; 0x118e <vfprintf+0xb0>
    1154:	8d 32       	cpi	r24, 0x2D	; 45
    1156:	61 f0       	breq	.+24     	; 0x1170 <vfprintf+0x92>
    1158:	80 33       	cpi	r24, 0x30	; 48
    115a:	69 f4       	brne	.+26     	; 0x1176 <vfprintf+0x98>
    115c:	23 2d       	mov	r18, r3
    115e:	21 60       	ori	r18, 0x01	; 1
    1160:	16 c0       	rjmp	.+44     	; 0x118e <vfprintf+0xb0>
    1162:	83 2d       	mov	r24, r3
    1164:	82 60       	ori	r24, 0x02	; 2
    1166:	38 2e       	mov	r3, r24
    1168:	e3 2d       	mov	r30, r3
    116a:	e4 60       	ori	r30, 0x04	; 4
    116c:	3e 2e       	mov	r3, r30
    116e:	2a c0       	rjmp	.+84     	; 0x11c4 <vfprintf+0xe6>
    1170:	f3 2d       	mov	r31, r3
    1172:	f8 60       	ori	r31, 0x08	; 8
    1174:	1d c0       	rjmp	.+58     	; 0x11b0 <vfprintf+0xd2>
    1176:	37 fc       	sbrc	r3, 7
    1178:	2d c0       	rjmp	.+90     	; 0x11d4 <vfprintf+0xf6>
    117a:	20 ed       	ldi	r18, 0xD0	; 208
    117c:	28 0f       	add	r18, r24
    117e:	2a 30       	cpi	r18, 0x0A	; 10
    1180:	40 f0       	brcs	.+16     	; 0x1192 <vfprintf+0xb4>
    1182:	8e 32       	cpi	r24, 0x2E	; 46
    1184:	b9 f4       	brne	.+46     	; 0x11b4 <vfprintf+0xd6>
    1186:	36 fc       	sbrc	r3, 6
    1188:	81 c1       	rjmp	.+770    	; 0x148c <vfprintf+0x3ae>
    118a:	23 2d       	mov	r18, r3
    118c:	20 64       	ori	r18, 0x40	; 64
    118e:	32 2e       	mov	r3, r18
    1190:	19 c0       	rjmp	.+50     	; 0x11c4 <vfprintf+0xe6>
    1192:	36 fe       	sbrs	r3, 6
    1194:	06 c0       	rjmp	.+12     	; 0x11a2 <vfprintf+0xc4>
    1196:	8a e0       	ldi	r24, 0x0A	; 10
    1198:	98 9e       	mul	r9, r24
    119a:	20 0d       	add	r18, r0
    119c:	11 24       	eor	r1, r1
    119e:	92 2e       	mov	r9, r18
    11a0:	11 c0       	rjmp	.+34     	; 0x11c4 <vfprintf+0xe6>
    11a2:	ea e0       	ldi	r30, 0x0A	; 10
    11a4:	2e 9e       	mul	r2, r30
    11a6:	20 0d       	add	r18, r0
    11a8:	11 24       	eor	r1, r1
    11aa:	22 2e       	mov	r2, r18
    11ac:	f3 2d       	mov	r31, r3
    11ae:	f0 62       	ori	r31, 0x20	; 32
    11b0:	3f 2e       	mov	r3, r31
    11b2:	08 c0       	rjmp	.+16     	; 0x11c4 <vfprintf+0xe6>
    11b4:	8c 36       	cpi	r24, 0x6C	; 108
    11b6:	21 f4       	brne	.+8      	; 0x11c0 <vfprintf+0xe2>
    11b8:	83 2d       	mov	r24, r3
    11ba:	80 68       	ori	r24, 0x80	; 128
    11bc:	38 2e       	mov	r3, r24
    11be:	02 c0       	rjmp	.+4      	; 0x11c4 <vfprintf+0xe6>
    11c0:	88 36       	cpi	r24, 0x68	; 104
    11c2:	41 f4       	brne	.+16     	; 0x11d4 <vfprintf+0xf6>
    11c4:	f7 01       	movw	r30, r14
    11c6:	93 fd       	sbrc	r25, 3
    11c8:	85 91       	lpm	r24, Z+
    11ca:	93 ff       	sbrs	r25, 3
    11cc:	81 91       	ld	r24, Z+
    11ce:	7f 01       	movw	r14, r30
    11d0:	81 11       	cpse	r24, r1
    11d2:	b3 cf       	rjmp	.-154    	; 0x113a <vfprintf+0x5c>
    11d4:	98 2f       	mov	r25, r24
    11d6:	9f 7d       	andi	r25, 0xDF	; 223
    11d8:	95 54       	subi	r25, 0x45	; 69
    11da:	93 30       	cpi	r25, 0x03	; 3
    11dc:	28 f4       	brcc	.+10     	; 0x11e8 <vfprintf+0x10a>
    11de:	0c 5f       	subi	r16, 0xFC	; 252
    11e0:	1f 4f       	sbci	r17, 0xFF	; 255
    11e2:	9f e3       	ldi	r25, 0x3F	; 63
    11e4:	99 83       	std	Y+1, r25	; 0x01
    11e6:	0d c0       	rjmp	.+26     	; 0x1202 <vfprintf+0x124>
    11e8:	83 36       	cpi	r24, 0x63	; 99
    11ea:	31 f0       	breq	.+12     	; 0x11f8 <vfprintf+0x11a>
    11ec:	83 37       	cpi	r24, 0x73	; 115
    11ee:	71 f0       	breq	.+28     	; 0x120c <vfprintf+0x12e>
    11f0:	83 35       	cpi	r24, 0x53	; 83
    11f2:	09 f0       	breq	.+2      	; 0x11f6 <vfprintf+0x118>
    11f4:	59 c0       	rjmp	.+178    	; 0x12a8 <vfprintf+0x1ca>
    11f6:	21 c0       	rjmp	.+66     	; 0x123a <vfprintf+0x15c>
    11f8:	f8 01       	movw	r30, r16
    11fa:	80 81       	ld	r24, Z
    11fc:	89 83       	std	Y+1, r24	; 0x01
    11fe:	0e 5f       	subi	r16, 0xFE	; 254
    1200:	1f 4f       	sbci	r17, 0xFF	; 255
    1202:	88 24       	eor	r8, r8
    1204:	83 94       	inc	r8
    1206:	91 2c       	mov	r9, r1
    1208:	53 01       	movw	r10, r6
    120a:	13 c0       	rjmp	.+38     	; 0x1232 <vfprintf+0x154>
    120c:	28 01       	movw	r4, r16
    120e:	f2 e0       	ldi	r31, 0x02	; 2
    1210:	4f 0e       	add	r4, r31
    1212:	51 1c       	adc	r5, r1
    1214:	f8 01       	movw	r30, r16
    1216:	a0 80       	ld	r10, Z
    1218:	b1 80       	ldd	r11, Z+1	; 0x01
    121a:	36 fe       	sbrs	r3, 6
    121c:	03 c0       	rjmp	.+6      	; 0x1224 <vfprintf+0x146>
    121e:	69 2d       	mov	r22, r9
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	02 c0       	rjmp	.+4      	; 0x1228 <vfprintf+0x14a>
    1224:	6f ef       	ldi	r22, 0xFF	; 255
    1226:	7f ef       	ldi	r23, 0xFF	; 255
    1228:	c5 01       	movw	r24, r10
    122a:	0e 94 9f 0b 	call	0x173e	; 0x173e <strnlen>
    122e:	4c 01       	movw	r8, r24
    1230:	82 01       	movw	r16, r4
    1232:	f3 2d       	mov	r31, r3
    1234:	ff 77       	andi	r31, 0x7F	; 127
    1236:	3f 2e       	mov	r3, r31
    1238:	16 c0       	rjmp	.+44     	; 0x1266 <vfprintf+0x188>
    123a:	28 01       	movw	r4, r16
    123c:	22 e0       	ldi	r18, 0x02	; 2
    123e:	42 0e       	add	r4, r18
    1240:	51 1c       	adc	r5, r1
    1242:	f8 01       	movw	r30, r16
    1244:	a0 80       	ld	r10, Z
    1246:	b1 80       	ldd	r11, Z+1	; 0x01
    1248:	36 fe       	sbrs	r3, 6
    124a:	03 c0       	rjmp	.+6      	; 0x1252 <vfprintf+0x174>
    124c:	69 2d       	mov	r22, r9
    124e:	70 e0       	ldi	r23, 0x00	; 0
    1250:	02 c0       	rjmp	.+4      	; 0x1256 <vfprintf+0x178>
    1252:	6f ef       	ldi	r22, 0xFF	; 255
    1254:	7f ef       	ldi	r23, 0xFF	; 255
    1256:	c5 01       	movw	r24, r10
    1258:	0e 94 8d 0b 	call	0x171a	; 0x171a <strnlen_P>
    125c:	4c 01       	movw	r8, r24
    125e:	f3 2d       	mov	r31, r3
    1260:	f0 68       	ori	r31, 0x80	; 128
    1262:	3f 2e       	mov	r3, r31
    1264:	82 01       	movw	r16, r4
    1266:	33 fc       	sbrc	r3, 3
    1268:	1b c0       	rjmp	.+54     	; 0x12a0 <vfprintf+0x1c2>
    126a:	82 2d       	mov	r24, r2
    126c:	90 e0       	ldi	r25, 0x00	; 0
    126e:	88 16       	cp	r8, r24
    1270:	99 06       	cpc	r9, r25
    1272:	b0 f4       	brcc	.+44     	; 0x12a0 <vfprintf+0x1c2>
    1274:	b6 01       	movw	r22, r12
    1276:	80 e2       	ldi	r24, 0x20	; 32
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    127e:	2a 94       	dec	r2
    1280:	f4 cf       	rjmp	.-24     	; 0x126a <vfprintf+0x18c>
    1282:	f5 01       	movw	r30, r10
    1284:	37 fc       	sbrc	r3, 7
    1286:	85 91       	lpm	r24, Z+
    1288:	37 fe       	sbrs	r3, 7
    128a:	81 91       	ld	r24, Z+
    128c:	5f 01       	movw	r10, r30
    128e:	b6 01       	movw	r22, r12
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1296:	21 10       	cpse	r2, r1
    1298:	2a 94       	dec	r2
    129a:	21 e0       	ldi	r18, 0x01	; 1
    129c:	82 1a       	sub	r8, r18
    129e:	91 08       	sbc	r9, r1
    12a0:	81 14       	cp	r8, r1
    12a2:	91 04       	cpc	r9, r1
    12a4:	71 f7       	brne	.-36     	; 0x1282 <vfprintf+0x1a4>
    12a6:	e8 c0       	rjmp	.+464    	; 0x1478 <vfprintf+0x39a>
    12a8:	84 36       	cpi	r24, 0x64	; 100
    12aa:	11 f0       	breq	.+4      	; 0x12b0 <vfprintf+0x1d2>
    12ac:	89 36       	cpi	r24, 0x69	; 105
    12ae:	41 f5       	brne	.+80     	; 0x1300 <vfprintf+0x222>
    12b0:	f8 01       	movw	r30, r16
    12b2:	37 fe       	sbrs	r3, 7
    12b4:	07 c0       	rjmp	.+14     	; 0x12c4 <vfprintf+0x1e6>
    12b6:	60 81       	ld	r22, Z
    12b8:	71 81       	ldd	r23, Z+1	; 0x01
    12ba:	82 81       	ldd	r24, Z+2	; 0x02
    12bc:	93 81       	ldd	r25, Z+3	; 0x03
    12be:	0c 5f       	subi	r16, 0xFC	; 252
    12c0:	1f 4f       	sbci	r17, 0xFF	; 255
    12c2:	08 c0       	rjmp	.+16     	; 0x12d4 <vfprintf+0x1f6>
    12c4:	60 81       	ld	r22, Z
    12c6:	71 81       	ldd	r23, Z+1	; 0x01
    12c8:	07 2e       	mov	r0, r23
    12ca:	00 0c       	add	r0, r0
    12cc:	88 0b       	sbc	r24, r24
    12ce:	99 0b       	sbc	r25, r25
    12d0:	0e 5f       	subi	r16, 0xFE	; 254
    12d2:	1f 4f       	sbci	r17, 0xFF	; 255
    12d4:	f3 2d       	mov	r31, r3
    12d6:	ff 76       	andi	r31, 0x6F	; 111
    12d8:	3f 2e       	mov	r3, r31
    12da:	97 ff       	sbrs	r25, 7
    12dc:	09 c0       	rjmp	.+18     	; 0x12f0 <vfprintf+0x212>
    12de:	90 95       	com	r25
    12e0:	80 95       	com	r24
    12e2:	70 95       	com	r23
    12e4:	61 95       	neg	r22
    12e6:	7f 4f       	sbci	r23, 0xFF	; 255
    12e8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ea:	9f 4f       	sbci	r25, 0xFF	; 255
    12ec:	f0 68       	ori	r31, 0x80	; 128
    12ee:	3f 2e       	mov	r3, r31
    12f0:	2a e0       	ldi	r18, 0x0A	; 10
    12f2:	30 e0       	ldi	r19, 0x00	; 0
    12f4:	a3 01       	movw	r20, r6
    12f6:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__ultoa_invert>
    12fa:	88 2e       	mov	r8, r24
    12fc:	86 18       	sub	r8, r6
    12fe:	45 c0       	rjmp	.+138    	; 0x138a <vfprintf+0x2ac>
    1300:	85 37       	cpi	r24, 0x75	; 117
    1302:	31 f4       	brne	.+12     	; 0x1310 <vfprintf+0x232>
    1304:	23 2d       	mov	r18, r3
    1306:	2f 7e       	andi	r18, 0xEF	; 239
    1308:	b2 2e       	mov	r11, r18
    130a:	2a e0       	ldi	r18, 0x0A	; 10
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	25 c0       	rjmp	.+74     	; 0x135a <vfprintf+0x27c>
    1310:	93 2d       	mov	r25, r3
    1312:	99 7f       	andi	r25, 0xF9	; 249
    1314:	b9 2e       	mov	r11, r25
    1316:	8f 36       	cpi	r24, 0x6F	; 111
    1318:	c1 f0       	breq	.+48     	; 0x134a <vfprintf+0x26c>
    131a:	18 f4       	brcc	.+6      	; 0x1322 <vfprintf+0x244>
    131c:	88 35       	cpi	r24, 0x58	; 88
    131e:	79 f0       	breq	.+30     	; 0x133e <vfprintf+0x260>
    1320:	b5 c0       	rjmp	.+362    	; 0x148c <vfprintf+0x3ae>
    1322:	80 37       	cpi	r24, 0x70	; 112
    1324:	19 f0       	breq	.+6      	; 0x132c <vfprintf+0x24e>
    1326:	88 37       	cpi	r24, 0x78	; 120
    1328:	21 f0       	breq	.+8      	; 0x1332 <vfprintf+0x254>
    132a:	b0 c0       	rjmp	.+352    	; 0x148c <vfprintf+0x3ae>
    132c:	e9 2f       	mov	r30, r25
    132e:	e0 61       	ori	r30, 0x10	; 16
    1330:	be 2e       	mov	r11, r30
    1332:	b4 fe       	sbrs	r11, 4
    1334:	0d c0       	rjmp	.+26     	; 0x1350 <vfprintf+0x272>
    1336:	fb 2d       	mov	r31, r11
    1338:	f4 60       	ori	r31, 0x04	; 4
    133a:	bf 2e       	mov	r11, r31
    133c:	09 c0       	rjmp	.+18     	; 0x1350 <vfprintf+0x272>
    133e:	34 fe       	sbrs	r3, 4
    1340:	0a c0       	rjmp	.+20     	; 0x1356 <vfprintf+0x278>
    1342:	29 2f       	mov	r18, r25
    1344:	26 60       	ori	r18, 0x06	; 6
    1346:	b2 2e       	mov	r11, r18
    1348:	06 c0       	rjmp	.+12     	; 0x1356 <vfprintf+0x278>
    134a:	28 e0       	ldi	r18, 0x08	; 8
    134c:	30 e0       	ldi	r19, 0x00	; 0
    134e:	05 c0       	rjmp	.+10     	; 0x135a <vfprintf+0x27c>
    1350:	20 e1       	ldi	r18, 0x10	; 16
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	02 c0       	rjmp	.+4      	; 0x135a <vfprintf+0x27c>
    1356:	20 e1       	ldi	r18, 0x10	; 16
    1358:	32 e0       	ldi	r19, 0x02	; 2
    135a:	f8 01       	movw	r30, r16
    135c:	b7 fe       	sbrs	r11, 7
    135e:	07 c0       	rjmp	.+14     	; 0x136e <vfprintf+0x290>
    1360:	60 81       	ld	r22, Z
    1362:	71 81       	ldd	r23, Z+1	; 0x01
    1364:	82 81       	ldd	r24, Z+2	; 0x02
    1366:	93 81       	ldd	r25, Z+3	; 0x03
    1368:	0c 5f       	subi	r16, 0xFC	; 252
    136a:	1f 4f       	sbci	r17, 0xFF	; 255
    136c:	06 c0       	rjmp	.+12     	; 0x137a <vfprintf+0x29c>
    136e:	60 81       	ld	r22, Z
    1370:	71 81       	ldd	r23, Z+1	; 0x01
    1372:	80 e0       	ldi	r24, 0x00	; 0
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	0e 5f       	subi	r16, 0xFE	; 254
    1378:	1f 4f       	sbci	r17, 0xFF	; 255
    137a:	a3 01       	movw	r20, r6
    137c:	0e 94 e6 0b 	call	0x17cc	; 0x17cc <__ultoa_invert>
    1380:	88 2e       	mov	r8, r24
    1382:	86 18       	sub	r8, r6
    1384:	fb 2d       	mov	r31, r11
    1386:	ff 77       	andi	r31, 0x7F	; 127
    1388:	3f 2e       	mov	r3, r31
    138a:	36 fe       	sbrs	r3, 6
    138c:	0d c0       	rjmp	.+26     	; 0x13a8 <vfprintf+0x2ca>
    138e:	23 2d       	mov	r18, r3
    1390:	2e 7f       	andi	r18, 0xFE	; 254
    1392:	a2 2e       	mov	r10, r18
    1394:	89 14       	cp	r8, r9
    1396:	58 f4       	brcc	.+22     	; 0x13ae <vfprintf+0x2d0>
    1398:	34 fe       	sbrs	r3, 4
    139a:	0b c0       	rjmp	.+22     	; 0x13b2 <vfprintf+0x2d4>
    139c:	32 fc       	sbrc	r3, 2
    139e:	09 c0       	rjmp	.+18     	; 0x13b2 <vfprintf+0x2d4>
    13a0:	83 2d       	mov	r24, r3
    13a2:	8e 7e       	andi	r24, 0xEE	; 238
    13a4:	a8 2e       	mov	r10, r24
    13a6:	05 c0       	rjmp	.+10     	; 0x13b2 <vfprintf+0x2d4>
    13a8:	b8 2c       	mov	r11, r8
    13aa:	a3 2c       	mov	r10, r3
    13ac:	03 c0       	rjmp	.+6      	; 0x13b4 <vfprintf+0x2d6>
    13ae:	b8 2c       	mov	r11, r8
    13b0:	01 c0       	rjmp	.+2      	; 0x13b4 <vfprintf+0x2d6>
    13b2:	b9 2c       	mov	r11, r9
    13b4:	a4 fe       	sbrs	r10, 4
    13b6:	0f c0       	rjmp	.+30     	; 0x13d6 <vfprintf+0x2f8>
    13b8:	fe 01       	movw	r30, r28
    13ba:	e8 0d       	add	r30, r8
    13bc:	f1 1d       	adc	r31, r1
    13be:	80 81       	ld	r24, Z
    13c0:	80 33       	cpi	r24, 0x30	; 48
    13c2:	21 f4       	brne	.+8      	; 0x13cc <vfprintf+0x2ee>
    13c4:	9a 2d       	mov	r25, r10
    13c6:	99 7e       	andi	r25, 0xE9	; 233
    13c8:	a9 2e       	mov	r10, r25
    13ca:	09 c0       	rjmp	.+18     	; 0x13de <vfprintf+0x300>
    13cc:	a2 fe       	sbrs	r10, 2
    13ce:	06 c0       	rjmp	.+12     	; 0x13dc <vfprintf+0x2fe>
    13d0:	b3 94       	inc	r11
    13d2:	b3 94       	inc	r11
    13d4:	04 c0       	rjmp	.+8      	; 0x13de <vfprintf+0x300>
    13d6:	8a 2d       	mov	r24, r10
    13d8:	86 78       	andi	r24, 0x86	; 134
    13da:	09 f0       	breq	.+2      	; 0x13de <vfprintf+0x300>
    13dc:	b3 94       	inc	r11
    13de:	a3 fc       	sbrc	r10, 3
    13e0:	11 c0       	rjmp	.+34     	; 0x1404 <vfprintf+0x326>
    13e2:	a0 fe       	sbrs	r10, 0
    13e4:	06 c0       	rjmp	.+12     	; 0x13f2 <vfprintf+0x314>
    13e6:	b2 14       	cp	r11, r2
    13e8:	88 f4       	brcc	.+34     	; 0x140c <vfprintf+0x32e>
    13ea:	28 0c       	add	r2, r8
    13ec:	92 2c       	mov	r9, r2
    13ee:	9b 18       	sub	r9, r11
    13f0:	0e c0       	rjmp	.+28     	; 0x140e <vfprintf+0x330>
    13f2:	b2 14       	cp	r11, r2
    13f4:	60 f4       	brcc	.+24     	; 0x140e <vfprintf+0x330>
    13f6:	b6 01       	movw	r22, r12
    13f8:	80 e2       	ldi	r24, 0x20	; 32
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1400:	b3 94       	inc	r11
    1402:	f7 cf       	rjmp	.-18     	; 0x13f2 <vfprintf+0x314>
    1404:	b2 14       	cp	r11, r2
    1406:	18 f4       	brcc	.+6      	; 0x140e <vfprintf+0x330>
    1408:	2b 18       	sub	r2, r11
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <vfprintf+0x332>
    140c:	98 2c       	mov	r9, r8
    140e:	21 2c       	mov	r2, r1
    1410:	a4 fe       	sbrs	r10, 4
    1412:	10 c0       	rjmp	.+32     	; 0x1434 <vfprintf+0x356>
    1414:	b6 01       	movw	r22, r12
    1416:	80 e3       	ldi	r24, 0x30	; 48
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    141e:	a2 fe       	sbrs	r10, 2
    1420:	17 c0       	rjmp	.+46     	; 0x1450 <vfprintf+0x372>
    1422:	a1 fc       	sbrc	r10, 1
    1424:	03 c0       	rjmp	.+6      	; 0x142c <vfprintf+0x34e>
    1426:	88 e7       	ldi	r24, 0x78	; 120
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <vfprintf+0x352>
    142c:	88 e5       	ldi	r24, 0x58	; 88
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	b6 01       	movw	r22, r12
    1432:	0c c0       	rjmp	.+24     	; 0x144c <vfprintf+0x36e>
    1434:	8a 2d       	mov	r24, r10
    1436:	86 78       	andi	r24, 0x86	; 134
    1438:	59 f0       	breq	.+22     	; 0x1450 <vfprintf+0x372>
    143a:	a1 fe       	sbrs	r10, 1
    143c:	02 c0       	rjmp	.+4      	; 0x1442 <vfprintf+0x364>
    143e:	8b e2       	ldi	r24, 0x2B	; 43
    1440:	01 c0       	rjmp	.+2      	; 0x1444 <vfprintf+0x366>
    1442:	80 e2       	ldi	r24, 0x20	; 32
    1444:	a7 fc       	sbrc	r10, 7
    1446:	8d e2       	ldi	r24, 0x2D	; 45
    1448:	b6 01       	movw	r22, r12
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1450:	89 14       	cp	r8, r9
    1452:	38 f4       	brcc	.+14     	; 0x1462 <vfprintf+0x384>
    1454:	b6 01       	movw	r22, r12
    1456:	80 e3       	ldi	r24, 0x30	; 48
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    145e:	9a 94       	dec	r9
    1460:	f7 cf       	rjmp	.-18     	; 0x1450 <vfprintf+0x372>
    1462:	8a 94       	dec	r8
    1464:	f3 01       	movw	r30, r6
    1466:	e8 0d       	add	r30, r8
    1468:	f1 1d       	adc	r31, r1
    146a:	80 81       	ld	r24, Z
    146c:	b6 01       	movw	r22, r12
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1474:	81 10       	cpse	r8, r1
    1476:	f5 cf       	rjmp	.-22     	; 0x1462 <vfprintf+0x384>
    1478:	22 20       	and	r2, r2
    147a:	09 f4       	brne	.+2      	; 0x147e <vfprintf+0x3a0>
    147c:	42 ce       	rjmp	.-892    	; 0x1102 <vfprintf+0x24>
    147e:	b6 01       	movw	r22, r12
    1480:	80 e2       	ldi	r24, 0x20	; 32
    1482:	90 e0       	ldi	r25, 0x00	; 0
    1484:	0e 94 aa 0b 	call	0x1754	; 0x1754 <fputc>
    1488:	2a 94       	dec	r2
    148a:	f6 cf       	rjmp	.-20     	; 0x1478 <vfprintf+0x39a>
    148c:	f6 01       	movw	r30, r12
    148e:	86 81       	ldd	r24, Z+6	; 0x06
    1490:	97 81       	ldd	r25, Z+7	; 0x07
    1492:	02 c0       	rjmp	.+4      	; 0x1498 <vfprintf+0x3ba>
    1494:	8f ef       	ldi	r24, 0xFF	; 255
    1496:	9f ef       	ldi	r25, 0xFF	; 255
    1498:	2b 96       	adiw	r28, 0x0b	; 11
    149a:	e2 e1       	ldi	r30, 0x12	; 18
    149c:	0c 94 60 0c 	jmp	0x18c0	; 0x18c0 <__epilogue_restores__>

000014a0 <calloc>:
    14a0:	0f 93       	push	r16
    14a2:	1f 93       	push	r17
    14a4:	cf 93       	push	r28
    14a6:	df 93       	push	r29
    14a8:	86 9f       	mul	r24, r22
    14aa:	80 01       	movw	r16, r0
    14ac:	87 9f       	mul	r24, r23
    14ae:	10 0d       	add	r17, r0
    14b0:	96 9f       	mul	r25, r22
    14b2:	10 0d       	add	r17, r0
    14b4:	11 24       	eor	r1, r1
    14b6:	c8 01       	movw	r24, r16
    14b8:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <malloc>
    14bc:	ec 01       	movw	r28, r24
    14be:	00 97       	sbiw	r24, 0x00	; 0
    14c0:	29 f0       	breq	.+10     	; 0x14cc <calloc+0x2c>
    14c2:	a8 01       	movw	r20, r16
    14c4:	60 e0       	ldi	r22, 0x00	; 0
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	0e 94 98 0b 	call	0x1730	; 0x1730 <memset>
    14cc:	ce 01       	movw	r24, r28
    14ce:	df 91       	pop	r29
    14d0:	cf 91       	pop	r28
    14d2:	1f 91       	pop	r17
    14d4:	0f 91       	pop	r16
    14d6:	08 95       	ret

000014d8 <malloc>:
    14d8:	0f 93       	push	r16
    14da:	1f 93       	push	r17
    14dc:	cf 93       	push	r28
    14de:	df 93       	push	r29
    14e0:	82 30       	cpi	r24, 0x02	; 2
    14e2:	91 05       	cpc	r25, r1
    14e4:	10 f4       	brcc	.+4      	; 0x14ea <malloc+0x12>
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	e0 91 d1 02 	lds	r30, 0x02D1	; 0x8002d1 <__flp>
    14ee:	f0 91 d2 02 	lds	r31, 0x02D2	; 0x8002d2 <__flp+0x1>
    14f2:	20 e0       	ldi	r18, 0x00	; 0
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	a0 e0       	ldi	r26, 0x00	; 0
    14f8:	b0 e0       	ldi	r27, 0x00	; 0
    14fa:	30 97       	sbiw	r30, 0x00	; 0
    14fc:	19 f1       	breq	.+70     	; 0x1544 <malloc+0x6c>
    14fe:	40 81       	ld	r20, Z
    1500:	51 81       	ldd	r21, Z+1	; 0x01
    1502:	02 81       	ldd	r16, Z+2	; 0x02
    1504:	13 81       	ldd	r17, Z+3	; 0x03
    1506:	48 17       	cp	r20, r24
    1508:	59 07       	cpc	r21, r25
    150a:	c8 f0       	brcs	.+50     	; 0x153e <malloc+0x66>
    150c:	84 17       	cp	r24, r20
    150e:	95 07       	cpc	r25, r21
    1510:	69 f4       	brne	.+26     	; 0x152c <malloc+0x54>
    1512:	10 97       	sbiw	r26, 0x00	; 0
    1514:	31 f0       	breq	.+12     	; 0x1522 <malloc+0x4a>
    1516:	12 96       	adiw	r26, 0x02	; 2
    1518:	0c 93       	st	X, r16
    151a:	12 97       	sbiw	r26, 0x02	; 2
    151c:	13 96       	adiw	r26, 0x03	; 3
    151e:	1c 93       	st	X, r17
    1520:	27 c0       	rjmp	.+78     	; 0x1570 <malloc+0x98>
    1522:	00 93 d1 02 	sts	0x02D1, r16	; 0x8002d1 <__flp>
    1526:	10 93 d2 02 	sts	0x02D2, r17	; 0x8002d2 <__flp+0x1>
    152a:	22 c0       	rjmp	.+68     	; 0x1570 <malloc+0x98>
    152c:	21 15       	cp	r18, r1
    152e:	31 05       	cpc	r19, r1
    1530:	19 f0       	breq	.+6      	; 0x1538 <malloc+0x60>
    1532:	42 17       	cp	r20, r18
    1534:	53 07       	cpc	r21, r19
    1536:	18 f4       	brcc	.+6      	; 0x153e <malloc+0x66>
    1538:	9a 01       	movw	r18, r20
    153a:	bd 01       	movw	r22, r26
    153c:	ef 01       	movw	r28, r30
    153e:	df 01       	movw	r26, r30
    1540:	f8 01       	movw	r30, r16
    1542:	db cf       	rjmp	.-74     	; 0x14fa <malloc+0x22>
    1544:	21 15       	cp	r18, r1
    1546:	31 05       	cpc	r19, r1
    1548:	f9 f0       	breq	.+62     	; 0x1588 <malloc+0xb0>
    154a:	28 1b       	sub	r18, r24
    154c:	39 0b       	sbc	r19, r25
    154e:	24 30       	cpi	r18, 0x04	; 4
    1550:	31 05       	cpc	r19, r1
    1552:	80 f4       	brcc	.+32     	; 0x1574 <malloc+0x9c>
    1554:	8a 81       	ldd	r24, Y+2	; 0x02
    1556:	9b 81       	ldd	r25, Y+3	; 0x03
    1558:	61 15       	cp	r22, r1
    155a:	71 05       	cpc	r23, r1
    155c:	21 f0       	breq	.+8      	; 0x1566 <malloc+0x8e>
    155e:	fb 01       	movw	r30, r22
    1560:	93 83       	std	Z+3, r25	; 0x03
    1562:	82 83       	std	Z+2, r24	; 0x02
    1564:	04 c0       	rjmp	.+8      	; 0x156e <malloc+0x96>
    1566:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <__flp+0x1>
    156a:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <__flp>
    156e:	fe 01       	movw	r30, r28
    1570:	32 96       	adiw	r30, 0x02	; 2
    1572:	44 c0       	rjmp	.+136    	; 0x15fc <malloc+0x124>
    1574:	fe 01       	movw	r30, r28
    1576:	e2 0f       	add	r30, r18
    1578:	f3 1f       	adc	r31, r19
    157a:	81 93       	st	Z+, r24
    157c:	91 93       	st	Z+, r25
    157e:	22 50       	subi	r18, 0x02	; 2
    1580:	31 09       	sbc	r19, r1
    1582:	39 83       	std	Y+1, r19	; 0x01
    1584:	28 83       	st	Y, r18
    1586:	3a c0       	rjmp	.+116    	; 0x15fc <malloc+0x124>
    1588:	20 91 cf 02 	lds	r18, 0x02CF	; 0x8002cf <__brkval>
    158c:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <__brkval+0x1>
    1590:	23 2b       	or	r18, r19
    1592:	41 f4       	brne	.+16     	; 0x15a4 <malloc+0xcc>
    1594:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    1598:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    159c:	30 93 d0 02 	sts	0x02D0, r19	; 0x8002d0 <__brkval+0x1>
    15a0:	20 93 cf 02 	sts	0x02CF, r18	; 0x8002cf <__brkval>
    15a4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    15a8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    15ac:	21 15       	cp	r18, r1
    15ae:	31 05       	cpc	r19, r1
    15b0:	41 f4       	brne	.+16     	; 0x15c2 <malloc+0xea>
    15b2:	2d b7       	in	r18, 0x3d	; 61
    15b4:	3e b7       	in	r19, 0x3e	; 62
    15b6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    15ba:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    15be:	24 1b       	sub	r18, r20
    15c0:	35 0b       	sbc	r19, r21
    15c2:	e0 91 cf 02 	lds	r30, 0x02CF	; 0x8002cf <__brkval>
    15c6:	f0 91 d0 02 	lds	r31, 0x02D0	; 0x8002d0 <__brkval+0x1>
    15ca:	e2 17       	cp	r30, r18
    15cc:	f3 07       	cpc	r31, r19
    15ce:	a0 f4       	brcc	.+40     	; 0x15f8 <malloc+0x120>
    15d0:	2e 1b       	sub	r18, r30
    15d2:	3f 0b       	sbc	r19, r31
    15d4:	28 17       	cp	r18, r24
    15d6:	39 07       	cpc	r19, r25
    15d8:	78 f0       	brcs	.+30     	; 0x15f8 <malloc+0x120>
    15da:	ac 01       	movw	r20, r24
    15dc:	4e 5f       	subi	r20, 0xFE	; 254
    15de:	5f 4f       	sbci	r21, 0xFF	; 255
    15e0:	24 17       	cp	r18, r20
    15e2:	35 07       	cpc	r19, r21
    15e4:	48 f0       	brcs	.+18     	; 0x15f8 <malloc+0x120>
    15e6:	4e 0f       	add	r20, r30
    15e8:	5f 1f       	adc	r21, r31
    15ea:	50 93 d0 02 	sts	0x02D0, r21	; 0x8002d0 <__brkval+0x1>
    15ee:	40 93 cf 02 	sts	0x02CF, r20	; 0x8002cf <__brkval>
    15f2:	81 93       	st	Z+, r24
    15f4:	91 93       	st	Z+, r25
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <malloc+0x124>
    15f8:	e0 e0       	ldi	r30, 0x00	; 0
    15fa:	f0 e0       	ldi	r31, 0x00	; 0
    15fc:	cf 01       	movw	r24, r30
    15fe:	df 91       	pop	r29
    1600:	cf 91       	pop	r28
    1602:	1f 91       	pop	r17
    1604:	0f 91       	pop	r16
    1606:	08 95       	ret

00001608 <free>:
    1608:	cf 93       	push	r28
    160a:	df 93       	push	r29
    160c:	00 97       	sbiw	r24, 0x00	; 0
    160e:	09 f4       	brne	.+2      	; 0x1612 <free+0xa>
    1610:	81 c0       	rjmp	.+258    	; 0x1714 <free+0x10c>
    1612:	fc 01       	movw	r30, r24
    1614:	32 97       	sbiw	r30, 0x02	; 2
    1616:	13 82       	std	Z+3, r1	; 0x03
    1618:	12 82       	std	Z+2, r1	; 0x02
    161a:	a0 91 d1 02 	lds	r26, 0x02D1	; 0x8002d1 <__flp>
    161e:	b0 91 d2 02 	lds	r27, 0x02D2	; 0x8002d2 <__flp+0x1>
    1622:	10 97       	sbiw	r26, 0x00	; 0
    1624:	81 f4       	brne	.+32     	; 0x1646 <free+0x3e>
    1626:	20 81       	ld	r18, Z
    1628:	31 81       	ldd	r19, Z+1	; 0x01
    162a:	82 0f       	add	r24, r18
    162c:	93 1f       	adc	r25, r19
    162e:	20 91 cf 02 	lds	r18, 0x02CF	; 0x8002cf <__brkval>
    1632:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <__brkval+0x1>
    1636:	28 17       	cp	r18, r24
    1638:	39 07       	cpc	r19, r25
    163a:	51 f5       	brne	.+84     	; 0x1690 <free+0x88>
    163c:	f0 93 d0 02 	sts	0x02D0, r31	; 0x8002d0 <__brkval+0x1>
    1640:	e0 93 cf 02 	sts	0x02CF, r30	; 0x8002cf <__brkval>
    1644:	67 c0       	rjmp	.+206    	; 0x1714 <free+0x10c>
    1646:	ed 01       	movw	r28, r26
    1648:	20 e0       	ldi	r18, 0x00	; 0
    164a:	30 e0       	ldi	r19, 0x00	; 0
    164c:	ce 17       	cp	r28, r30
    164e:	df 07       	cpc	r29, r31
    1650:	40 f4       	brcc	.+16     	; 0x1662 <free+0x5a>
    1652:	4a 81       	ldd	r20, Y+2	; 0x02
    1654:	5b 81       	ldd	r21, Y+3	; 0x03
    1656:	9e 01       	movw	r18, r28
    1658:	41 15       	cp	r20, r1
    165a:	51 05       	cpc	r21, r1
    165c:	f1 f0       	breq	.+60     	; 0x169a <free+0x92>
    165e:	ea 01       	movw	r28, r20
    1660:	f5 cf       	rjmp	.-22     	; 0x164c <free+0x44>
    1662:	d3 83       	std	Z+3, r29	; 0x03
    1664:	c2 83       	std	Z+2, r28	; 0x02
    1666:	40 81       	ld	r20, Z
    1668:	51 81       	ldd	r21, Z+1	; 0x01
    166a:	84 0f       	add	r24, r20
    166c:	95 1f       	adc	r25, r21
    166e:	c8 17       	cp	r28, r24
    1670:	d9 07       	cpc	r29, r25
    1672:	59 f4       	brne	.+22     	; 0x168a <free+0x82>
    1674:	88 81       	ld	r24, Y
    1676:	99 81       	ldd	r25, Y+1	; 0x01
    1678:	84 0f       	add	r24, r20
    167a:	95 1f       	adc	r25, r21
    167c:	02 96       	adiw	r24, 0x02	; 2
    167e:	91 83       	std	Z+1, r25	; 0x01
    1680:	80 83       	st	Z, r24
    1682:	8a 81       	ldd	r24, Y+2	; 0x02
    1684:	9b 81       	ldd	r25, Y+3	; 0x03
    1686:	93 83       	std	Z+3, r25	; 0x03
    1688:	82 83       	std	Z+2, r24	; 0x02
    168a:	21 15       	cp	r18, r1
    168c:	31 05       	cpc	r19, r1
    168e:	29 f4       	brne	.+10     	; 0x169a <free+0x92>
    1690:	f0 93 d2 02 	sts	0x02D2, r31	; 0x8002d2 <__flp+0x1>
    1694:	e0 93 d1 02 	sts	0x02D1, r30	; 0x8002d1 <__flp>
    1698:	3d c0       	rjmp	.+122    	; 0x1714 <free+0x10c>
    169a:	e9 01       	movw	r28, r18
    169c:	fb 83       	std	Y+3, r31	; 0x03
    169e:	ea 83       	std	Y+2, r30	; 0x02
    16a0:	49 91       	ld	r20, Y+
    16a2:	59 91       	ld	r21, Y+
    16a4:	c4 0f       	add	r28, r20
    16a6:	d5 1f       	adc	r29, r21
    16a8:	ec 17       	cp	r30, r28
    16aa:	fd 07       	cpc	r31, r29
    16ac:	61 f4       	brne	.+24     	; 0x16c6 <free+0xbe>
    16ae:	80 81       	ld	r24, Z
    16b0:	91 81       	ldd	r25, Z+1	; 0x01
    16b2:	84 0f       	add	r24, r20
    16b4:	95 1f       	adc	r25, r21
    16b6:	02 96       	adiw	r24, 0x02	; 2
    16b8:	e9 01       	movw	r28, r18
    16ba:	99 83       	std	Y+1, r25	; 0x01
    16bc:	88 83       	st	Y, r24
    16be:	82 81       	ldd	r24, Z+2	; 0x02
    16c0:	93 81       	ldd	r25, Z+3	; 0x03
    16c2:	9b 83       	std	Y+3, r25	; 0x03
    16c4:	8a 83       	std	Y+2, r24	; 0x02
    16c6:	e0 e0       	ldi	r30, 0x00	; 0
    16c8:	f0 e0       	ldi	r31, 0x00	; 0
    16ca:	12 96       	adiw	r26, 0x02	; 2
    16cc:	8d 91       	ld	r24, X+
    16ce:	9c 91       	ld	r25, X
    16d0:	13 97       	sbiw	r26, 0x03	; 3
    16d2:	00 97       	sbiw	r24, 0x00	; 0
    16d4:	19 f0       	breq	.+6      	; 0x16dc <free+0xd4>
    16d6:	fd 01       	movw	r30, r26
    16d8:	dc 01       	movw	r26, r24
    16da:	f7 cf       	rjmp	.-18     	; 0x16ca <free+0xc2>
    16dc:	8d 91       	ld	r24, X+
    16de:	9c 91       	ld	r25, X
    16e0:	11 97       	sbiw	r26, 0x01	; 1
    16e2:	9d 01       	movw	r18, r26
    16e4:	2e 5f       	subi	r18, 0xFE	; 254
    16e6:	3f 4f       	sbci	r19, 0xFF	; 255
    16e8:	82 0f       	add	r24, r18
    16ea:	93 1f       	adc	r25, r19
    16ec:	20 91 cf 02 	lds	r18, 0x02CF	; 0x8002cf <__brkval>
    16f0:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <__brkval+0x1>
    16f4:	28 17       	cp	r18, r24
    16f6:	39 07       	cpc	r19, r25
    16f8:	69 f4       	brne	.+26     	; 0x1714 <free+0x10c>
    16fa:	30 97       	sbiw	r30, 0x00	; 0
    16fc:	29 f4       	brne	.+10     	; 0x1708 <free+0x100>
    16fe:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <__flp+0x1>
    1702:	10 92 d1 02 	sts	0x02D1, r1	; 0x8002d1 <__flp>
    1706:	02 c0       	rjmp	.+4      	; 0x170c <free+0x104>
    1708:	13 82       	std	Z+3, r1	; 0x03
    170a:	12 82       	std	Z+2, r1	; 0x02
    170c:	b0 93 d0 02 	sts	0x02D0, r27	; 0x8002d0 <__brkval+0x1>
    1710:	a0 93 cf 02 	sts	0x02CF, r26	; 0x8002cf <__brkval>
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	08 95       	ret

0000171a <strnlen_P>:
    171a:	fc 01       	movw	r30, r24
    171c:	05 90       	lpm	r0, Z+
    171e:	61 50       	subi	r22, 0x01	; 1
    1720:	70 40       	sbci	r23, 0x00	; 0
    1722:	01 10       	cpse	r0, r1
    1724:	d8 f7       	brcc	.-10     	; 0x171c <strnlen_P+0x2>
    1726:	80 95       	com	r24
    1728:	90 95       	com	r25
    172a:	8e 0f       	add	r24, r30
    172c:	9f 1f       	adc	r25, r31
    172e:	08 95       	ret

00001730 <memset>:
    1730:	dc 01       	movw	r26, r24
    1732:	01 c0       	rjmp	.+2      	; 0x1736 <memset+0x6>
    1734:	6d 93       	st	X+, r22
    1736:	41 50       	subi	r20, 0x01	; 1
    1738:	50 40       	sbci	r21, 0x00	; 0
    173a:	e0 f7       	brcc	.-8      	; 0x1734 <memset+0x4>
    173c:	08 95       	ret

0000173e <strnlen>:
    173e:	fc 01       	movw	r30, r24
    1740:	61 50       	subi	r22, 0x01	; 1
    1742:	70 40       	sbci	r23, 0x00	; 0
    1744:	01 90       	ld	r0, Z+
    1746:	01 10       	cpse	r0, r1
    1748:	d8 f7       	brcc	.-10     	; 0x1740 <strnlen+0x2>
    174a:	80 95       	com	r24
    174c:	90 95       	com	r25
    174e:	8e 0f       	add	r24, r30
    1750:	9f 1f       	adc	r25, r31
    1752:	08 95       	ret

00001754 <fputc>:
    1754:	0f 93       	push	r16
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	fb 01       	movw	r30, r22
    175e:	23 81       	ldd	r18, Z+3	; 0x03
    1760:	21 fd       	sbrc	r18, 1
    1762:	03 c0       	rjmp	.+6      	; 0x176a <fputc+0x16>
    1764:	8f ef       	ldi	r24, 0xFF	; 255
    1766:	9f ef       	ldi	r25, 0xFF	; 255
    1768:	2c c0       	rjmp	.+88     	; 0x17c2 <fputc+0x6e>
    176a:	22 ff       	sbrs	r18, 2
    176c:	16 c0       	rjmp	.+44     	; 0x179a <fputc+0x46>
    176e:	46 81       	ldd	r20, Z+6	; 0x06
    1770:	57 81       	ldd	r21, Z+7	; 0x07
    1772:	24 81       	ldd	r18, Z+4	; 0x04
    1774:	35 81       	ldd	r19, Z+5	; 0x05
    1776:	42 17       	cp	r20, r18
    1778:	53 07       	cpc	r21, r19
    177a:	44 f4       	brge	.+16     	; 0x178c <fputc+0x38>
    177c:	a0 81       	ld	r26, Z
    177e:	b1 81       	ldd	r27, Z+1	; 0x01
    1780:	9d 01       	movw	r18, r26
    1782:	2f 5f       	subi	r18, 0xFF	; 255
    1784:	3f 4f       	sbci	r19, 0xFF	; 255
    1786:	31 83       	std	Z+1, r19	; 0x01
    1788:	20 83       	st	Z, r18
    178a:	8c 93       	st	X, r24
    178c:	26 81       	ldd	r18, Z+6	; 0x06
    178e:	37 81       	ldd	r19, Z+7	; 0x07
    1790:	2f 5f       	subi	r18, 0xFF	; 255
    1792:	3f 4f       	sbci	r19, 0xFF	; 255
    1794:	37 83       	std	Z+7, r19	; 0x07
    1796:	26 83       	std	Z+6, r18	; 0x06
    1798:	14 c0       	rjmp	.+40     	; 0x17c2 <fputc+0x6e>
    179a:	8b 01       	movw	r16, r22
    179c:	ec 01       	movw	r28, r24
    179e:	fb 01       	movw	r30, r22
    17a0:	00 84       	ldd	r0, Z+8	; 0x08
    17a2:	f1 85       	ldd	r31, Z+9	; 0x09
    17a4:	e0 2d       	mov	r30, r0
    17a6:	09 95       	icall
    17a8:	89 2b       	or	r24, r25
    17aa:	e1 f6       	brne	.-72     	; 0x1764 <fputc+0x10>
    17ac:	d8 01       	movw	r26, r16
    17ae:	16 96       	adiw	r26, 0x06	; 6
    17b0:	8d 91       	ld	r24, X+
    17b2:	9c 91       	ld	r25, X
    17b4:	17 97       	sbiw	r26, 0x07	; 7
    17b6:	01 96       	adiw	r24, 0x01	; 1
    17b8:	17 96       	adiw	r26, 0x07	; 7
    17ba:	9c 93       	st	X, r25
    17bc:	8e 93       	st	-X, r24
    17be:	16 97       	sbiw	r26, 0x06	; 6
    17c0:	ce 01       	movw	r24, r28
    17c2:	df 91       	pop	r29
    17c4:	cf 91       	pop	r28
    17c6:	1f 91       	pop	r17
    17c8:	0f 91       	pop	r16
    17ca:	08 95       	ret

000017cc <__ultoa_invert>:
    17cc:	fa 01       	movw	r30, r20
    17ce:	aa 27       	eor	r26, r26
    17d0:	28 30       	cpi	r18, 0x08	; 8
    17d2:	51 f1       	breq	.+84     	; 0x1828 <__ultoa_invert+0x5c>
    17d4:	20 31       	cpi	r18, 0x10	; 16
    17d6:	81 f1       	breq	.+96     	; 0x1838 <__ultoa_invert+0x6c>
    17d8:	e8 94       	clt
    17da:	6f 93       	push	r22
    17dc:	6e 7f       	andi	r22, 0xFE	; 254
    17de:	6e 5f       	subi	r22, 0xFE	; 254
    17e0:	7f 4f       	sbci	r23, 0xFF	; 255
    17e2:	8f 4f       	sbci	r24, 0xFF	; 255
    17e4:	9f 4f       	sbci	r25, 0xFF	; 255
    17e6:	af 4f       	sbci	r26, 0xFF	; 255
    17e8:	b1 e0       	ldi	r27, 0x01	; 1
    17ea:	3e d0       	rcall	.+124    	; 0x1868 <__ultoa_invert+0x9c>
    17ec:	b4 e0       	ldi	r27, 0x04	; 4
    17ee:	3c d0       	rcall	.+120    	; 0x1868 <__ultoa_invert+0x9c>
    17f0:	67 0f       	add	r22, r23
    17f2:	78 1f       	adc	r23, r24
    17f4:	89 1f       	adc	r24, r25
    17f6:	9a 1f       	adc	r25, r26
    17f8:	a1 1d       	adc	r26, r1
    17fa:	68 0f       	add	r22, r24
    17fc:	79 1f       	adc	r23, r25
    17fe:	8a 1f       	adc	r24, r26
    1800:	91 1d       	adc	r25, r1
    1802:	a1 1d       	adc	r26, r1
    1804:	6a 0f       	add	r22, r26
    1806:	71 1d       	adc	r23, r1
    1808:	81 1d       	adc	r24, r1
    180a:	91 1d       	adc	r25, r1
    180c:	a1 1d       	adc	r26, r1
    180e:	20 d0       	rcall	.+64     	; 0x1850 <__ultoa_invert+0x84>
    1810:	09 f4       	brne	.+2      	; 0x1814 <__ultoa_invert+0x48>
    1812:	68 94       	set
    1814:	3f 91       	pop	r19
    1816:	2a e0       	ldi	r18, 0x0A	; 10
    1818:	26 9f       	mul	r18, r22
    181a:	11 24       	eor	r1, r1
    181c:	30 19       	sub	r19, r0
    181e:	30 5d       	subi	r19, 0xD0	; 208
    1820:	31 93       	st	Z+, r19
    1822:	de f6       	brtc	.-74     	; 0x17da <__ultoa_invert+0xe>
    1824:	cf 01       	movw	r24, r30
    1826:	08 95       	ret
    1828:	46 2f       	mov	r20, r22
    182a:	47 70       	andi	r20, 0x07	; 7
    182c:	40 5d       	subi	r20, 0xD0	; 208
    182e:	41 93       	st	Z+, r20
    1830:	b3 e0       	ldi	r27, 0x03	; 3
    1832:	0f d0       	rcall	.+30     	; 0x1852 <__ultoa_invert+0x86>
    1834:	c9 f7       	brne	.-14     	; 0x1828 <__ultoa_invert+0x5c>
    1836:	f6 cf       	rjmp	.-20     	; 0x1824 <__ultoa_invert+0x58>
    1838:	46 2f       	mov	r20, r22
    183a:	4f 70       	andi	r20, 0x0F	; 15
    183c:	40 5d       	subi	r20, 0xD0	; 208
    183e:	4a 33       	cpi	r20, 0x3A	; 58
    1840:	18 f0       	brcs	.+6      	; 0x1848 <__ultoa_invert+0x7c>
    1842:	49 5d       	subi	r20, 0xD9	; 217
    1844:	31 fd       	sbrc	r19, 1
    1846:	40 52       	subi	r20, 0x20	; 32
    1848:	41 93       	st	Z+, r20
    184a:	02 d0       	rcall	.+4      	; 0x1850 <__ultoa_invert+0x84>
    184c:	a9 f7       	brne	.-22     	; 0x1838 <__ultoa_invert+0x6c>
    184e:	ea cf       	rjmp	.-44     	; 0x1824 <__ultoa_invert+0x58>
    1850:	b4 e0       	ldi	r27, 0x04	; 4
    1852:	a6 95       	lsr	r26
    1854:	97 95       	ror	r25
    1856:	87 95       	ror	r24
    1858:	77 95       	ror	r23
    185a:	67 95       	ror	r22
    185c:	ba 95       	dec	r27
    185e:	c9 f7       	brne	.-14     	; 0x1852 <__ultoa_invert+0x86>
    1860:	00 97       	sbiw	r24, 0x00	; 0
    1862:	61 05       	cpc	r22, r1
    1864:	71 05       	cpc	r23, r1
    1866:	08 95       	ret
    1868:	9b 01       	movw	r18, r22
    186a:	ac 01       	movw	r20, r24
    186c:	0a 2e       	mov	r0, r26
    186e:	06 94       	lsr	r0
    1870:	57 95       	ror	r21
    1872:	47 95       	ror	r20
    1874:	37 95       	ror	r19
    1876:	27 95       	ror	r18
    1878:	ba 95       	dec	r27
    187a:	c9 f7       	brne	.-14     	; 0x186e <__ultoa_invert+0xa2>
    187c:	62 0f       	add	r22, r18
    187e:	73 1f       	adc	r23, r19
    1880:	84 1f       	adc	r24, r20
    1882:	95 1f       	adc	r25, r21
    1884:	a0 1d       	adc	r26, r0
    1886:	08 95       	ret

00001888 <__prologue_saves__>:
    1888:	2f 92       	push	r2
    188a:	3f 92       	push	r3
    188c:	4f 92       	push	r4
    188e:	5f 92       	push	r5
    1890:	6f 92       	push	r6
    1892:	7f 92       	push	r7
    1894:	8f 92       	push	r8
    1896:	9f 92       	push	r9
    1898:	af 92       	push	r10
    189a:	bf 92       	push	r11
    189c:	cf 92       	push	r12
    189e:	df 92       	push	r13
    18a0:	ef 92       	push	r14
    18a2:	ff 92       	push	r15
    18a4:	0f 93       	push	r16
    18a6:	1f 93       	push	r17
    18a8:	cf 93       	push	r28
    18aa:	df 93       	push	r29
    18ac:	cd b7       	in	r28, 0x3d	; 61
    18ae:	de b7       	in	r29, 0x3e	; 62
    18b0:	ca 1b       	sub	r28, r26
    18b2:	db 0b       	sbc	r29, r27
    18b4:	0f b6       	in	r0, 0x3f	; 63
    18b6:	f8 94       	cli
    18b8:	de bf       	out	0x3e, r29	; 62
    18ba:	0f be       	out	0x3f, r0	; 63
    18bc:	cd bf       	out	0x3d, r28	; 61
    18be:	09 94       	ijmp

000018c0 <__epilogue_restores__>:
    18c0:	2a 88       	ldd	r2, Y+18	; 0x12
    18c2:	39 88       	ldd	r3, Y+17	; 0x11
    18c4:	48 88       	ldd	r4, Y+16	; 0x10
    18c6:	5f 84       	ldd	r5, Y+15	; 0x0f
    18c8:	6e 84       	ldd	r6, Y+14	; 0x0e
    18ca:	7d 84       	ldd	r7, Y+13	; 0x0d
    18cc:	8c 84       	ldd	r8, Y+12	; 0x0c
    18ce:	9b 84       	ldd	r9, Y+11	; 0x0b
    18d0:	aa 84       	ldd	r10, Y+10	; 0x0a
    18d2:	b9 84       	ldd	r11, Y+9	; 0x09
    18d4:	c8 84       	ldd	r12, Y+8	; 0x08
    18d6:	df 80       	ldd	r13, Y+7	; 0x07
    18d8:	ee 80       	ldd	r14, Y+6	; 0x06
    18da:	fd 80       	ldd	r15, Y+5	; 0x05
    18dc:	0c 81       	ldd	r16, Y+4	; 0x04
    18de:	1b 81       	ldd	r17, Y+3	; 0x03
    18e0:	aa 81       	ldd	r26, Y+2	; 0x02
    18e2:	b9 81       	ldd	r27, Y+1	; 0x01
    18e4:	ce 0f       	add	r28, r30
    18e6:	d1 1d       	adc	r29, r1
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	f8 94       	cli
    18ec:	de bf       	out	0x3e, r29	; 62
    18ee:	0f be       	out	0x3f, r0	; 63
    18f0:	cd bf       	out	0x3d, r28	; 61
    18f2:	ed 01       	movw	r28, r26
    18f4:	08 95       	ret

000018f6 <_exit>:
    18f6:	f8 94       	cli

000018f8 <__stop_program>:
    18f8:	ff cf       	rjmp	.-2      	; 0x18f8 <__stop_program>
