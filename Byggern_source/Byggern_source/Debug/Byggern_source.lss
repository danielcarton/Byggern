
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000514  000005a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000514  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800116  00800116  000005be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008e5  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077b  00000000  00000000  00000f61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000033b  00000000  00000000  000016dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00001a18  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fe  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000008d  00000000  00000000  00001e7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  00001f0b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e4 e1       	ldi	r30, 0x14	; 20
  84:	f5 e0       	ldi	r31, 0x05	; 5
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a6 31       	cpi	r26, 0x16	; 22
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	21 e0       	ldi	r18, 0x01	; 1
  94:	a6 e1       	ldi	r26, 0x16	; 22
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a0 32       	cpi	r26, 0x20	; 32
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 57 00 	call	0xae	; 0xae <main>
  a6:	0c 94 88 02 	jmp	0x510	; 0x510 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <main>:
#define BAUD 9600
#define MYBURR F_CPU/16/BAUD-1


int main(){
	uart_start(MYBURR);
  ae:	8f e1       	ldi	r24, 0x1F	; 31
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	0e 94 71 00 	call	0xe2	; 0xe2 <uart_start>
	FILE *Stream;

	Stream = fdevopen(&uart_transmit, &uart_recieve);
  b6:	61 e8       	ldi	r22, 0x81	; 129
  b8:	70 e0       	ldi	r23, 0x00	; 0
  ba:	8b e7       	ldi	r24, 0x7B	; 123
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	0e 94 86 00 	call	0x10c	; 0x10c <fdevopen>

	printf("This is working\n");
  c2:	86 e0       	ldi	r24, 0x06	; 6
  c4:	91 e0       	ldi	r25, 0x01	; 1
  c6:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <puts>
	/* Replace with your application code */
	unsigned char ch, last=0;
  ca:	10 e0       	ldi	r17, 0x00	; 0
  cc:	01 c0       	rjmp	.+2      	; 0xd0 <main+0x22>
  ce:	1c 2f       	mov	r17, r28
	while (1)
	{
		ch=uart_recieve();
  d0:	0e 94 81 00 	call	0x102	; 0x102 <uart_recieve>
  d4:	ec 01       	movw	r28, r24
		if(last != ch){
  d6:	18 17       	cp	r17, r24
  d8:	d1 f3       	breq	.-12     	; 0xce <main+0x20>
			printf("%c", ch);
  da:	99 27       	eor	r25, r25
  dc:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <putchar>
  e0:	f6 cf       	rjmp	.-20     	; 0xce <main+0x20>

000000e2 <uart_start>:
#include <avr/io.h>


void uart_start(unsigned int ubrr){
	UCSR0A &=~(1<<U2X0);
  e2:	2b b1       	in	r18, 0x0b	; 11
  e4:	2d 7f       	andi	r18, 0xFD	; 253
  e6:	2b b9       	out	0x0b, r18	; 11
	UBRR0H = (unsigned char)(ubrr >> 8);
  e8:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
  ea:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  ec:	88 e1       	ldi	r24, 0x18	; 24
  ee:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
  f0:	8e e8       	ldi	r24, 0x8E	; 142
  f2:	80 bd       	out	0x20, r24	; 32
  f4:	08 95       	ret

000000f6 <uart_transmit>:
}

int uart_transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
  f6:	5d 9b       	sbis	0x0b, 5	; 11
  f8:	fe cf       	rjmp	.-4      	; 0xf6 <uart_transmit>
	UDR0 = data;
  fa:	8c b9       	out	0x0c, r24	; 12
	return(0);
}
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	08 95       	ret

00000102 <uart_recieve>:

int uart_recieve(void){
	while (!(UCSR0A & (1<<UDRE0)));
 102:	5d 9b       	sbis	0x0b, 5	; 11
 104:	fe cf       	rjmp	.-4      	; 0x102 <uart_recieve>
	return(UDR0);
 106:	8c b1       	in	r24, 0x0c	; 12
}
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	08 95       	ret

0000010c <fdevopen>:
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	00 97       	sbiw	r24, 0x00	; 0
 116:	31 f4       	brne	.+12     	; 0x124 <fdevopen+0x18>
 118:	61 15       	cp	r22, r1
 11a:	71 05       	cpc	r23, r1
 11c:	19 f4       	brne	.+6      	; 0x124 <fdevopen+0x18>
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	3a c0       	rjmp	.+116    	; 0x198 <fdevopen+0x8c>
 124:	8b 01       	movw	r16, r22
 126:	ec 01       	movw	r28, r24
 128:	6e e0       	ldi	r22, 0x0E	; 14
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 08 01 	call	0x210	; 0x210 <calloc>
 134:	fc 01       	movw	r30, r24
 136:	89 2b       	or	r24, r25
 138:	91 f3       	breq	.-28     	; 0x11e <fdevopen+0x12>
 13a:	80 e8       	ldi	r24, 0x80	; 128
 13c:	83 83       	std	Z+3, r24	; 0x03
 13e:	01 15       	cp	r16, r1
 140:	11 05       	cpc	r17, r1
 142:	71 f0       	breq	.+28     	; 0x160 <fdevopen+0x54>
 144:	13 87       	std	Z+11, r17	; 0x0b
 146:	02 87       	std	Z+10, r16	; 0x0a
 148:	81 e8       	ldi	r24, 0x81	; 129
 14a:	83 83       	std	Z+3, r24	; 0x03
 14c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 150:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <__data_end+0x1>
 154:	89 2b       	or	r24, r25
 156:	21 f4       	brne	.+8      	; 0x160 <fdevopen+0x54>
 158:	f0 93 17 01 	sts	0x0117, r31	; 0x800117 <__data_end+0x1>
 15c:	e0 93 16 01 	sts	0x0116, r30	; 0x800116 <__data_end>
 160:	20 97       	sbiw	r28, 0x00	; 0
 162:	c9 f0       	breq	.+50     	; 0x196 <fdevopen+0x8a>
 164:	d1 87       	std	Z+9, r29	; 0x09
 166:	c0 87       	std	Z+8, r28	; 0x08
 168:	83 81       	ldd	r24, Z+3	; 0x03
 16a:	82 60       	ori	r24, 0x02	; 2
 16c:	83 83       	std	Z+3, r24	; 0x03
 16e:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end+0x2>
 172:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x3>
 176:	89 2b       	or	r24, r25
 178:	71 f4       	brne	.+28     	; 0x196 <fdevopen+0x8a>
 17a:	f0 93 19 01 	sts	0x0119, r31	; 0x800119 <__data_end+0x3>
 17e:	e0 93 18 01 	sts	0x0118, r30	; 0x800118 <__data_end+0x2>
 182:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end+0x4>
 186:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x5>
 18a:	89 2b       	or	r24, r25
 18c:	21 f4       	brne	.+8      	; 0x196 <fdevopen+0x8a>
 18e:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <__data_end+0x5>
 192:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <__data_end+0x4>
 196:	cf 01       	movw	r24, r30
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	1f 91       	pop	r17
 19e:	0f 91       	pop	r16
 1a0:	08 95       	ret

000001a2 <putchar>:
 1a2:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end+0x2>
 1a6:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <__data_end+0x3>
 1aa:	0e 94 4c 02 	call	0x498	; 0x498 <fputc>
 1ae:	08 95       	ret

000001b0 <puts>:
 1b0:	0f 93       	push	r16
 1b2:	1f 93       	push	r17
 1b4:	cf 93       	push	r28
 1b6:	df 93       	push	r29
 1b8:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__data_end+0x2>
 1bc:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <__data_end+0x3>
 1c0:	23 81       	ldd	r18, Z+3	; 0x03
 1c2:	21 ff       	sbrs	r18, 1
 1c4:	1b c0       	rjmp	.+54     	; 0x1fc <puts+0x4c>
 1c6:	8c 01       	movw	r16, r24
 1c8:	d0 e0       	ldi	r29, 0x00	; 0
 1ca:	c0 e0       	ldi	r28, 0x00	; 0
 1cc:	f8 01       	movw	r30, r16
 1ce:	81 91       	ld	r24, Z+
 1d0:	8f 01       	movw	r16, r30
 1d2:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <__data_end+0x2>
 1d6:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <__data_end+0x3>
 1da:	db 01       	movw	r26, r22
 1dc:	18 96       	adiw	r26, 0x08	; 8
 1de:	ed 91       	ld	r30, X+
 1e0:	fc 91       	ld	r31, X
 1e2:	19 97       	sbiw	r26, 0x09	; 9
 1e4:	88 23       	and	r24, r24
 1e6:	31 f0       	breq	.+12     	; 0x1f4 <puts+0x44>
 1e8:	09 95       	icall
 1ea:	89 2b       	or	r24, r25
 1ec:	79 f3       	breq	.-34     	; 0x1cc <puts+0x1c>
 1ee:	df ef       	ldi	r29, 0xFF	; 255
 1f0:	cf ef       	ldi	r28, 0xFF	; 255
 1f2:	ec cf       	rjmp	.-40     	; 0x1cc <puts+0x1c>
 1f4:	8a e0       	ldi	r24, 0x0A	; 10
 1f6:	09 95       	icall
 1f8:	89 2b       	or	r24, r25
 1fa:	19 f0       	breq	.+6      	; 0x202 <__EEPROM_REGION_LENGTH__+0x2>
 1fc:	8f ef       	ldi	r24, 0xFF	; 255
 1fe:	9f ef       	ldi	r25, 0xFF	; 255
 200:	02 c0       	rjmp	.+4      	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 202:	8d 2f       	mov	r24, r29
 204:	9c 2f       	mov	r25, r28
 206:	df 91       	pop	r29
 208:	cf 91       	pop	r28
 20a:	1f 91       	pop	r17
 20c:	0f 91       	pop	r16
 20e:	08 95       	ret

00000210 <calloc>:
 210:	0f 93       	push	r16
 212:	1f 93       	push	r17
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	86 9f       	mul	r24, r22
 21a:	80 01       	movw	r16, r0
 21c:	87 9f       	mul	r24, r23
 21e:	10 0d       	add	r17, r0
 220:	96 9f       	mul	r25, r22
 222:	10 0d       	add	r17, r0
 224:	11 24       	eor	r1, r1
 226:	c8 01       	movw	r24, r16
 228:	0e 94 24 01 	call	0x248	; 0x248 <malloc>
 22c:	ec 01       	movw	r28, r24
 22e:	00 97       	sbiw	r24, 0x00	; 0
 230:	29 f0       	breq	.+10     	; 0x23c <calloc+0x2c>
 232:	a8 01       	movw	r20, r16
 234:	60 e0       	ldi	r22, 0x00	; 0
 236:	70 e0       	ldi	r23, 0x00	; 0
 238:	0e 94 45 02 	call	0x48a	; 0x48a <memset>
 23c:	ce 01       	movw	r24, r28
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	1f 91       	pop	r17
 244:	0f 91       	pop	r16
 246:	08 95       	ret

00000248 <malloc>:
 248:	0f 93       	push	r16
 24a:	1f 93       	push	r17
 24c:	cf 93       	push	r28
 24e:	df 93       	push	r29
 250:	82 30       	cpi	r24, 0x02	; 2
 252:	91 05       	cpc	r25, r1
 254:	10 f4       	brcc	.+4      	; 0x25a <malloc+0x12>
 256:	82 e0       	ldi	r24, 0x02	; 2
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <__flp>
 25e:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <__flp+0x1>
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	a0 e0       	ldi	r26, 0x00	; 0
 268:	b0 e0       	ldi	r27, 0x00	; 0
 26a:	30 97       	sbiw	r30, 0x00	; 0
 26c:	19 f1       	breq	.+70     	; 0x2b4 <malloc+0x6c>
 26e:	40 81       	ld	r20, Z
 270:	51 81       	ldd	r21, Z+1	; 0x01
 272:	02 81       	ldd	r16, Z+2	; 0x02
 274:	13 81       	ldd	r17, Z+3	; 0x03
 276:	48 17       	cp	r20, r24
 278:	59 07       	cpc	r21, r25
 27a:	c8 f0       	brcs	.+50     	; 0x2ae <malloc+0x66>
 27c:	84 17       	cp	r24, r20
 27e:	95 07       	cpc	r25, r21
 280:	69 f4       	brne	.+26     	; 0x29c <malloc+0x54>
 282:	10 97       	sbiw	r26, 0x00	; 0
 284:	31 f0       	breq	.+12     	; 0x292 <malloc+0x4a>
 286:	12 96       	adiw	r26, 0x02	; 2
 288:	0c 93       	st	X, r16
 28a:	12 97       	sbiw	r26, 0x02	; 2
 28c:	13 96       	adiw	r26, 0x03	; 3
 28e:	1c 93       	st	X, r17
 290:	27 c0       	rjmp	.+78     	; 0x2e0 <malloc+0x98>
 292:	00 93 1e 01 	sts	0x011E, r16	; 0x80011e <__flp>
 296:	10 93 1f 01 	sts	0x011F, r17	; 0x80011f <__flp+0x1>
 29a:	22 c0       	rjmp	.+68     	; 0x2e0 <malloc+0x98>
 29c:	21 15       	cp	r18, r1
 29e:	31 05       	cpc	r19, r1
 2a0:	19 f0       	breq	.+6      	; 0x2a8 <malloc+0x60>
 2a2:	42 17       	cp	r20, r18
 2a4:	53 07       	cpc	r21, r19
 2a6:	18 f4       	brcc	.+6      	; 0x2ae <malloc+0x66>
 2a8:	9a 01       	movw	r18, r20
 2aa:	bd 01       	movw	r22, r26
 2ac:	ef 01       	movw	r28, r30
 2ae:	df 01       	movw	r26, r30
 2b0:	f8 01       	movw	r30, r16
 2b2:	db cf       	rjmp	.-74     	; 0x26a <malloc+0x22>
 2b4:	21 15       	cp	r18, r1
 2b6:	31 05       	cpc	r19, r1
 2b8:	f9 f0       	breq	.+62     	; 0x2f8 <malloc+0xb0>
 2ba:	28 1b       	sub	r18, r24
 2bc:	39 0b       	sbc	r19, r25
 2be:	24 30       	cpi	r18, 0x04	; 4
 2c0:	31 05       	cpc	r19, r1
 2c2:	80 f4       	brcc	.+32     	; 0x2e4 <malloc+0x9c>
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	9b 81       	ldd	r25, Y+3	; 0x03
 2c8:	61 15       	cp	r22, r1
 2ca:	71 05       	cpc	r23, r1
 2cc:	21 f0       	breq	.+8      	; 0x2d6 <malloc+0x8e>
 2ce:	fb 01       	movw	r30, r22
 2d0:	93 83       	std	Z+3, r25	; 0x03
 2d2:	82 83       	std	Z+2, r24	; 0x02
 2d4:	04 c0       	rjmp	.+8      	; 0x2de <malloc+0x96>
 2d6:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <__flp+0x1>
 2da:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <__flp>
 2de:	fe 01       	movw	r30, r28
 2e0:	32 96       	adiw	r30, 0x02	; 2
 2e2:	44 c0       	rjmp	.+136    	; 0x36c <malloc+0x124>
 2e4:	fe 01       	movw	r30, r28
 2e6:	e2 0f       	add	r30, r18
 2e8:	f3 1f       	adc	r31, r19
 2ea:	81 93       	st	Z+, r24
 2ec:	91 93       	st	Z+, r25
 2ee:	22 50       	subi	r18, 0x02	; 2
 2f0:	31 09       	sbc	r19, r1
 2f2:	39 83       	std	Y+1, r19	; 0x01
 2f4:	28 83       	st	Y, r18
 2f6:	3a c0       	rjmp	.+116    	; 0x36c <malloc+0x124>
 2f8:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 2fc:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 300:	23 2b       	or	r18, r19
 302:	41 f4       	brne	.+16     	; 0x314 <malloc+0xcc>
 304:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 308:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 30c:	30 93 1d 01 	sts	0x011D, r19	; 0x80011d <__brkval+0x1>
 310:	20 93 1c 01 	sts	0x011C, r18	; 0x80011c <__brkval>
 314:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 318:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 31c:	21 15       	cp	r18, r1
 31e:	31 05       	cpc	r19, r1
 320:	41 f4       	brne	.+16     	; 0x332 <malloc+0xea>
 322:	2d b7       	in	r18, 0x3d	; 61
 324:	3e b7       	in	r19, 0x3e	; 62
 326:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 32a:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 32e:	24 1b       	sub	r18, r20
 330:	35 0b       	sbc	r19, r21
 332:	e0 91 1c 01 	lds	r30, 0x011C	; 0x80011c <__brkval>
 336:	f0 91 1d 01 	lds	r31, 0x011D	; 0x80011d <__brkval+0x1>
 33a:	e2 17       	cp	r30, r18
 33c:	f3 07       	cpc	r31, r19
 33e:	a0 f4       	brcc	.+40     	; 0x368 <malloc+0x120>
 340:	2e 1b       	sub	r18, r30
 342:	3f 0b       	sbc	r19, r31
 344:	28 17       	cp	r18, r24
 346:	39 07       	cpc	r19, r25
 348:	78 f0       	brcs	.+30     	; 0x368 <malloc+0x120>
 34a:	ac 01       	movw	r20, r24
 34c:	4e 5f       	subi	r20, 0xFE	; 254
 34e:	5f 4f       	sbci	r21, 0xFF	; 255
 350:	24 17       	cp	r18, r20
 352:	35 07       	cpc	r19, r21
 354:	48 f0       	brcs	.+18     	; 0x368 <malloc+0x120>
 356:	4e 0f       	add	r20, r30
 358:	5f 1f       	adc	r21, r31
 35a:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <__brkval+0x1>
 35e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <__brkval>
 362:	81 93       	st	Z+, r24
 364:	91 93       	st	Z+, r25
 366:	02 c0       	rjmp	.+4      	; 0x36c <malloc+0x124>
 368:	e0 e0       	ldi	r30, 0x00	; 0
 36a:	f0 e0       	ldi	r31, 0x00	; 0
 36c:	cf 01       	movw	r24, r30
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	08 95       	ret

00000378 <free>:
 378:	cf 93       	push	r28
 37a:	df 93       	push	r29
 37c:	00 97       	sbiw	r24, 0x00	; 0
 37e:	09 f4       	brne	.+2      	; 0x382 <free+0xa>
 380:	81 c0       	rjmp	.+258    	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 382:	fc 01       	movw	r30, r24
 384:	32 97       	sbiw	r30, 0x02	; 2
 386:	13 82       	std	Z+3, r1	; 0x03
 388:	12 82       	std	Z+2, r1	; 0x02
 38a:	a0 91 1e 01 	lds	r26, 0x011E	; 0x80011e <__flp>
 38e:	b0 91 1f 01 	lds	r27, 0x011F	; 0x80011f <__flp+0x1>
 392:	10 97       	sbiw	r26, 0x00	; 0
 394:	81 f4       	brne	.+32     	; 0x3b6 <free+0x3e>
 396:	20 81       	ld	r18, Z
 398:	31 81       	ldd	r19, Z+1	; 0x01
 39a:	82 0f       	add	r24, r18
 39c:	93 1f       	adc	r25, r19
 39e:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 3a2:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 3a6:	28 17       	cp	r18, r24
 3a8:	39 07       	cpc	r19, r25
 3aa:	51 f5       	brne	.+84     	; 0x400 <__DATA_REGION_LENGTH__>
 3ac:	f0 93 1d 01 	sts	0x011D, r31	; 0x80011d <__brkval+0x1>
 3b0:	e0 93 1c 01 	sts	0x011C, r30	; 0x80011c <__brkval>
 3b4:	67 c0       	rjmp	.+206    	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 3b6:	ed 01       	movw	r28, r26
 3b8:	20 e0       	ldi	r18, 0x00	; 0
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	ce 17       	cp	r28, r30
 3be:	df 07       	cpc	r29, r31
 3c0:	40 f4       	brcc	.+16     	; 0x3d2 <free+0x5a>
 3c2:	4a 81       	ldd	r20, Y+2	; 0x02
 3c4:	5b 81       	ldd	r21, Y+3	; 0x03
 3c6:	9e 01       	movw	r18, r28
 3c8:	41 15       	cp	r20, r1
 3ca:	51 05       	cpc	r21, r1
 3cc:	f1 f0       	breq	.+60     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 3ce:	ea 01       	movw	r28, r20
 3d0:	f5 cf       	rjmp	.-22     	; 0x3bc <free+0x44>
 3d2:	d3 83       	std	Z+3, r29	; 0x03
 3d4:	c2 83       	std	Z+2, r28	; 0x02
 3d6:	40 81       	ld	r20, Z
 3d8:	51 81       	ldd	r21, Z+1	; 0x01
 3da:	84 0f       	add	r24, r20
 3dc:	95 1f       	adc	r25, r21
 3de:	c8 17       	cp	r28, r24
 3e0:	d9 07       	cpc	r29, r25
 3e2:	59 f4       	brne	.+22     	; 0x3fa <free+0x82>
 3e4:	88 81       	ld	r24, Y
 3e6:	99 81       	ldd	r25, Y+1	; 0x01
 3e8:	84 0f       	add	r24, r20
 3ea:	95 1f       	adc	r25, r21
 3ec:	02 96       	adiw	r24, 0x02	; 2
 3ee:	91 83       	std	Z+1, r25	; 0x01
 3f0:	80 83       	st	Z, r24
 3f2:	8a 81       	ldd	r24, Y+2	; 0x02
 3f4:	9b 81       	ldd	r25, Y+3	; 0x03
 3f6:	93 83       	std	Z+3, r25	; 0x03
 3f8:	82 83       	std	Z+2, r24	; 0x02
 3fa:	21 15       	cp	r18, r1
 3fc:	31 05       	cpc	r19, r1
 3fe:	29 f4       	brne	.+10     	; 0x40a <__DATA_REGION_LENGTH__+0xa>
 400:	f0 93 1f 01 	sts	0x011F, r31	; 0x80011f <__flp+0x1>
 404:	e0 93 1e 01 	sts	0x011E, r30	; 0x80011e <__flp>
 408:	3d c0       	rjmp	.+122    	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 40a:	e9 01       	movw	r28, r18
 40c:	fb 83       	std	Y+3, r31	; 0x03
 40e:	ea 83       	std	Y+2, r30	; 0x02
 410:	49 91       	ld	r20, Y+
 412:	59 91       	ld	r21, Y+
 414:	c4 0f       	add	r28, r20
 416:	d5 1f       	adc	r29, r21
 418:	ec 17       	cp	r30, r28
 41a:	fd 07       	cpc	r31, r29
 41c:	61 f4       	brne	.+24     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 41e:	80 81       	ld	r24, Z
 420:	91 81       	ldd	r25, Z+1	; 0x01
 422:	84 0f       	add	r24, r20
 424:	95 1f       	adc	r25, r21
 426:	02 96       	adiw	r24, 0x02	; 2
 428:	e9 01       	movw	r28, r18
 42a:	99 83       	std	Y+1, r25	; 0x01
 42c:	88 83       	st	Y, r24
 42e:	82 81       	ldd	r24, Z+2	; 0x02
 430:	93 81       	ldd	r25, Z+3	; 0x03
 432:	9b 83       	std	Y+3, r25	; 0x03
 434:	8a 83       	std	Y+2, r24	; 0x02
 436:	e0 e0       	ldi	r30, 0x00	; 0
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	12 96       	adiw	r26, 0x02	; 2
 43c:	8d 91       	ld	r24, X+
 43e:	9c 91       	ld	r25, X
 440:	13 97       	sbiw	r26, 0x03	; 3
 442:	00 97       	sbiw	r24, 0x00	; 0
 444:	19 f0       	breq	.+6      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
 446:	fd 01       	movw	r30, r26
 448:	dc 01       	movw	r26, r24
 44a:	f7 cf       	rjmp	.-18     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 44c:	8d 91       	ld	r24, X+
 44e:	9c 91       	ld	r25, X
 450:	11 97       	sbiw	r26, 0x01	; 1
 452:	9d 01       	movw	r18, r26
 454:	2e 5f       	subi	r18, 0xFE	; 254
 456:	3f 4f       	sbci	r19, 0xFF	; 255
 458:	82 0f       	add	r24, r18
 45a:	93 1f       	adc	r25, r19
 45c:	20 91 1c 01 	lds	r18, 0x011C	; 0x80011c <__brkval>
 460:	30 91 1d 01 	lds	r19, 0x011D	; 0x80011d <__brkval+0x1>
 464:	28 17       	cp	r18, r24
 466:	39 07       	cpc	r19, r25
 468:	69 f4       	brne	.+26     	; 0x484 <__DATA_REGION_LENGTH__+0x84>
 46a:	30 97       	sbiw	r30, 0x00	; 0
 46c:	29 f4       	brne	.+10     	; 0x478 <__DATA_REGION_LENGTH__+0x78>
 46e:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <__flp+0x1>
 472:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <__flp>
 476:	02 c0       	rjmp	.+4      	; 0x47c <__DATA_REGION_LENGTH__+0x7c>
 478:	13 82       	std	Z+3, r1	; 0x03
 47a:	12 82       	std	Z+2, r1	; 0x02
 47c:	b0 93 1d 01 	sts	0x011D, r27	; 0x80011d <__brkval+0x1>
 480:	a0 93 1c 01 	sts	0x011C, r26	; 0x80011c <__brkval>
 484:	df 91       	pop	r29
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <memset>:
 48a:	dc 01       	movw	r26, r24
 48c:	01 c0       	rjmp	.+2      	; 0x490 <memset+0x6>
 48e:	6d 93       	st	X+, r22
 490:	41 50       	subi	r20, 0x01	; 1
 492:	50 40       	sbci	r21, 0x00	; 0
 494:	e0 f7       	brcc	.-8      	; 0x48e <memset+0x4>
 496:	08 95       	ret

00000498 <fputc>:
 498:	0f 93       	push	r16
 49a:	1f 93       	push	r17
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	fb 01       	movw	r30, r22
 4a2:	23 81       	ldd	r18, Z+3	; 0x03
 4a4:	21 fd       	sbrc	r18, 1
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <fputc+0x16>
 4a8:	8f ef       	ldi	r24, 0xFF	; 255
 4aa:	9f ef       	ldi	r25, 0xFF	; 255
 4ac:	2c c0       	rjmp	.+88     	; 0x506 <__stack+0x7>
 4ae:	22 ff       	sbrs	r18, 2
 4b0:	16 c0       	rjmp	.+44     	; 0x4de <fputc+0x46>
 4b2:	46 81       	ldd	r20, Z+6	; 0x06
 4b4:	57 81       	ldd	r21, Z+7	; 0x07
 4b6:	24 81       	ldd	r18, Z+4	; 0x04
 4b8:	35 81       	ldd	r19, Z+5	; 0x05
 4ba:	42 17       	cp	r20, r18
 4bc:	53 07       	cpc	r21, r19
 4be:	44 f4       	brge	.+16     	; 0x4d0 <fputc+0x38>
 4c0:	a0 81       	ld	r26, Z
 4c2:	b1 81       	ldd	r27, Z+1	; 0x01
 4c4:	9d 01       	movw	r18, r26
 4c6:	2f 5f       	subi	r18, 0xFF	; 255
 4c8:	3f 4f       	sbci	r19, 0xFF	; 255
 4ca:	31 83       	std	Z+1, r19	; 0x01
 4cc:	20 83       	st	Z, r18
 4ce:	8c 93       	st	X, r24
 4d0:	26 81       	ldd	r18, Z+6	; 0x06
 4d2:	37 81       	ldd	r19, Z+7	; 0x07
 4d4:	2f 5f       	subi	r18, 0xFF	; 255
 4d6:	3f 4f       	sbci	r19, 0xFF	; 255
 4d8:	37 83       	std	Z+7, r19	; 0x07
 4da:	26 83       	std	Z+6, r18	; 0x06
 4dc:	14 c0       	rjmp	.+40     	; 0x506 <__stack+0x7>
 4de:	8b 01       	movw	r16, r22
 4e0:	ec 01       	movw	r28, r24
 4e2:	fb 01       	movw	r30, r22
 4e4:	00 84       	ldd	r0, Z+8	; 0x08
 4e6:	f1 85       	ldd	r31, Z+9	; 0x09
 4e8:	e0 2d       	mov	r30, r0
 4ea:	09 95       	icall
 4ec:	89 2b       	or	r24, r25
 4ee:	e1 f6       	brne	.-72     	; 0x4a8 <fputc+0x10>
 4f0:	d8 01       	movw	r26, r16
 4f2:	16 96       	adiw	r26, 0x06	; 6
 4f4:	8d 91       	ld	r24, X+
 4f6:	9c 91       	ld	r25, X
 4f8:	17 97       	sbiw	r26, 0x07	; 7
 4fa:	01 96       	adiw	r24, 0x01	; 1
 4fc:	17 96       	adiw	r26, 0x07	; 7
 4fe:	9c 93       	st	X, r25
 500:	8e 93       	st	-X, r24
 502:	16 97       	sbiw	r26, 0x06	; 6
 504:	ce 01       	movw	r24, r28
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	1f 91       	pop	r17
 50c:	0f 91       	pop	r16
 50e:	08 95       	ret

00000510 <_exit>:
 510:	f8 94       	cli

00000512 <__stop_program>:
 512:	ff cf       	rjmp	.-2      	; 0x512 <__stop_program>
