
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001d8  00800100  00002590  00002624  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002590  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  008002d8  008002d8  000027fc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002858  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  00002894  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000029f4  00000000  00000000  00002aec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001145  00000000  00000000  000054e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001937  00000000  00000000  00006625  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000710  00000000  00000000  00007f5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a98  00000000  00000000  0000866c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000016ee  00000000  00000000  00009104  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f0  00000000  00000000  0000a7f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__ctors_end>
       4:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__vector_1>
       8:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__vector_2>
       c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      10:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      14:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      18:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      1c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      20:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      24:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      28:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      2c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      30:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      34:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      38:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      3c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_15>
      40:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      44:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      48:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      4c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      50:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      54:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      58:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      5c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      60:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      64:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      68:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      6c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      70:	46 08       	sbc	r4, r6
      72:	4d 08       	sbc	r4, r13
      74:	54 08       	sbc	r5, r4
      76:	5b 08       	sbc	r5, r11
      78:	62 08       	sbc	r6, r2
      7a:	69 08       	sbc	r6, r9
      7c:	70 08       	sbc	r7, r0
      7e:	40 09       	sbc	r20, r0
      80:	47 09       	sbc	r20, r7
      82:	4e 09       	sbc	r20, r14
      84:	55 09       	sbc	r21, r5
      86:	5c 09       	sbc	r21, r12
      88:	63 09       	sbc	r22, r3
      8a:	6a 09       	sbc	r22, r10
      8c:	3a 0a       	sbc	r3, r26
      8e:	41 0a       	sbc	r4, r17
      90:	48 0a       	sbc	r4, r24
      92:	4f 0a       	sbc	r4, r31
      94:	56 0a       	sbc	r5, r22
      96:	5d 0a       	sbc	r5, r29
      98:	64 0a       	sbc	r6, r20
      9a:	4a 0b       	sbc	r20, r26
      9c:	6f 0b       	sbc	r22, r31
      9e:	89 0b       	sbc	r24, r25
      a0:	a2 0b       	sbc	r26, r18
      a2:	a9 0b       	sbc	r26, r25
      a4:	b0 0b       	sbc	r27, r16
      a6:	b7 0b       	sbc	r27, r23

000000a8 <__trampolines_end>:
	...
      b0:	00 06       	cpc	r0, r16
      b2:	5f 5f       	subi	r21, 0xFF	; 255
      b4:	06 00       	.word	0x0006	; ????
      b6:	00 00       	nop
      b8:	00 07       	cpc	r16, r16
      ba:	07 00       	.word	0x0007	; ????
      bc:	07 07       	cpc	r16, r23
      be:	00 00       	nop
      c0:	14 7f       	andi	r17, 0xF4	; 244
      c2:	7f 14       	cp	r7, r15
      c4:	7f 7f       	andi	r23, 0xFF	; 255
      c6:	14 00       	.word	0x0014	; ????
      c8:	24 2e       	mov	r2, r20
      ca:	6b 6b       	ori	r22, 0xBB	; 187
      cc:	3a 12       	cpse	r3, r26
      ce:	00 00       	nop
      d0:	46 66       	ori	r20, 0x66	; 102
      d2:	30 18       	sub	r3, r0
      d4:	0c 66       	ori	r16, 0x6C	; 108
      d6:	62 00       	.word	0x0062	; ????
      d8:	30 7a       	andi	r19, 0xA0	; 160
      da:	4f 5d       	subi	r20, 0xDF	; 223
      dc:	37 7a       	andi	r19, 0xA7	; 167
      de:	48 00       	.word	0x0048	; ????
      e0:	04 07       	cpc	r16, r20
      e2:	03 00       	.word	0x0003	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	00 1c       	adc	r0, r0
      ea:	3e 63       	ori	r19, 0x3E	; 62
      ec:	41 00       	.word	0x0041	; ????
      ee:	00 00       	nop
      f0:	00 41       	sbci	r16, 0x10	; 16
      f2:	63 3e       	cpi	r22, 0xE3	; 227
      f4:	1c 00       	.word	0x001c	; ????
      f6:	00 00       	nop
      f8:	08 2a       	or	r0, r24
      fa:	3e 1c       	adc	r3, r14
      fc:	1c 3e       	cpi	r17, 0xEC	; 236
      fe:	2a 08       	sbc	r2, r10
     100:	08 08       	sbc	r0, r8
     102:	3e 3e       	cpi	r19, 0xEE	; 238
     104:	08 08       	sbc	r0, r8
     106:	00 00       	nop
     108:	00 a0       	ldd	r0, Z+32	; 0x20
     10a:	e0 60       	ori	r30, 0x00	; 0
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	08 08       	sbc	r0, r8
     112:	08 08       	sbc	r0, r8
     114:	08 08       	sbc	r0, r8
     116:	00 00       	nop
     118:	00 00       	nop
     11a:	60 60       	ori	r22, 0x00	; 0
     11c:	00 00       	nop
     11e:	00 00       	nop
     120:	60 30       	cpi	r22, 0x00	; 0
     122:	18 0c       	add	r1, r8
     124:	06 03       	mulsu	r16, r22
     126:	01 00       	.word	0x0001	; ????
     128:	3e 7f       	andi	r19, 0xFE	; 254
     12a:	59 4d       	sbci	r21, 0xD9	; 217
     12c:	7f 3e       	cpi	r23, 0xEF	; 239
     12e:	00 00       	nop
     130:	42 42       	sbci	r20, 0x22	; 34
     132:	7f 7f       	andi	r23, 0xFF	; 255
     134:	40 40       	sbci	r20, 0x00	; 0
     136:	00 00       	nop
     138:	62 73       	andi	r22, 0x32	; 50
     13a:	59 49       	sbci	r21, 0x99	; 153
     13c:	6f 66       	ori	r22, 0x6F	; 111
     13e:	00 00       	nop
     140:	22 63       	ori	r18, 0x32	; 50
     142:	49 49       	sbci	r20, 0x99	; 153
     144:	7f 36       	cpi	r23, 0x6F	; 111
     146:	00 00       	nop
     148:	18 1c       	adc	r1, r8
     14a:	16 13       	cpse	r17, r22
     14c:	7f 7f       	andi	r23, 0xFF	; 255
     14e:	10 00       	.word	0x0010	; ????
     150:	27 67       	ori	r18, 0x77	; 119
     152:	45 45       	sbci	r20, 0x55	; 85
     154:	7d 39       	cpi	r23, 0x9D	; 157
     156:	00 00       	nop
     158:	3c 7e       	andi	r19, 0xEC	; 236
     15a:	4b 49       	sbci	r20, 0x9B	; 155
     15c:	79 30       	cpi	r23, 0x09	; 9
     15e:	00 00       	nop
     160:	03 63       	ori	r16, 0x33	; 51
     162:	71 19       	sub	r23, r1
     164:	0f 07       	cpc	r16, r31
     166:	00 00       	nop
     168:	36 7f       	andi	r19, 0xF6	; 246
     16a:	49 49       	sbci	r20, 0x99	; 153
     16c:	7f 36       	cpi	r23, 0x6F	; 111
     16e:	00 00       	nop
     170:	06 4f       	sbci	r16, 0xF6	; 246
     172:	49 69       	ori	r20, 0x99	; 153
     174:	3f 1e       	adc	r3, r31
     176:	00 00       	nop
     178:	00 00       	nop
     17a:	6c 6c       	ori	r22, 0xCC	; 204
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	00 a0       	ldd	r0, Z+32	; 0x20
     182:	ec 6c       	ori	r30, 0xCC	; 204
     184:	00 00       	nop
     186:	00 00       	nop
     188:	08 1c       	adc	r0, r8
     18a:	36 63       	ori	r19, 0x36	; 54
     18c:	41 00       	.word	0x0041	; ????
     18e:	00 00       	nop
     190:	14 14       	cp	r1, r4
     192:	14 14       	cp	r1, r4
     194:	14 14       	cp	r1, r4
     196:	00 00       	nop
     198:	00 41       	sbci	r16, 0x10	; 16
     19a:	63 36       	cpi	r22, 0x63	; 99
     19c:	1c 08       	sbc	r1, r12
     19e:	00 00       	nop
     1a0:	02 03       	mulsu	r16, r18
     1a2:	51 59       	subi	r21, 0x91	; 145
     1a4:	0f 06       	cpc	r0, r31
     1a6:	00 00       	nop
     1a8:	3e 7f       	andi	r19, 0xFE	; 254
     1aa:	41 5d       	subi	r20, 0xD1	; 209
     1ac:	5d 1f       	adc	r21, r29
     1ae:	1e 00       	.word	0x001e	; ????
     1b0:	7c 7e       	andi	r23, 0xEC	; 236
     1b2:	13 13       	cpse	r17, r19
     1b4:	7e 7c       	andi	r23, 0xCE	; 206
     1b6:	00 00       	nop
     1b8:	41 7f       	andi	r20, 0xF1	; 241
     1ba:	7f 49       	sbci	r23, 0x9F	; 159
     1bc:	49 7f       	andi	r20, 0xF9	; 249
     1be:	36 00       	.word	0x0036	; ????
     1c0:	1c 3e       	cpi	r17, 0xEC	; 236
     1c2:	63 41       	sbci	r22, 0x13	; 19
     1c4:	41 63       	ori	r20, 0x31	; 49
     1c6:	22 00       	.word	0x0022	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 41       	sbci	r23, 0x1F	; 31
     1cc:	63 7f       	andi	r22, 0xF3	; 243
     1ce:	1c 00       	.word	0x001c	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 49       	sbci	r23, 0x9F	; 159
     1d4:	5d 41       	sbci	r21, 0x1D	; 29
     1d6:	63 00       	.word	0x0063	; ????
     1d8:	41 7f       	andi	r20, 0xF1	; 241
     1da:	7f 49       	sbci	r23, 0x9F	; 159
     1dc:	1d 01       	movw	r2, r26
     1de:	03 00       	.word	0x0003	; ????
     1e0:	1c 3e       	cpi	r17, 0xEC	; 236
     1e2:	63 41       	sbci	r22, 0x13	; 19
     1e4:	51 73       	andi	r21, 0x31	; 49
     1e6:	72 00       	.word	0x0072	; ????
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	08 08       	sbc	r0, r8
     1ec:	7f 7f       	andi	r23, 0xFF	; 255
     1ee:	00 00       	nop
     1f0:	00 41       	sbci	r16, 0x10	; 16
     1f2:	7f 7f       	andi	r23, 0xFF	; 255
     1f4:	41 00       	.word	0x0041	; ????
     1f6:	00 00       	nop
     1f8:	30 70       	andi	r19, 0x00	; 0
     1fa:	40 41       	sbci	r20, 0x10	; 16
     1fc:	7f 3f       	cpi	r23, 0xFF	; 255
     1fe:	01 00       	.word	0x0001	; ????
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 08       	sbc	r7, r15
     204:	1c 77       	andi	r17, 0x7C	; 124
     206:	63 00       	.word	0x0063	; ????
     208:	41 7f       	andi	r20, 0xF1	; 241
     20a:	7f 41       	sbci	r23, 0x1F	; 31
     20c:	40 60       	ori	r20, 0x00	; 0
     20e:	70 00       	.word	0x0070	; ????
     210:	7f 7f       	andi	r23, 0xFF	; 255
     212:	06 0c       	add	r0, r6
     214:	06 7f       	andi	r16, 0xF6	; 246
     216:	7f 00       	.word	0x007f	; ????
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	06 0c       	add	r0, r6
     21c:	18 7f       	andi	r17, 0xF8	; 248
     21e:	7f 00       	.word	0x007f	; ????
     220:	1c 3e       	cpi	r17, 0xEC	; 236
     222:	63 41       	sbci	r22, 0x13	; 19
     224:	63 3e       	cpi	r22, 0xE3	; 227
     226:	1c 00       	.word	0x001c	; ????
     228:	41 7f       	andi	r20, 0xF1	; 241
     22a:	7f 49       	sbci	r23, 0x9F	; 159
     22c:	09 0f       	add	r16, r25
     22e:	06 00       	.word	0x0006	; ????
     230:	1e 3f       	cpi	r17, 0xFE	; 254
     232:	21 71       	andi	r18, 0x11	; 17
     234:	7f 5e       	subi	r23, 0xEF	; 239
     236:	00 00       	nop
     238:	41 7f       	andi	r20, 0xF1	; 241
     23a:	7f 19       	sub	r23, r15
     23c:	39 6f       	ori	r19, 0xF9	; 249
     23e:	46 00       	.word	0x0046	; ????
     240:	26 67       	ori	r18, 0x76	; 118
     242:	4d 59       	subi	r20, 0x9D	; 157
     244:	7b 32       	cpi	r23, 0x2B	; 43
     246:	00 00       	nop
     248:	03 41       	sbci	r16, 0x13	; 19
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	41 03       	mulsu	r20, r17
     24e:	00 00       	nop
     250:	7f 7f       	andi	r23, 0xFF	; 255
     252:	40 40       	sbci	r20, 0x00	; 0
     254:	7f 7f       	andi	r23, 0xFF	; 255
     256:	00 00       	nop
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	60 60       	ori	r22, 0x00	; 0
     25c:	3f 1f       	adc	r19, r31
     25e:	00 00       	nop
     260:	7f 7f       	andi	r23, 0xFF	; 255
     262:	30 18       	sub	r3, r0
     264:	30 7f       	andi	r19, 0xF0	; 240
     266:	7f 00       	.word	0x007f	; ????
     268:	63 77       	andi	r22, 0x73	; 115
     26a:	1c 08       	sbc	r1, r12
     26c:	1c 77       	andi	r17, 0x7C	; 124
     26e:	63 00       	.word	0x0063	; ????
     270:	07 4f       	sbci	r16, 0xF7	; 247
     272:	78 78       	andi	r23, 0x88	; 136
     274:	4f 07       	cpc	r20, r31
     276:	00 00       	nop
     278:	67 73       	andi	r22, 0x37	; 55
     27a:	59 4d       	sbci	r21, 0xD9	; 217
     27c:	47 63       	ori	r20, 0x37	; 55
     27e:	71 00       	.word	0x0071	; ????
     280:	00 7f       	andi	r16, 0xF0	; 240
     282:	7f 41       	sbci	r23, 0x1F	; 31
     284:	41 00       	.word	0x0041	; ????
     286:	00 00       	nop
     288:	01 03       	mulsu	r16, r17
     28a:	06 0c       	add	r0, r6
     28c:	18 30       	cpi	r17, 0x08	; 8
     28e:	60 00       	.word	0x0060	; ????
     290:	00 41       	sbci	r16, 0x10	; 16
     292:	41 7f       	andi	r20, 0xF1	; 241
     294:	7f 00       	.word	0x007f	; ????
     296:	00 00       	nop
     298:	08 0c       	add	r0, r8
     29a:	06 03       	mulsu	r16, r22
     29c:	06 0c       	add	r0, r6
     29e:	08 00       	.word	0x0008	; ????
     2a0:	80 80       	ld	r8, Z
     2a2:	80 80       	ld	r8, Z
     2a4:	80 80       	ld	r8, Z
     2a6:	80 80       	ld	r8, Z
     2a8:	00 00       	nop
     2aa:	03 07       	cpc	r16, r19
     2ac:	04 00       	.word	0x0004	; ????
     2ae:	00 00       	nop
     2b0:	20 74       	andi	r18, 0x40	; 64
     2b2:	54 54       	subi	r21, 0x44	; 68
     2b4:	3c 78       	andi	r19, 0x8C	; 140
     2b6:	40 00       	.word	0x0040	; ????
     2b8:	41 3f       	cpi	r20, 0xF1	; 241
     2ba:	7f 44       	sbci	r23, 0x4F	; 79
     2bc:	44 7c       	andi	r20, 0xC4	; 196
     2be:	38 00       	.word	0x0038	; ????
     2c0:	38 7c       	andi	r19, 0xC8	; 200
     2c2:	44 44       	sbci	r20, 0x44	; 68
     2c4:	6c 28       	or	r6, r12
     2c6:	00 00       	nop
     2c8:	30 78       	andi	r19, 0x80	; 128
     2ca:	48 49       	sbci	r20, 0x98	; 152
     2cc:	3f 7f       	andi	r19, 0xFF	; 255
     2ce:	40 00       	.word	0x0040	; ????
     2d0:	38 7c       	andi	r19, 0xC8	; 200
     2d2:	54 54       	subi	r21, 0x44	; 68
     2d4:	5c 18       	sub	r5, r12
     2d6:	00 00       	nop
     2d8:	48 7e       	andi	r20, 0xE8	; 232
     2da:	7f 49       	sbci	r23, 0x9F	; 159
     2dc:	03 02       	muls	r16, r19
     2de:	00 00       	nop
     2e0:	98 bc       	out	0x28, r9	; 40
     2e2:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2e4:	f8 7c       	andi	r31, 0xC8	; 200
     2e6:	04 00       	.word	0x0004	; ????
     2e8:	41 7f       	andi	r20, 0xF1	; 241
     2ea:	7f 08       	sbc	r7, r15
     2ec:	04 7c       	andi	r16, 0xC4	; 196
     2ee:	78 00       	.word	0x0078	; ????
     2f0:	00 44       	sbci	r16, 0x40	; 64
     2f2:	7d 7d       	andi	r23, 0xDD	; 221
     2f4:	40 00       	.word	0x0040	; ????
     2f6:	00 00       	nop
     2f8:	40 c4       	rjmp	.+2176   	; 0xb7a <CAN_module_init+0x6c>
     2fa:	84 fd       	sbrc	r24, 4
     2fc:	7d 00       	.word	0x007d	; ????
     2fe:	00 00       	nop
     300:	41 7f       	andi	r20, 0xF1	; 241
     302:	7f 10       	cpse	r7, r15
     304:	38 6c       	ori	r19, 0xC8	; 200
     306:	44 00       	.word	0x0044	; ????
     308:	00 41       	sbci	r16, 0x10	; 16
     30a:	7f 7f       	andi	r23, 0xFF	; 255
     30c:	40 00       	.word	0x0040	; ????
     30e:	00 00       	nop
     310:	7c 7c       	andi	r23, 0xCC	; 204
     312:	0c 18       	sub	r0, r12
     314:	0c 7c       	andi	r16, 0xCC	; 204
     316:	78 00       	.word	0x0078	; ????
     318:	7c 7c       	andi	r23, 0xCC	; 204
     31a:	04 04       	cpc	r0, r4
     31c:	7c 78       	andi	r23, 0x8C	; 140
     31e:	00 00       	nop
     320:	38 7c       	andi	r19, 0xC8	; 200
     322:	44 44       	sbci	r20, 0x44	; 68
     324:	7c 38       	cpi	r23, 0x8C	; 140
     326:	00 00       	nop
     328:	84 fc       	sbrc	r8, 4
     32a:	f8 a4       	ldd	r15, Y+40	; 0x28
     32c:	24 3c       	cpi	r18, 0xC4	; 196
     32e:	18 00       	.word	0x0018	; ????
     330:	18 3c       	cpi	r17, 0xC8	; 200
     332:	24 a4       	ldd	r2, Z+44	; 0x2c
     334:	f8 fc       	.word	0xfcf8	; ????
     336:	84 00       	.word	0x0084	; ????
     338:	44 7c       	andi	r20, 0xC4	; 196
     33a:	78 44       	sbci	r23, 0x48	; 72
     33c:	1c 18       	sub	r1, r12
     33e:	00 00       	nop
     340:	48 5c       	subi	r20, 0xC8	; 200
     342:	54 54       	subi	r21, 0x44	; 68
     344:	74 24       	eor	r7, r4
     346:	00 00       	nop
     348:	00 04       	cpc	r0, r0
     34a:	3e 7f       	andi	r19, 0xFE	; 254
     34c:	44 24       	eor	r4, r4
     34e:	00 00       	nop
     350:	3c 7c       	andi	r19, 0xCC	; 204
     352:	40 40       	sbci	r20, 0x00	; 0
     354:	3c 7c       	andi	r19, 0xCC	; 204
     356:	40 00       	.word	0x0040	; ????
     358:	1c 3c       	cpi	r17, 0xCC	; 204
     35a:	60 60       	ori	r22, 0x00	; 0
     35c:	3c 1c       	adc	r3, r12
     35e:	00 00       	nop
     360:	3c 7c       	andi	r19, 0xCC	; 204
     362:	60 30       	cpi	r22, 0x00	; 0
     364:	60 7c       	andi	r22, 0xC0	; 192
     366:	3c 00       	.word	0x003c	; ????
     368:	44 6c       	ori	r20, 0xC4	; 196
     36a:	38 10       	cpse	r3, r8
     36c:	38 6c       	ori	r19, 0xC8	; 200
     36e:	44 00       	.word	0x0044	; ????
     370:	9c bc       	out	0x2c, r9	; 44
     372:	a0 a0       	ldd	r10, Z+32	; 0x20
     374:	fc 7c       	andi	r31, 0xCC	; 204
     376:	00 00       	nop
     378:	4c 64       	ori	r20, 0x4C	; 76
     37a:	74 5c       	subi	r23, 0xC4	; 196
     37c:	4c 64       	ori	r20, 0x4C	; 76
     37e:	00 00       	nop
     380:	08 08       	sbc	r0, r8
     382:	3e 77       	andi	r19, 0x7E	; 126
     384:	41 41       	sbci	r20, 0x11	; 17
     386:	00 00       	nop
     388:	00 00       	nop
     38a:	00 77       	andi	r16, 0x70	; 112
     38c:	77 00       	.word	0x0077	; ????
     38e:	00 00       	nop
     390:	41 41       	sbci	r20, 0x11	; 17
     392:	77 3e       	cpi	r23, 0xE7	; 231
     394:	08 08       	sbc	r0, r8
     396:	00 00       	nop
     398:	02 03       	mulsu	r16, r18
     39a:	01 03       	mulsu	r16, r17
     39c:	02 03       	mulsu	r16, r18
     39e:	01 00       	.word	0x0001	; ????

000003a0 <__ctors_end>:
     3a0:	11 24       	eor	r1, r1
     3a2:	1f be       	out	0x3f, r1	; 63
     3a4:	cf ef       	ldi	r28, 0xFF	; 255
     3a6:	d4 e0       	ldi	r29, 0x04	; 4
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	cd bf       	out	0x3d, r28	; 61

000003ac <__do_copy_data>:
     3ac:	12 e0       	ldi	r17, 0x02	; 2
     3ae:	a0 e0       	ldi	r26, 0x00	; 0
     3b0:	b1 e0       	ldi	r27, 0x01	; 1
     3b2:	e0 e9       	ldi	r30, 0x90	; 144
     3b4:	f5 e2       	ldi	r31, 0x25	; 37
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <__do_copy_data+0x10>
     3b8:	05 90       	lpm	r0, Z+
     3ba:	0d 92       	st	X+, r0
     3bc:	a8 3d       	cpi	r26, 0xD8	; 216
     3be:	b1 07       	cpc	r27, r17
     3c0:	d9 f7       	brne	.-10     	; 0x3b8 <__do_copy_data+0xc>

000003c2 <__do_clear_bss>:
     3c2:	23 e0       	ldi	r18, 0x03	; 3
     3c4:	a8 ed       	ldi	r26, 0xD8	; 216
     3c6:	b2 e0       	ldi	r27, 0x02	; 2
     3c8:	01 c0       	rjmp	.+2      	; 0x3cc <.do_clear_bss_start>

000003ca <.do_clear_bss_loop>:
     3ca:	1d 92       	st	X+, r1

000003cc <.do_clear_bss_start>:
     3cc:	a8 32       	cpi	r26, 0x28	; 40
     3ce:	b2 07       	cpc	r27, r18
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <.do_clear_bss_loop>
     3d2:	0e 94 c7 05 	call	0xb8e	; 0xb8e <main>
     3d6:	0c 94 c6 12 	jmp	0x258c	; 0x258c <_exit>

000003da <__bad_interrupt>:
     3da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003de <__vector_15>:
float negYfactor;
float negYadd;

volatile char ADC_data;

ISR (TIMER1_OVF_vect){
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	2f 93       	push	r18
     3ea:	3f 93       	push	r19
     3ec:	4f 93       	push	r20
     3ee:	5f 93       	push	r21
     3f0:	6f 93       	push	r22
     3f2:	7f 93       	push	r23
     3f4:	8f 93       	push	r24
     3f6:	9f 93       	push	r25
     3f8:	af 93       	push	r26
     3fa:	bf 93       	push	r27
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	ef 93       	push	r30
     402:	ff 93       	push	r31
	ADC[0x00] = 0x00;
     404:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     408:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     40c:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     40e:	89 ef       	ldi	r24, 0xF9	; 249
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     418:	00 00       	nop
	_delay_ms(1);
	joyy=ADC[0x00];
     41a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     41e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     422:	80 81       	ld	r24, Z
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	90 93 f6 02 	sts	0x02F6, r25	; 0x8002f6 <joyy+0x1>
     42a:	80 93 f5 02 	sts	0x02F5, r24	; 0x8002f5 <joyy>
	joyx=ADC[0x00];
     42e:	80 81       	ld	r24, Z
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	90 93 17 03 	sts	0x0317, r25	; 0x800317 <joyx+0x1>
     436:	80 93 16 03 	sts	0x0316, r24	; 0x800316 <joyx>
	sliderRight = ADC[0x00];
     43a:	80 81       	ld	r24, Z
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	90 93 e4 02 	sts	0x02E4, r25	; 0x8002e4 <sliderRight+0x1>
     442:	80 93 e3 02 	sts	0x02E3, r24	; 0x8002e3 <sliderRight>
	sliderLeft = ADC[0x00];
     446:	80 81       	ld	r24, Z
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	90 93 f2 02 	sts	0x02F2, r25	; 0x8002f2 <sliderLeft+0x1>
     44e:	80 93 f1 02 	sts	0x02F1, r24	; 0x8002f1 <sliderLeft>
	
	button1State = 0 != (PIND & (1<<PD2));
     452:	80 b3       	in	r24, 0x10	; 16
     454:	82 fb       	bst	r24, 2
     456:	66 27       	eor	r22, r22
     458:	60 f9       	bld	r22, 0
     45a:	70 e0       	ldi	r23, 0x00	; 0
     45c:	70 93 10 03 	sts	0x0310, r23	; 0x800310 <button1State+0x1>
     460:	60 93 0f 03 	sts	0x030F, r22	; 0x80030f <button1State>
	button2State = 0 != (PIND & (1<<PD3));
     464:	80 b3       	in	r24, 0x10	; 16
     466:	83 fb       	bst	r24, 3
     468:	44 27       	eor	r20, r20
     46a:	40 f9       	bld	r20, 0
     46c:	50 e0       	ldi	r21, 0x00	; 0
     46e:	50 93 f8 02 	sts	0x02F8, r21	; 0x8002f8 <button2State+0x1>
     472:	40 93 f7 02 	sts	0x02F7, r20	; 0x8002f7 <button2State>
	button3State = 1 != (0 != (PIND & (1<<PD5)));
     476:	80 b3       	in	r24, 0x10	; 16
     478:	82 95       	swap	r24
     47a:	86 95       	lsr	r24
     47c:	87 70       	andi	r24, 0x07	; 7
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	89 27       	eor	r24, r25
     482:	28 2f       	mov	r18, r24
     484:	21 70       	andi	r18, 0x01	; 1
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	30 93 19 03 	sts	0x0319, r19	; 0x800319 <button3State+0x1>
     48c:	20 93 18 03 	sts	0x0318, r18	; 0x800318 <button3State>
	
	if (joyy < middleyjoyy)
     490:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
     494:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
     498:	c0 91 e9 02 	lds	r28, 0x02E9	; 0x8002e9 <middleyjoyy>
     49c:	d0 91 ea 02 	lds	r29, 0x02EA	; 0x8002ea <middleyjoyy+0x1>
     4a0:	8c 17       	cp	r24, r28
     4a2:	9d 07       	cpc	r25, r29
     4a4:	54 f5       	brge	.+84     	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
	{
		joyyPercent = joyy*negYfactor/100+negYadd;
     4a6:	60 91 f5 02 	lds	r22, 0x02F5	; 0x8002f5 <joyy>
     4aa:	70 91 f6 02 	lds	r23, 0x02F6	; 0x8002f6 <joyy+0x1>
     4ae:	07 2e       	mov	r0, r23
     4b0:	00 0c       	add	r0, r0
     4b2:	88 0b       	sbc	r24, r24
     4b4:	99 0b       	sbc	r25, r25
     4b6:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     4ba:	20 91 07 03 	lds	r18, 0x0307	; 0x800307 <negYfactor>
     4be:	30 91 08 03 	lds	r19, 0x0308	; 0x800308 <negYfactor+0x1>
     4c2:	40 91 09 03 	lds	r20, 0x0309	; 0x800309 <negYfactor+0x2>
     4c6:	50 91 0a 03 	lds	r21, 0x030A	; 0x80030a <negYfactor+0x3>
     4ca:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	30 e0       	ldi	r19, 0x00	; 0
     4d2:	48 ec       	ldi	r20, 0xC8	; 200
     4d4:	52 e4       	ldi	r21, 0x42	; 66
     4d6:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     4da:	20 91 e5 02 	lds	r18, 0x02E5	; 0x8002e5 <negYadd>
     4de:	30 91 e6 02 	lds	r19, 0x02E6	; 0x8002e6 <negYadd+0x1>
     4e2:	40 91 e7 02 	lds	r20, 0x02E7	; 0x8002e7 <negYadd+0x2>
     4e6:	50 91 e8 02 	lds	r21, 0x02E8	; 0x8002e8 <negYadd+0x3>
     4ea:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__addsf3>
     4ee:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     4f2:	70 93 f4 02 	sts	0x02F4, r23	; 0x8002f4 <joyyPercent+0x1>
     4f6:	60 93 f3 02 	sts	0x02F3, r22	; 0x8002f3 <joyyPercent>
	}
	if (joyy >= middleyjoyy)
     4fa:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
     4fe:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
     502:	8c 17       	cp	r24, r28
     504:	9d 07       	cpc	r25, r29
     506:	54 f1       	brlt	.+84     	; 0x55c <__stack+0x5d>
	{
		joyyPercent = joyy*posYfactor/100+posYadd;
     508:	60 91 f5 02 	lds	r22, 0x02F5	; 0x8002f5 <joyy>
     50c:	70 91 f6 02 	lds	r23, 0x02F6	; 0x8002f6 <joyy+0x1>
     510:	07 2e       	mov	r0, r23
     512:	00 0c       	add	r0, r0
     514:	88 0b       	sbc	r24, r24
     516:	99 0b       	sbc	r25, r25
     518:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     51c:	20 91 fd 02 	lds	r18, 0x02FD	; 0x8002fd <posYfactor>
     520:	30 91 fe 02 	lds	r19, 0x02FE	; 0x8002fe <posYfactor+0x1>
     524:	40 91 ff 02 	lds	r20, 0x02FF	; 0x8002ff <posYfactor+0x2>
     528:	50 91 00 03 	lds	r21, 0x0300	; 0x800300 <posYfactor+0x3>
     52c:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     530:	20 e0       	ldi	r18, 0x00	; 0
     532:	30 e0       	ldi	r19, 0x00	; 0
     534:	48 ec       	ldi	r20, 0xC8	; 200
     536:	52 e4       	ldi	r21, 0x42	; 66
     538:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     53c:	20 91 ed 02 	lds	r18, 0x02ED	; 0x8002ed <posYadd>
     540:	30 91 ee 02 	lds	r19, 0x02EE	; 0x8002ee <posYadd+0x1>
     544:	40 91 ef 02 	lds	r20, 0x02EF	; 0x8002ef <posYadd+0x2>
     548:	50 91 f0 02 	lds	r21, 0x02F0	; 0x8002f0 <posYadd+0x3>
     54c:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__addsf3>
     550:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     554:	70 93 f4 02 	sts	0x02F4, r23	; 0x8002f4 <joyyPercent+0x1>
     558:	60 93 f3 02 	sts	0x02F3, r22	; 0x8002f3 <joyyPercent>
	}
	if (joyx < middleyjoyx)
     55c:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <joyx>
     560:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <joyx+0x1>
     564:	c0 91 05 03 	lds	r28, 0x0305	; 0x800305 <middleyjoyx>
     568:	d0 91 06 03 	lds	r29, 0x0306	; 0x800306 <middleyjoyx+0x1>
     56c:	8c 17       	cp	r24, r28
     56e:	9d 07       	cpc	r25, r29
     570:	54 f5       	brge	.+84     	; 0x5c6 <__stack+0xc7>
	{
		joyxPercent = joyx*negXfactor/100+negXadd;
     572:	60 91 16 03 	lds	r22, 0x0316	; 0x800316 <joyx>
     576:	70 91 17 03 	lds	r23, 0x0317	; 0x800317 <joyx+0x1>
     57a:	07 2e       	mov	r0, r23
     57c:	00 0c       	add	r0, r0
     57e:	88 0b       	sbc	r24, r24
     580:	99 0b       	sbc	r25, r25
     582:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     586:	20 91 0b 03 	lds	r18, 0x030B	; 0x80030b <negXfactor>
     58a:	30 91 0c 03 	lds	r19, 0x030C	; 0x80030c <negXfactor+0x1>
     58e:	40 91 0d 03 	lds	r20, 0x030D	; 0x80030d <negXfactor+0x2>
     592:	50 91 0e 03 	lds	r21, 0x030E	; 0x80030e <negXfactor+0x3>
     596:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     59a:	20 e0       	ldi	r18, 0x00	; 0
     59c:	30 e0       	ldi	r19, 0x00	; 0
     59e:	48 ec       	ldi	r20, 0xC8	; 200
     5a0:	52 e4       	ldi	r21, 0x42	; 66
     5a2:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     5a6:	20 91 01 03 	lds	r18, 0x0301	; 0x800301 <negXadd>
     5aa:	30 91 02 03 	lds	r19, 0x0302	; 0x800302 <negXadd+0x1>
     5ae:	40 91 03 03 	lds	r20, 0x0303	; 0x800303 <negXadd+0x2>
     5b2:	50 91 04 03 	lds	r21, 0x0304	; 0x800304 <negXadd+0x3>
     5b6:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__addsf3>
     5ba:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     5be:	70 93 ec 02 	sts	0x02EC, r23	; 0x8002ec <joyxPercent+0x1>
     5c2:	60 93 eb 02 	sts	0x02EB, r22	; 0x8002eb <joyxPercent>
	}
	if (joyx >= middleyjoyx)
     5c6:	80 91 16 03 	lds	r24, 0x0316	; 0x800316 <joyx>
     5ca:	90 91 17 03 	lds	r25, 0x0317	; 0x800317 <joyx+0x1>
     5ce:	8c 17       	cp	r24, r28
     5d0:	9d 07       	cpc	r25, r29
     5d2:	54 f1       	brlt	.+84     	; 0x628 <__stack+0x129>
	{
		joyxPercent = joyx*posXfactor/100+posXadd;
     5d4:	60 91 16 03 	lds	r22, 0x0316	; 0x800316 <joyx>
     5d8:	70 91 17 03 	lds	r23, 0x0317	; 0x800317 <joyx+0x1>
     5dc:	07 2e       	mov	r0, r23
     5de:	00 0c       	add	r0, r0
     5e0:	88 0b       	sbc	r24, r24
     5e2:	99 0b       	sbc	r25, r25
     5e4:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     5e8:	20 91 12 03 	lds	r18, 0x0312	; 0x800312 <posXfactor>
     5ec:	30 91 13 03 	lds	r19, 0x0313	; 0x800313 <posXfactor+0x1>
     5f0:	40 91 14 03 	lds	r20, 0x0314	; 0x800314 <posXfactor+0x2>
     5f4:	50 91 15 03 	lds	r21, 0x0315	; 0x800315 <posXfactor+0x3>
     5f8:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 e0       	ldi	r19, 0x00	; 0
     600:	48 ec       	ldi	r20, 0xC8	; 200
     602:	52 e4       	ldi	r21, 0x42	; 66
     604:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__divsf3>
     608:	20 91 f9 02 	lds	r18, 0x02F9	; 0x8002f9 <posXadd>
     60c:	30 91 fa 02 	lds	r19, 0x02FA	; 0x8002fa <posXadd+0x1>
     610:	40 91 fb 02 	lds	r20, 0x02FB	; 0x8002fb <posXadd+0x2>
     614:	50 91 fc 02 	lds	r21, 0x02FC	; 0x8002fc <posXadd+0x3>
     618:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <__addsf3>
     61c:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     620:	70 93 ec 02 	sts	0x02EC, r23	; 0x8002ec <joyxPercent+0x1>
     624:	60 93 eb 02 	sts	0x02EB, r22	; 0x8002eb <joyxPercent>
	}
	if (joyxPercent > -5 && joyxPercent < 5)
     628:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <joyxPercent>
     62c:	90 91 ec 02 	lds	r25, 0x02EC	; 0x8002ec <joyxPercent+0x1>
     630:	8c 3f       	cpi	r24, 0xFC	; 252
     632:	9f 4f       	sbci	r25, 0xFF	; 255
     634:	54 f0       	brlt	.+20     	; 0x64a <__stack+0x14b>
     636:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <joyxPercent>
     63a:	90 91 ec 02 	lds	r25, 0x02EC	; 0x8002ec <joyxPercent+0x1>
     63e:	05 97       	sbiw	r24, 0x05	; 5
     640:	24 f4       	brge	.+8      	; 0x64a <__stack+0x14b>
	{
		joyxPercent = 0;
     642:	10 92 ec 02 	sts	0x02EC, r1	; 0x8002ec <joyxPercent+0x1>
     646:	10 92 eb 02 	sts	0x02EB, r1	; 0x8002eb <joyxPercent>
	}
	if (joyyPercent > -5 && joyyPercent < 5)
     64a:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <joyyPercent>
     64e:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <joyyPercent+0x1>
     652:	8c 3f       	cpi	r24, 0xFC	; 252
     654:	9f 4f       	sbci	r25, 0xFF	; 255
     656:	54 f0       	brlt	.+20     	; 0x66c <__stack+0x16d>
     658:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <joyyPercent>
     65c:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <joyyPercent+0x1>
     660:	05 97       	sbiw	r24, 0x05	; 5
     662:	24 f4       	brge	.+8      	; 0x66c <__stack+0x16d>
	{
		joyyPercent = 0;
     664:	10 92 f4 02 	sts	0x02F4, r1	; 0x8002f4 <joyyPercent+0x1>
     668:	10 92 f3 02 	sts	0x02F3, r1	; 0x8002f3 <joyyPercent>
	}

}
     66c:	ff 91       	pop	r31
     66e:	ef 91       	pop	r30
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	bf 91       	pop	r27
     676:	af 91       	pop	r26
     678:	9f 91       	pop	r25
     67a:	8f 91       	pop	r24
     67c:	7f 91       	pop	r23
     67e:	6f 91       	pop	r22
     680:	5f 91       	pop	r21
     682:	4f 91       	pop	r20
     684:	3f 91       	pop	r19
     686:	2f 91       	pop	r18
     688:	0f 90       	pop	r0
     68a:	0f be       	out	0x3f, r0	; 63
     68c:	0f 90       	pop	r0
     68e:	1f 90       	pop	r1
     690:	18 95       	reti

00000692 <adc_init>:





void adc_init(int *counter){
     692:	6f 92       	push	r6
     694:	7f 92       	push	r7
     696:	8f 92       	push	r8
     698:	9f 92       	push	r9
     69a:	af 92       	push	r10
     69c:	bf 92       	push	r11
     69e:	cf 92       	push	r12
     6a0:	df 92       	push	r13
     6a2:	ef 92       	push	r14
     6a4:	ff 92       	push	r15
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
	TCCR3A = (1 << WGM30) | (1 << WGM31) | (1 << COM3A0);
     6ae:	83 e4       	ldi	r24, 0x43	; 67
     6b0:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
	TCCR3B = (1 << CS30) | (1 << WGM33);
     6b4:	81 e1       	ldi	r24, 0x11	; 17
     6b6:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
	OCR3A = 2; // Define the frequency of the generated PWM signal
     6ba:	82 e0       	ldi	r24, 0x02	; 2
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     6c2:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	DDRD |= (1 << DDD4); // Configure PD4 as PWM output
     6c6:	81 b3       	in	r24, 0x11	; 17
     6c8:	80 61       	ori	r24, 0x10	; 16
     6ca:	81 bb       	out	0x11, r24	; 17
     6cc:	2f e3       	ldi	r18, 0x3F	; 63
     6ce:	8d e0       	ldi	r24, 0x0D	; 13
     6d0:	93 e0       	ldi	r25, 0x03	; 3
     6d2:	21 50       	subi	r18, 0x01	; 1
     6d4:	80 40       	sbci	r24, 0x00	; 0
     6d6:	90 40       	sbci	r25, 0x00	; 0
     6d8:	e1 f7       	brne	.-8      	; 0x6d2 <adc_init+0x40>
     6da:	00 c0       	rjmp	.+0      	; 0x6dc <adc_init+0x4a>
     6dc:	00 00       	nop
	
	
	_delay_ms(1000);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     6de:	20 e0       	ldi	r18, 0x00	; 0
     6e0:	30 e0       	ldi	r19, 0x00	; 0
	OCR3A = 2; // Define the frequency of the generated PWM signal
	DDRD |= (1 << DDD4); // Configure PD4 as PWM output
	
	
	_delay_ms(1000);
	int times = 0;
     6e2:	c0 e0       	ldi	r28, 0x00	; 0
     6e4:	d0 e0       	ldi	r29, 0x00	; 0
	int ignore;
	for (int i = 0; i<100; i++)
     6e6:	30 c0       	rjmp	.+96     	; 0x748 <adc_init+0xb6>
	{
		ADC[0x00] = 0x00;
     6e8:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6ec:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6f0:	10 82       	st	Z, r1
     6f2:	89 ef       	ldi	r24, 0xF9	; 249
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	01 97       	sbiw	r24, 0x01	; 1
     6f8:	f1 f7       	brne	.-4      	; 0x6f6 <adc_init+0x64>
     6fa:	00 c0       	rjmp	.+0      	; 0x6fc <adc_init+0x6a>
     6fc:	00 00       	nop
		_delay_ms(1);
		intermittentx = intermittentx + ADC[0x00];
     6fe:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     702:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     706:	40 81       	ld	r20, Z
     708:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
     70c:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
     710:	84 0f       	add	r24, r20
     712:	91 1d       	adc	r25, r1
     714:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <__data_end+0x1>
     718:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <__data_end>
		intermittenty = intermittenty + ADC[0x00];
     71c:	40 81       	ld	r20, Z
     71e:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <intermittenty>
     722:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <intermittenty+0x1>
     726:	84 0f       	add	r24, r20
     728:	91 1d       	adc	r25, r1
     72a:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <intermittenty+0x1>
     72e:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <intermittenty>
		ignore = ADC[0x00];
     732:	80 81       	ld	r24, Z
		ignore = ADC[0x00];
     734:	80 81       	ld	r24, Z
     736:	89 ef       	ldi	r24, 0xF9	; 249
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	f1 f7       	brne	.-4      	; 0x73a <adc_init+0xa8>
     73e:	00 c0       	rjmp	.+0      	; 0x740 <adc_init+0xae>
     740:	00 00       	nop
		_delay_ms(1);
		times++;
     742:	21 96       	adiw	r28, 0x01	; 1
	
	
	_delay_ms(1000);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     744:	2f 5f       	subi	r18, 0xFF	; 255
     746:	3f 4f       	sbci	r19, 0xFF	; 255
     748:	24 36       	cpi	r18, 0x64	; 100
     74a:	31 05       	cpc	r19, r1
     74c:	6c f2       	brlt	.-102    	; 0x6e8 <adc_init+0x56>
		ignore = ADC[0x00];
		ignore = ADC[0x00];
		_delay_ms(1);
		times++;
	}
	middleyjoyx = intermittentx/times;
     74e:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <__data_end>
     752:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <__data_end+0x1>
     756:	be 01       	movw	r22, r28
     758:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     75c:	26 2f       	mov	r18, r22
     75e:	37 2f       	mov	r19, r23
     760:	60 93 05 03 	sts	0x0305, r22	; 0x800305 <middleyjoyx>
     764:	70 93 06 03 	sts	0x0306, r23	; 0x800306 <middleyjoyx+0x1>
	middleyjoyy = intermittenty/times;
     768:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <intermittenty>
     76c:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <intermittenty+0x1>
     770:	be 01       	movw	r22, r28
     772:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     776:	60 93 e9 02 	sts	0x02E9, r22	; 0x8002e9 <middleyjoyy>
     77a:	70 93 ea 02 	sts	0x02EA, r23	; 0x8002ea <middleyjoyy+0x1>
	printf("\n\n\r %d %d \n", middleyjoyx, middleyjoyy);
     77e:	7f 93       	push	r23
     780:	6f 93       	push	r22
     782:	3f 93       	push	r19
     784:	2f 93       	push	r18
     786:	8e e1       	ldi	r24, 0x1E	; 30
     788:	91 e0       	ldi	r25, 0x01	; 1
     78a:	9f 93       	push	r25
     78c:	8f 93       	push	r24
     78e:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	
	posXfactor = (10000)/(255-middleyjoyx);
     792:	00 91 05 03 	lds	r16, 0x0305	; 0x800305 <middleyjoyx>
     796:	10 91 06 03 	lds	r17, 0x0306	; 0x800306 <middleyjoyx+0x1>
     79a:	66 24       	eor	r6, r6
     79c:	6a 94       	dec	r6
     79e:	71 2c       	mov	r7, r1
     7a0:	73 01       	movw	r14, r6
     7a2:	e0 1a       	sub	r14, r16
     7a4:	f1 0a       	sbc	r15, r17
     7a6:	c0 e1       	ldi	r28, 0x10	; 16
     7a8:	d7 e2       	ldi	r29, 0x27	; 39
     7aa:	ce 01       	movw	r24, r28
     7ac:	b7 01       	movw	r22, r14
     7ae:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     7b2:	07 2e       	mov	r0, r23
     7b4:	00 0c       	add	r0, r0
     7b6:	88 0b       	sbc	r24, r24
     7b8:	99 0b       	sbc	r25, r25
     7ba:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     7be:	4b 01       	movw	r8, r22
     7c0:	5c 01       	movw	r10, r24
     7c2:	60 93 12 03 	sts	0x0312, r22	; 0x800312 <posXfactor>
     7c6:	70 93 13 03 	sts	0x0313, r23	; 0x800313 <posXfactor+0x1>
     7ca:	80 93 14 03 	sts	0x0314, r24	; 0x800314 <posXfactor+0x2>
     7ce:	90 93 15 03 	sts	0x0315, r25	; 0x800315 <posXfactor+0x3>
	posXadd = -1*(100*middleyjoyx)/(255-middleyjoyx);
     7d2:	2c e9       	ldi	r18, 0x9C	; 156
     7d4:	20 03       	mulsu	r18, r16
     7d6:	60 01       	movw	r12, r0
     7d8:	21 9f       	mul	r18, r17
     7da:	d0 0c       	add	r13, r0
     7dc:	11 24       	eor	r1, r1
     7de:	c6 01       	movw	r24, r12
     7e0:	b7 01       	movw	r22, r14
     7e2:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     7e6:	7b 01       	movw	r14, r22
     7e8:	07 2e       	mov	r0, r23
     7ea:	00 0c       	add	r0, r0
     7ec:	88 0b       	sbc	r24, r24
     7ee:	99 0b       	sbc	r25, r25
     7f0:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     7f4:	60 93 f9 02 	sts	0x02F9, r22	; 0x8002f9 <posXadd>
     7f8:	70 93 fa 02 	sts	0x02FA, r23	; 0x8002fa <posXadd+0x1>
     7fc:	80 93 fb 02 	sts	0x02FB, r24	; 0x8002fb <posXadd+0x2>
     800:	90 93 fc 02 	sts	0x02FC, r25	; 0x8002fc <posXadd+0x3>
	negXfactor = (10000/middleyjoyx);
     804:	ce 01       	movw	r24, r28
     806:	b8 01       	movw	r22, r16
     808:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     80c:	07 2e       	mov	r0, r23
     80e:	00 0c       	add	r0, r0
     810:	88 0b       	sbc	r24, r24
     812:	99 0b       	sbc	r25, r25
     814:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     818:	60 93 0b 03 	sts	0x030B, r22	; 0x80030b <negXfactor>
     81c:	70 93 0c 03 	sts	0x030C, r23	; 0x80030c <negXfactor+0x1>
     820:	80 93 0d 03 	sts	0x030D, r24	; 0x80030d <negXfactor+0x2>
     824:	90 93 0e 03 	sts	0x030E, r25	; 0x80030e <negXfactor+0x3>
	negXadd = -1*(middleyjoyx*100)/(middleyjoyx);
     828:	c6 01       	movw	r24, r12
     82a:	b8 01       	movw	r22, r16
     82c:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     830:	07 2e       	mov	r0, r23
     832:	00 0c       	add	r0, r0
     834:	88 0b       	sbc	r24, r24
     836:	99 0b       	sbc	r25, r25
     838:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     83c:	60 93 01 03 	sts	0x0301, r22	; 0x800301 <negXadd>
     840:	70 93 02 03 	sts	0x0302, r23	; 0x800302 <negXadd+0x1>
     844:	80 93 03 03 	sts	0x0303, r24	; 0x800303 <negXadd+0x2>
     848:	90 93 04 03 	sts	0x0304, r25	; 0x800304 <negXadd+0x3>
	posYfactor = (10000)/(255-middleyjoyy);
     84c:	00 91 e9 02 	lds	r16, 0x02E9	; 0x8002e9 <middleyjoyy>
     850:	10 91 ea 02 	lds	r17, 0x02EA	; 0x8002ea <middleyjoyy+0x1>
     854:	60 1a       	sub	r6, r16
     856:	71 0a       	sbc	r7, r17
     858:	ce 01       	movw	r24, r28
     85a:	b3 01       	movw	r22, r6
     85c:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     860:	07 2e       	mov	r0, r23
     862:	00 0c       	add	r0, r0
     864:	88 0b       	sbc	r24, r24
     866:	99 0b       	sbc	r25, r25
     868:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     86c:	60 93 fd 02 	sts	0x02FD, r22	; 0x8002fd <posYfactor>
     870:	70 93 fe 02 	sts	0x02FE, r23	; 0x8002fe <posYfactor+0x1>
     874:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <posYfactor+0x2>
     878:	90 93 00 03 	sts	0x0300, r25	; 0x800300 <posYfactor+0x3>
	posYadd= -1*(100*middleyjoyy)/(255-middleyjoyy);
     87c:	2c e9       	ldi	r18, 0x9C	; 156
     87e:	20 03       	mulsu	r18, r16
     880:	60 01       	movw	r12, r0
     882:	21 9f       	mul	r18, r17
     884:	d0 0c       	add	r13, r0
     886:	11 24       	eor	r1, r1
     888:	c6 01       	movw	r24, r12
     88a:	b3 01       	movw	r22, r6
     88c:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     890:	07 2e       	mov	r0, r23
     892:	00 0c       	add	r0, r0
     894:	88 0b       	sbc	r24, r24
     896:	99 0b       	sbc	r25, r25
     898:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     89c:	60 93 ed 02 	sts	0x02ED, r22	; 0x8002ed <posYadd>
     8a0:	70 93 ee 02 	sts	0x02EE, r23	; 0x8002ee <posYadd+0x1>
     8a4:	80 93 ef 02 	sts	0x02EF, r24	; 0x8002ef <posYadd+0x2>
     8a8:	90 93 f0 02 	sts	0x02F0, r25	; 0x8002f0 <posYadd+0x3>
	negYfactor = (10000/middleyjoyy);
     8ac:	ce 01       	movw	r24, r28
     8ae:	b8 01       	movw	r22, r16
     8b0:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     8b4:	07 2e       	mov	r0, r23
     8b6:	00 0c       	add	r0, r0
     8b8:	88 0b       	sbc	r24, r24
     8ba:	99 0b       	sbc	r25, r25
     8bc:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     8c0:	60 93 07 03 	sts	0x0307, r22	; 0x800307 <negYfactor>
     8c4:	70 93 08 03 	sts	0x0308, r23	; 0x800308 <negYfactor+0x1>
     8c8:	80 93 09 03 	sts	0x0309, r24	; 0x800309 <negYfactor+0x2>
     8cc:	90 93 0a 03 	sts	0x030A, r25	; 0x80030a <negYfactor+0x3>
	negYadd = -1*(middleyjoyy*100)/(middleyjoyy);
     8d0:	c6 01       	movw	r24, r12
     8d2:	b8 01       	movw	r22, r16
     8d4:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <__divmodhi4>
     8d8:	07 2e       	mov	r0, r23
     8da:	00 0c       	add	r0, r0
     8dc:	88 0b       	sbc	r24, r24
     8de:	99 0b       	sbc	r25, r25
     8e0:	0e 94 02 0d 	call	0x1a04	; 0x1a04 <__floatsisf>
     8e4:	60 93 e5 02 	sts	0x02E5, r22	; 0x8002e5 <negYadd>
     8e8:	70 93 e6 02 	sts	0x02E6, r23	; 0x8002e6 <negYadd+0x1>
     8ec:	80 93 e7 02 	sts	0x02E7, r24	; 0x8002e7 <negYadd+0x2>
     8f0:	90 93 e8 02 	sts	0x02E8, r25	; 0x8002e8 <negYadd+0x3>
	printf("Pos x: %d*x + %d\n\r", (int)(posXfactor*1000), (int)posXadd);
     8f4:	20 e0       	ldi	r18, 0x00	; 0
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	4a e7       	ldi	r20, 0x7A	; 122
     8fa:	54 e4       	ldi	r21, 0x44	; 68
     8fc:	c5 01       	movw	r24, r10
     8fe:	b4 01       	movw	r22, r8
     900:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     904:	ff 92       	push	r15
     906:	ef 92       	push	r14
     908:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     90c:	7f 93       	push	r23
     90e:	6f 93       	push	r22
     910:	8a e2       	ldi	r24, 0x2A	; 42
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	9f 93       	push	r25
     916:	8f 93       	push	r24
     918:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	printf("Neg x: %d*x + %d\n\r", (int)(negXfactor*1000), (int)negXadd);
     91c:	20 e0       	ldi	r18, 0x00	; 0
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	4a e7       	ldi	r20, 0x7A	; 122
     922:	54 e4       	ldi	r21, 0x44	; 68
     924:	60 91 0b 03 	lds	r22, 0x030B	; 0x80030b <negXfactor>
     928:	70 91 0c 03 	lds	r23, 0x030C	; 0x80030c <negXfactor+0x1>
     92c:	80 91 0d 03 	lds	r24, 0x030D	; 0x80030d <negXfactor+0x2>
     930:	90 91 0e 03 	lds	r25, 0x030E	; 0x80030e <negXfactor+0x3>
     934:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     938:	6b 01       	movw	r12, r22
     93a:	7c 01       	movw	r14, r24
     93c:	60 91 01 03 	lds	r22, 0x0301	; 0x800301 <negXadd>
     940:	70 91 02 03 	lds	r23, 0x0302	; 0x800302 <negXadd+0x1>
     944:	80 91 03 03 	lds	r24, 0x0303	; 0x800303 <negXadd+0x2>
     948:	90 91 04 03 	lds	r25, 0x0304	; 0x800304 <negXadd+0x3>
     94c:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     950:	7f 93       	push	r23
     952:	6f 93       	push	r22
     954:	c7 01       	movw	r24, r14
     956:	b6 01       	movw	r22, r12
     958:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     95c:	7f 93       	push	r23
     95e:	6f 93       	push	r22
     960:	8d e3       	ldi	r24, 0x3D	; 61
     962:	91 e0       	ldi	r25, 0x01	; 1
     964:	9f 93       	push	r25
     966:	8f 93       	push	r24
     968:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	printf("Pos y: %d*y + %d\n\r", (int)(posYfactor*1000), (int)posYadd);
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	4a e7       	ldi	r20, 0x7A	; 122
     972:	54 e4       	ldi	r21, 0x44	; 68
     974:	60 91 fd 02 	lds	r22, 0x02FD	; 0x8002fd <posYfactor>
     978:	70 91 fe 02 	lds	r23, 0x02FE	; 0x8002fe <posYfactor+0x1>
     97c:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <posYfactor+0x2>
     980:	90 91 00 03 	lds	r25, 0x0300	; 0x800300 <posYfactor+0x3>
     984:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     988:	6b 01       	movw	r12, r22
     98a:	7c 01       	movw	r14, r24
     98c:	60 91 ed 02 	lds	r22, 0x02ED	; 0x8002ed <posYadd>
     990:	70 91 ee 02 	lds	r23, 0x02EE	; 0x8002ee <posYadd+0x1>
     994:	80 91 ef 02 	lds	r24, 0x02EF	; 0x8002ef <posYadd+0x2>
     998:	90 91 f0 02 	lds	r25, 0x02F0	; 0x8002f0 <posYadd+0x3>
     99c:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     9a0:	7f 93       	push	r23
     9a2:	6f 93       	push	r22
     9a4:	c7 01       	movw	r24, r14
     9a6:	b6 01       	movw	r22, r12
     9a8:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     9ac:	7f 93       	push	r23
     9ae:	6f 93       	push	r22
     9b0:	80 e5       	ldi	r24, 0x50	; 80
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	9f 93       	push	r25
     9b6:	8f 93       	push	r24
     9b8:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	printf("Neg y: %d*y + %d\n\r", (int)(negYfactor*1000), (int)negYadd);
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	4a e7       	ldi	r20, 0x7A	; 122
     9c2:	54 e4       	ldi	r21, 0x44	; 68
     9c4:	60 91 07 03 	lds	r22, 0x0307	; 0x800307 <negYfactor>
     9c8:	70 91 08 03 	lds	r23, 0x0308	; 0x800308 <negYfactor+0x1>
     9cc:	80 91 09 03 	lds	r24, 0x0309	; 0x800309 <negYfactor+0x2>
     9d0:	90 91 0a 03 	lds	r25, 0x030A	; 0x80030a <negYfactor+0x3>
     9d4:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <__mulsf3>
     9d8:	6b 01       	movw	r12, r22
     9da:	7c 01       	movw	r14, r24
     9dc:	60 91 e5 02 	lds	r22, 0x02E5	; 0x8002e5 <negYadd>
     9e0:	70 91 e6 02 	lds	r23, 0x02E6	; 0x8002e6 <negYadd+0x1>
     9e4:	80 91 e7 02 	lds	r24, 0x02E7	; 0x8002e7 <negYadd+0x2>
     9e8:	90 91 e8 02 	lds	r25, 0x02E8	; 0x8002e8 <negYadd+0x3>
     9ec:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     9f0:	7f 93       	push	r23
     9f2:	6f 93       	push	r22
     9f4:	c7 01       	movw	r24, r14
     9f6:	b6 01       	movw	r22, r12
     9f8:	0e 94 ca 0c 	call	0x1994	; 0x1994 <__fixsfsi>
     9fc:	7f 93       	push	r23
     9fe:	6f 93       	push	r22
     a00:	83 e6       	ldi	r24, 0x63	; 99
     a02:	91 e0       	ldi	r25, 0x01	; 1
     a04:	9f 93       	push	r25
     a06:	8f 93       	push	r24
     a08:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	
	TCCR1A = 0x00;
     a0c:	1f bc       	out	0x2f, r1	; 47
	TCCR1B =  (1<<CS11);
     a0e:	82 e0       	ldi	r24, 0x02	; 2
     a10:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1);
     a12:	80 e8       	ldi	r24, 0x80	; 128
     a14:	89 bf       	out	0x39, r24	; 57
	sei();
     a16:	78 94       	sei
	
	ADC[0x00] = 0x00;
     a18:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     a1c:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     a20:	10 82       	st	Z, r1
	//set_bit(gicr,int1);
	//// enable global interrupts
	//sei();


}
     a22:	8d b7       	in	r24, 0x3d	; 61
     a24:	9e b7       	in	r25, 0x3e	; 62
     a26:	4e 96       	adiw	r24, 0x1e	; 30
     a28:	0f b6       	in	r0, 0x3f	; 63
     a2a:	f8 94       	cli
     a2c:	9e bf       	out	0x3e, r25	; 62
     a2e:	0f be       	out	0x3f, r0	; 63
     a30:	8d bf       	out	0x3d, r24	; 61
     a32:	df 91       	pop	r29
     a34:	cf 91       	pop	r28
     a36:	1f 91       	pop	r17
     a38:	0f 91       	pop	r16
     a3a:	ff 90       	pop	r15
     a3c:	ef 90       	pop	r14
     a3e:	df 90       	pop	r13
     a40:	cf 90       	pop	r12
     a42:	bf 90       	pop	r11
     a44:	af 90       	pop	r10
     a46:	9f 90       	pop	r9
     a48:	8f 90       	pop	r8
     a4a:	7f 90       	pop	r7
     a4c:	6f 90       	pop	r6
     a4e:	08 95       	ret

00000a50 <__vector_2>:

ISR(INT1_vect){
     a50:	1f 92       	push	r1
     a52:	0f 92       	push	r0
     a54:	0f b6       	in	r0, 0x3f	; 63
     a56:	0f 92       	push	r0
     a58:	11 24       	eor	r1, r1
     a5a:	8f 93       	push	r24
     a5c:	ef 93       	push	r30
     a5e:	ff 93       	push	r31
	
	ADC_data = ADC[0x00];
     a60:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     a64:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     a68:	80 81       	ld	r24, Z
     a6a:	80 93 11 03 	sts	0x0311, r24	; 0x800311 <ADC_data>
}
     a6e:	ff 91       	pop	r31
     a70:	ef 91       	pop	r30
     a72:	8f 91       	pop	r24
     a74:	0f 90       	pop	r0
     a76:	0f be       	out	0x3f, r0	; 63
     a78:	0f 90       	pop	r0
     a7a:	1f 90       	pop	r1
     a7c:	18 95       	reti

00000a7e <__vector_1>:
#include "CAN_module_registers.h"
#include "CAN_controller.h"

volatile uint8_t message_interrupt_flag=0;

ISR(INT0_vect){
     a7e:	1f 92       	push	r1
     a80:	0f 92       	push	r0
     a82:	0f b6       	in	r0, 0x3f	; 63
     a84:	0f 92       	push	r0
     a86:	11 24       	eor	r1, r1
     a88:	8f 93       	push	r24
	message_interrupt_flag=1;
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <message_interrupt_flag>
}
     a90:	8f 91       	pop	r24
     a92:	0f 90       	pop	r0
     a94:	0f be       	out	0x3f, r0	; 63
     a96:	0f 90       	pop	r0
     a98:	1f 90       	pop	r1
     a9a:	18 95       	reti

00000a9c <CAN_module_activate_cs>:
	SPI_Transmit(MCP_RESET);
	CAN_module_deactivate_cs();
	_delay_ms(10); //change if timing is off
}

void CAN_module_test(void){
     a9c:	18 ba       	out	0x18, r1	; 24
     a9e:	08 95       	ret

00000aa0 <CAN_module_deactivate_cs>:
     aa0:	80 e1       	ldi	r24, 0x10	; 16
     aa2:	88 bb       	out	0x18, r24	; 24
     aa4:	08 95       	ret

00000aa6 <CAN_module_read>:
     aa6:	cf 93       	push	r28
     aa8:	c8 2f       	mov	r28, r24
     aaa:	0e 94 4e 05 	call	0xa9c	; 0xa9c <CAN_module_activate_cs>
     aae:	83 e0       	ldi	r24, 0x03	; 3
     ab0:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     ab4:	8c 2f       	mov	r24, r28
     ab6:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     aba:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <SPI_Recieve>
     abe:	c8 2f       	mov	r28, r24
     ac0:	0e 94 50 05 	call	0xaa0	; 0xaa0 <CAN_module_deactivate_cs>
     ac4:	8c 2f       	mov	r24, r28
     ac6:	cf 91       	pop	r28
     ac8:	08 95       	ret

00000aca <CAN_module_write>:
     aca:	cf 93       	push	r28
     acc:	df 93       	push	r29
     ace:	d8 2f       	mov	r29, r24
     ad0:	c6 2f       	mov	r28, r22
     ad2:	0e 94 4e 05 	call	0xa9c	; 0xa9c <CAN_module_activate_cs>
     ad6:	82 e0       	ldi	r24, 0x02	; 2
     ad8:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     adc:	8d 2f       	mov	r24, r29
     ade:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     ae2:	8c 2f       	mov	r24, r28
     ae4:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     ae8:	0e 94 50 05 	call	0xaa0	; 0xaa0 <CAN_module_deactivate_cs>
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	08 95       	ret

00000af2 <CAN_module_reset>:
     af2:	0e 94 4e 05 	call	0xa9c	; 0xa9c <CAN_module_activate_cs>
     af6:	80 ec       	ldi	r24, 0xC0	; 192
     af8:	0e 94 cd 0b 	call	0x179a	; 0x179a <SPI_Transmit>
     afc:	0e 94 50 05 	call	0xaa0	; 0xaa0 <CAN_module_deactivate_cs>
     b00:	83 ec       	ldi	r24, 0xC3	; 195
     b02:	99 e0       	ldi	r25, 0x09	; 9
     b04:	01 97       	sbiw	r24, 0x01	; 1
     b06:	f1 f7       	brne	.-4      	; 0xb04 <CAN_module_reset+0x12>
     b08:	00 c0       	rjmp	.+0      	; 0xb0a <CAN_module_reset+0x18>
     b0a:	00 00       	nop
     b0c:	08 95       	ret

00000b0e <CAN_module_init>:
	
}

void CAN_module_init(){
     b0e:	cf 93       	push	r28
	uint8_t val;
	SPI_Init();
     b10:	0e 94 c5 0b 	call	0x178a	; 0x178a <SPI_Init>
	
	CAN_module_reset();
     b14:	0e 94 79 05 	call	0xaf2	; 0xaf2 <CAN_module_reset>
	
	val = CAN_module_read(MCP_CANSTAT);
     b18:	8e e0       	ldi	r24, 0x0E	; 14
     b1a:	0e 94 53 05 	call	0xaa6	; 0xaa6 <CAN_module_read>
	uint8_t mode_bits = (val & MODE_MASK);
     b1e:	80 7e       	andi	r24, 0xE0	; 224
	if(mode_bits != MODE_CONFIG){
     b20:	80 38       	cpi	r24, 0x80	; 128
     b22:	61 f0       	breq	.+24     	; 0xb3c <CAN_module_init+0x2e>
	printf("MCP2515 is NOT in Configuration mode after reset! Its config bits are %x\n\r", mode_bits);
     b24:	1f 92       	push	r1
     b26:	8f 93       	push	r24
     b28:	86 e7       	ldi	r24, 0x76	; 118
     b2a:	91 e0       	ldi	r25, 0x01	; 1
     b2c:	9f 93       	push	r25
     b2e:	8f 93       	push	r24
     b30:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
     b34:	0f 90       	pop	r0
     b36:	0f 90       	pop	r0
     b38:	0f 90       	pop	r0
     b3a:	0f 90       	pop	r0
	//return(1);
	}
	
	CAN_module_write(MCP_CANCTRL, MODE_LOOPBACK);
     b3c:	60 e4       	ldi	r22, 0x40	; 64
     b3e:	8f e0       	ldi	r24, 0x0F	; 15
     b40:	0e 94 65 05 	call	0xaca	; 0xaca <CAN_module_write>
	
	val = CAN_module_read(MCP_CANSTAT);
     b44:	8e e0       	ldi	r24, 0x0E	; 14
     b46:	0e 94 53 05 	call	0xaa6	; 0xaa6 <CAN_module_read>
     b4a:	c8 2f       	mov	r28, r24
	printf("%x\n\r", val);
     b4c:	1f 92       	push	r1
     b4e:	8f 93       	push	r24
     b50:	8c eb       	ldi	r24, 0xBC	; 188
     b52:	91 e0       	ldi	r25, 0x01	; 1
     b54:	9f 93       	push	r25
     b56:	8f 93       	push	r24
     b58:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	mode_bits = (val & MODE_MASK);
     b5c:	c0 7e       	andi	r28, 0xE0	; 224
	if(mode_bits != MODE_LOOPBACK){
     b5e:	0f 90       	pop	r0
     b60:	0f 90       	pop	r0
     b62:	0f 90       	pop	r0
     b64:	0f 90       	pop	r0
     b66:	c0 34       	cpi	r28, 0x40	; 64
     b68:	81 f0       	breq	.+32     	; 0xb8a <CAN_module_init+0x7c>
	
	printf("MCP2515 is NOT in correct mode after reset! Its config bits are %x\n\r", mode_bits);
     b6a:	1f 92       	push	r1
     b6c:	cf 93       	push	r28
     b6e:	81 ec       	ldi	r24, 0xC1	; 193
     b70:	91 e0       	ldi	r25, 0x01	; 1
     b72:	9f 93       	push	r25
     b74:	8f 93       	push	r24
     b76:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
	printf("\n!\n");
     b7a:	86 e0       	ldi	r24, 0x06	; 6
     b7c:	92 e0       	ldi	r25, 0x02	; 2
     b7e:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <puts>
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	0f 90       	pop	r0
     b88:	0f 90       	pop	r0
	//return(1);
	}
	
	
	//return(0);
     b8a:	cf 91       	pop	r28
     b8c:	08 95       	ret

00000b8e <main>:
#define BAUD 9600
#define MYBURR F_CPU/16/BAUD-1


int main(){
	MCUCR = (1<<SRE);
     b8e:	80 e8       	ldi	r24, 0x80	; 128
     b90:	85 bf       	out	0x35, r24	; 53
	uart_start(MYBURR);
     b92:	8f e1       	ldi	r24, 0x1F	; 31
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <uart_start>
	fdevopen(&uart_transmit, &uart_recieve);
     b9a:	66 ee       	ldi	r22, 0xE6	; 230
     b9c:	7b e0       	ldi	r23, 0x0B	; 11
     b9e:	80 ee       	ldi	r24, 0xE0	; 224
     ba0:	9b e0       	ldi	r25, 0x0B	; 11
     ba2:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <fdevopen>
	
	//Comment
	
	int counter=0;
	adc_init(counter);
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	0e 94 49 03 	call	0x692	; 0x692 <adc_init>
	OLED_init();
     bae:	0e 94 4a 06 	call	0xc94	; 0xc94 <OLED_init>
	OLED_reset();
     bb2:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
	//_delay_ms(1000);
	//}
	
	while (1)
	{
		CAN_module_init(MODE_LOOPBACK);
     bb6:	80 e4       	ldi	r24, 0x40	; 64
     bb8:	90 e0       	ldi	r25, 0x00	; 0
     bba:	0e 94 87 05 	call	0xb0e	; 0xb0e <CAN_module_init>
		
		printf("Joy Y: %d,\t", joyyPercent);
     bbe:	80 91 f3 02 	lds	r24, 0x02F3	; 0x8002f3 <joyyPercent>
     bc2:	90 91 f4 02 	lds	r25, 0x02F4	; 0x8002f4 <joyyPercent+0x1>
     bc6:	9f 93       	push	r25
     bc8:	8f 93       	push	r24
     bca:	89 e0       	ldi	r24, 0x09	; 9
     bcc:	92 e0       	ldi	r25, 0x02	; 2
     bce:	9f 93       	push	r25
     bd0:	8f 93       	push	r24
     bd2:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Joy X: %d,\t", joyxPercent);
     bd6:	80 91 eb 02 	lds	r24, 0x02EB	; 0x8002eb <joyxPercent>
     bda:	90 91 ec 02 	lds	r25, 0x02EC	; 0x8002ec <joyxPercent+0x1>
     bde:	9f 93       	push	r25
     be0:	8f 93       	push	r24
     be2:	85 e1       	ldi	r24, 0x15	; 21
     be4:	92 e0       	ldi	r25, 0x02	; 2
     be6:	9f 93       	push	r25
     be8:	8f 93       	push	r24
     bea:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Left Slider: %d,  \t", sliderLeft);
     bee:	80 91 f1 02 	lds	r24, 0x02F1	; 0x8002f1 <sliderLeft>
     bf2:	90 91 f2 02 	lds	r25, 0x02F2	; 0x8002f2 <sliderLeft+0x1>
     bf6:	9f 93       	push	r25
     bf8:	8f 93       	push	r24
     bfa:	81 e2       	ldi	r24, 0x21	; 33
     bfc:	92 e0       	ldi	r25, 0x02	; 2
     bfe:	9f 93       	push	r25
     c00:	8f 93       	push	r24
     c02:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Right Slider: %d,\t", sliderRight);
     c06:	80 91 e3 02 	lds	r24, 0x02E3	; 0x8002e3 <sliderRight>
     c0a:	90 91 e4 02 	lds	r25, 0x02E4	; 0x8002e4 <sliderRight+0x1>
     c0e:	9f 93       	push	r25
     c10:	8f 93       	push	r24
     c12:	85 e3       	ldi	r24, 0x35	; 53
     c14:	92 e0       	ldi	r25, 0x02	; 2
     c16:	9f 93       	push	r25
     c18:	8f 93       	push	r24
     c1a:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Left Button: %d, \t", button2State);
     c1e:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <button2State>
     c22:	90 91 f8 02 	lds	r25, 0x02F8	; 0x8002f8 <button2State+0x1>
     c26:	9f 93       	push	r25
     c28:	8f 93       	push	r24
     c2a:	88 e4       	ldi	r24, 0x48	; 72
     c2c:	92 e0       	ldi	r25, 0x02	; 2
     c2e:	9f 93       	push	r25
     c30:	8f 93       	push	r24
     c32:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Right button: %d,\t", button1State);
     c36:	80 91 0f 03 	lds	r24, 0x030F	; 0x80030f <button1State>
     c3a:	90 91 10 03 	lds	r25, 0x0310	; 0x800310 <button1State+0x1>
     c3e:	9f 93       	push	r25
     c40:	8f 93       	push	r24
     c42:	8b e5       	ldi	r24, 0x5B	; 91
     c44:	92 e0       	ldi	r25, 0x02	; 2
     c46:	9f 93       	push	r25
     c48:	8f 93       	push	r24
     c4a:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		printf("Joy button: %d\n\r", button3State);
     c4e:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
     c52:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
     c56:	9f 93       	push	r25
     c58:	8f 93       	push	r24
     c5a:	8e e6       	ldi	r24, 0x6E	; 110
     c5c:	92 e0       	ldi	r25, 0x02	; 2
     c5e:	9f 93       	push	r25
     c60:	8f 93       	push	r24
     c62:	0e 94 74 0e 	call	0x1ce8	; 0x1ce8 <printf>
		
		//oled_printf("");
		
		main_menu();
     c66:	0e 94 88 0a 	call	0x1510	; 0x1510 <main_menu>
     c6a:	8d b7       	in	r24, 0x3d	; 61
     c6c:	9e b7       	in	r25, 0x3e	; 62
     c6e:	4c 96       	adiw	r24, 0x1c	; 28
     c70:	0f b6       	in	r0, 0x3f	; 63
     c72:	f8 94       	cli
     c74:	9e bf       	out	0x3e, r25	; 62
     c76:	0f be       	out	0x3f, r0	; 63
     c78:	8d bf       	out	0x3d, r24	; 61
     c7a:	9d cf       	rjmp	.-198    	; 0xbb6 <main+0x28>

00000c7c <OLED_Write_Command>:
     c7c:	e0 91 1a 01 	lds	r30, 0x011A	; 0x80011a <oled_command>
     c80:	f0 91 1b 01 	lds	r31, 0x011B	; 0x80011b <oled_command+0x1>
     c84:	80 83       	st	Z, r24
     c86:	08 95       	ret

00000c88 <OLED_Write_Data>:
     c88:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <oled_data>
     c8c:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <oled_data+0x1>
     c90:	80 83       	st	Z, r24
     c92:	08 95       	ret

00000c94 <OLED_init>:
     c94:	8e ea       	ldi	r24, 0xAE	; 174
     c96:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     c9a:	81 ea       	ldi	r24, 0xA1	; 161
     c9c:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     ca0:	8a ed       	ldi	r24, 0xDA	; 218
     ca2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     ca6:	82 e1       	ldi	r24, 0x12	; 18
     ca8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cac:	88 ec       	ldi	r24, 0xC8	; 200
     cae:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cb2:	88 ea       	ldi	r24, 0xA8	; 168
     cb4:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cb8:	8f e3       	ldi	r24, 0x3F	; 63
     cba:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cbe:	85 ed       	ldi	r24, 0xD5	; 213
     cc0:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cc4:	80 e8       	ldi	r24, 0x80	; 128
     cc6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cca:	81 e8       	ldi	r24, 0x81	; 129
     ccc:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cd0:	80 e5       	ldi	r24, 0x50	; 80
     cd2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cd6:	89 ed       	ldi	r24, 0xD9	; 217
     cd8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cdc:	81 e2       	ldi	r24, 0x21	; 33
     cde:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     ce2:	80 e2       	ldi	r24, 0x20	; 32
     ce4:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     ce8:	82 e0       	ldi	r24, 0x02	; 2
     cea:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cee:	8b ed       	ldi	r24, 0xDB	; 219
     cf0:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cf4:	80 e3       	ldi	r24, 0x30	; 48
     cf6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     cfa:	8d ea       	ldi	r24, 0xAD	; 173
     cfc:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     d00:	80 e0       	ldi	r24, 0x00	; 0
     d02:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     d06:	84 ea       	ldi	r24, 0xA4	; 164
     d08:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     d0c:	86 ea       	ldi	r24, 0xA6	; 166
     d0e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     d12:	8f ea       	ldi	r24, 0xAF	; 175
     d14:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     d18:	08 95       	ret

00000d1a <oled_is_out_of_bounds>:
     d1a:	80 91 1b 03 	lds	r24, 0x031B	; 0x80031b <pos+0x1>
     d1e:	88 23       	and	r24, r24
     d20:	5c f4       	brge	.+22     	; 0xd38 <oled_is_out_of_bounds+0x1e>
     d22:	ea e1       	ldi	r30, 0x1A	; 26
     d24:	f3 e0       	ldi	r31, 0x03	; 3
     d26:	80 58       	subi	r24, 0x80	; 128
     d28:	81 83       	std	Z+1, r24	; 0x01
     d2a:	80 81       	ld	r24, Z
     d2c:	8f 5f       	subi	r24, 0xFF	; 255
     d2e:	80 83       	st	Z, r24
     d30:	88 30       	cpi	r24, 0x08	; 8
     d32:	10 f0       	brcs	.+4      	; 0xd38 <oled_is_out_of_bounds+0x1e>
     d34:	10 92 1a 03 	sts	0x031A, r1	; 0x80031a <pos>
     d38:	08 95       	ret

00000d3a <oled_put_char>:
     d3a:	1f 93       	push	r17
     d3c:	cf 93       	push	r28
     d3e:	df 93       	push	r29
     d40:	10 ee       	ldi	r17, 0xE0	; 224
     d42:	18 0f       	add	r17, r24
     d44:	c0 e0       	ldi	r28, 0x00	; 0
     d46:	d0 e0       	ldi	r29, 0x00	; 0
     d48:	1c c0       	rjmp	.+56     	; 0xd82 <oled_put_char+0x48>
     d4a:	e1 2f       	mov	r30, r17
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	ee 0f       	add	r30, r30
     d50:	ff 1f       	adc	r31, r31
     d52:	ee 0f       	add	r30, r30
     d54:	ff 1f       	adc	r31, r31
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	ec 0f       	add	r30, r28
     d5c:	fd 1f       	adc	r31, r29
     d5e:	e8 55       	subi	r30, 0x58	; 88
     d60:	ff 4f       	sbci	r31, 0xFF	; 255
     d62:	85 91       	lpm	r24, Z+
     d64:	94 91       	lpm	r25, Z
     d66:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     d6a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     d6e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     d72:	ea e1       	ldi	r30, 0x1A	; 26
     d74:	f3 e0       	ldi	r31, 0x03	; 3
     d76:	91 81       	ldd	r25, Z+1	; 0x01
     d78:	89 0f       	add	r24, r25
     d7a:	81 83       	std	Z+1, r24	; 0x01
     d7c:	0e 94 8d 06 	call	0xd1a	; 0xd1a <oled_is_out_of_bounds>
     d80:	21 96       	adiw	r28, 0x01	; 1
     d82:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     d86:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     d8a:	c8 17       	cp	r28, r24
     d8c:	d9 07       	cpc	r29, r25
     d8e:	ec f2       	brlt	.-70     	; 0xd4a <oled_put_char+0x10>
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	08 95       	ret

00000d9c <set_addressingMode>:
     d9c:	cf 93       	push	r28
     d9e:	c8 2f       	mov	r28, r24
     da0:	80 e2       	ldi	r24, 0x20	; 32
     da2:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     da6:	8c 2f       	mov	r24, r28
     da8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     dac:	cf 91       	pop	r28
     dae:	08 95       	ret

00000db0 <OLED_goto_line>:
     db0:	cf 93       	push	r28
     db2:	c8 2f       	mov	r28, r24
     db4:	88 30       	cpi	r24, 0x08	; 8
     db6:	78 f4       	brcc	.+30     	; 0xdd6 <OLED_goto_line+0x26>
     db8:	80 93 1a 03 	sts	0x031A, r24	; 0x80031a <pos>
     dbc:	82 e0       	ldi	r24, 0x02	; 2
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <set_addressingMode>
     dc4:	80 eb       	ldi	r24, 0xB0	; 176
     dc6:	8c 0f       	add	r24, r28
     dc8:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     dcc:	80 e0       	ldi	r24, 0x00	; 0
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 ce 06 	call	0xd9c	; 0xd9c <set_addressingMode>
     dd4:	06 c0       	rjmp	.+12     	; 0xde2 <OLED_goto_line+0x32>
     dd6:	8f e7       	ldi	r24, 0x7F	; 127
     dd8:	92 e0       	ldi	r25, 0x02	; 2
     dda:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <puts>
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	cf 91       	pop	r28
     de4:	08 95       	ret

00000de6 <OLED_goto_column>:
     de6:	cf 93       	push	r28
     de8:	df 93       	push	r29
     dea:	c8 2f       	mov	r28, r24
     dec:	88 23       	and	r24, r24
     dee:	b4 f0       	brlt	.+44     	; 0xe1c <OLED_goto_column+0x36>
     df0:	80 93 1b 03 	sts	0x031B, r24	; 0x80031b <pos+0x1>
     df4:	82 e0       	ldi	r24, 0x02	; 2
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	0e 94 ce 06 	call	0xd9c	; 0xd9c <set_addressingMode>
     dfc:	dc 2f       	mov	r29, r28
     dfe:	d2 95       	swap	r29
     e00:	df 70       	andi	r29, 0x0F	; 15
     e02:	8c 2f       	mov	r24, r28
     e04:	8f 70       	andi	r24, 0x0F	; 15
     e06:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     e0a:	80 e1       	ldi	r24, 0x10	; 16
     e0c:	8d 0f       	add	r24, r29
     e0e:	0e 94 3e 06 	call	0xc7c	; 0xc7c <OLED_Write_Command>
     e12:	80 e0       	ldi	r24, 0x00	; 0
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	0e 94 ce 06 	call	0xd9c	; 0xd9c <set_addressingMode>
     e1a:	06 c0       	rjmp	.+12     	; 0xe28 <OLED_goto_column+0x42>
     e1c:	82 e9       	ldi	r24, 0x92	; 146
     e1e:	92 e0       	ldi	r25, 0x02	; 2
     e20:	0e 94 8a 0e 	call	0x1d14	; 0x1d14 <puts>
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	df 91       	pop	r29
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <OLED_goto_pos>:
     e2e:	cf 93       	push	r28
     e30:	c6 2f       	mov	r28, r22
     e32:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_goto_line>
     e36:	8c 2f       	mov	r24, r28
     e38:	0e 94 f3 06 	call	0xde6	; 0xde6 <OLED_goto_column>
     e3c:	cf 91       	pop	r28
     e3e:	08 95       	ret

00000e40 <OLED_home>:
     e40:	60 e0       	ldi	r22, 0x00	; 0
     e42:	70 e0       	ldi	r23, 0x00	; 0
     e44:	80 e0       	ldi	r24, 0x00	; 0
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
     e4c:	08 95       	ret

00000e4e <OLED_clear_line>:
     e4e:	cf 93       	push	r28
     e50:	df 93       	push	r29
     e52:	d8 2f       	mov	r29, r24
     e54:	60 e0       	ldi	r22, 0x00	; 0
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
     e5e:	c0 e0       	ldi	r28, 0x00	; 0
     e60:	04 c0       	rjmp	.+8      	; 0xe6a <OLED_clear_line+0x1c>
     e62:	80 e0       	ldi	r24, 0x00	; 0
     e64:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     e68:	cf 5f       	subi	r28, 0xFF	; 255
     e6a:	cc 23       	and	r28, r28
     e6c:	d4 f7       	brge	.-12     	; 0xe62 <OLED_clear_line+0x14>
     e6e:	8d 2f       	mov	r24, r29
     e70:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <OLED_goto_line>
     e74:	df 91       	pop	r29
     e76:	cf 91       	pop	r28
     e78:	08 95       	ret

00000e7a <OLED_reset>:
     e7a:	cf 93       	push	r28
     e7c:	c0 e0       	ldi	r28, 0x00	; 0
     e7e:	05 c0       	rjmp	.+10     	; 0xe8a <OLED_reset+0x10>
     e80:	8c 2f       	mov	r24, r28
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 27 07 	call	0xe4e	; 0xe4e <OLED_clear_line>
     e88:	cf 5f       	subi	r28, 0xFF	; 255
     e8a:	c8 30       	cpi	r28, 0x08	; 8
     e8c:	c8 f3       	brcs	.-14     	; 0xe80 <OLED_reset+0x6>
     e8e:	0e 94 20 07 	call	0xe40	; 0xe40 <OLED_home>
     e92:	cf 91       	pop	r28
     e94:	08 95       	ret

00000e96 <OLED_clear_arrow>:
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	d0 e0       	ldi	r29, 0x00	; 0
     e9c:	0f c0       	rjmp	.+30     	; 0xebc <OLED_clear_arrow+0x26>
     e9e:	60 e0       	ldi	r22, 0x00	; 0
     ea0:	70 e0       	ldi	r23, 0x00	; 0
     ea2:	8d 2f       	mov	r24, r29
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
     eaa:	c0 e0       	ldi	r28, 0x00	; 0
     eac:	04 c0       	rjmp	.+8      	; 0xeb6 <OLED_clear_arrow+0x20>
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     eb4:	cf 5f       	subi	r28, 0xFF	; 255
     eb6:	c8 30       	cpi	r28, 0x08	; 8
     eb8:	d0 f3       	brcs	.-12     	; 0xeae <OLED_clear_arrow+0x18>
     eba:	df 5f       	subi	r29, 0xFF	; 255
     ebc:	d8 30       	cpi	r29, 0x08	; 8
     ebe:	78 f3       	brcs	.-34     	; 0xe9e <OLED_clear_arrow+0x8>
     ec0:	df 91       	pop	r29
     ec2:	cf 91       	pop	r28
     ec4:	08 95       	ret

00000ec6 <OLED_print_arrow>:
     ec6:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
     eca:	88 e1       	ldi	r24, 0x18	; 24
     ecc:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     ed0:	88 e1       	ldi	r24, 0x18	; 24
     ed2:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     ed6:	8e e7       	ldi	r24, 0x7E	; 126
     ed8:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     edc:	8c e3       	ldi	r24, 0x3C	; 60
     ede:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     ee2:	88 e1       	ldi	r24, 0x18	; 24
     ee4:	0e 94 44 06 	call	0xc88	; 0xc88 <OLED_Write_Data>
     ee8:	08 95       	ret

00000eea <oled_printf>:
     eea:	cf 93       	push	r28
     eec:	df 93       	push	r29
     eee:	cd b7       	in	r28, 0x3d	; 61
     ef0:	de b7       	in	r29, 0x3e	; 62
     ef2:	ae 01       	movw	r20, r28
     ef4:	4b 5f       	subi	r20, 0xFB	; 251
     ef6:	5f 4f       	sbci	r21, 0xFF	; 255
     ef8:	fa 01       	movw	r30, r20
     efa:	61 91       	ld	r22, Z+
     efc:	71 91       	ld	r23, Z+
     efe:	af 01       	movw	r20, r30
     f00:	88 e0       	ldi	r24, 0x08	; 8
     f02:	91 e0       	ldi	r25, 0x01	; 1
     f04:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <vfprintf>
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	08 95       	ret

00000f0e <oled_align_centre>:
     f0e:	fc 01       	movw	r30, r24
     f10:	01 90       	ld	r0, Z+
     f12:	00 20       	and	r0, r0
     f14:	e9 f7       	brne	.-6      	; 0xf10 <oled_align_centre+0x2>
     f16:	31 97       	sbiw	r30, 0x01	; 1
     f18:	e8 1b       	sub	r30, r24
     f1a:	f9 0b       	sbc	r31, r25
     f1c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <fontSize>
     f20:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <fontSize+0x1>
     f24:	8e 9f       	mul	r24, r30
     f26:	90 01       	movw	r18, r0
     f28:	8f 9f       	mul	r24, r31
     f2a:	30 0d       	add	r19, r0
     f2c:	9e 9f       	mul	r25, r30
     f2e:	30 0d       	add	r19, r0
     f30:	11 24       	eor	r1, r1
     f32:	36 95       	lsr	r19
     f34:	27 95       	ror	r18
     f36:	80 e4       	ldi	r24, 0x40	; 64
     f38:	82 1b       	sub	r24, r18
     f3a:	0e 94 f3 06 	call	0xde6	; 0xde6 <OLED_goto_column>
     f3e:	08 95       	ret

00000f40 <play_menu>:
// Each submenu is its own function that loops and functions similary like the main menu
void play_menu(void)
{
	while(1)
	{
		if (button3State == 0)
     f40:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
     f44:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
     f48:	89 2b       	or	r24, r25
     f4a:	21 f4       	brne	.+8      	; 0xf54 <play_menu+0x14>
		{
			button_flag = 0;
     f4c:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <button_flag+0x1>
     f50:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <button_flag>
		}
		
		OLED_home();
     f54:	0e 94 20 07 	call	0xe40	; 0xe40 <OLED_home>
		oled_align_centre("Play");
     f58:	87 ea       	ldi	r24, 0xA7	; 167
     f5a:	92 e0       	ldi	r25, 0x02	; 2
     f5c:	0e 94 87 07 	call	0xf0e	; 0xf0e <oled_align_centre>
		oled_printf("Play");
     f60:	87 ea       	ldi	r24, 0xA7	; 167
     f62:	92 e0       	ldi	r25, 0x02	; 2
     f64:	9f 93       	push	r25
     f66:	8f 93       	push	r24
     f68:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
		OLED_goto_pos(7, 9);
     f6c:	69 e0       	ldi	r22, 0x09	; 9
     f6e:	87 e0       	ldi	r24, 0x07	; 7
     f70:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
		oled_printf("Quit");
     f74:	8c ea       	ldi	r24, 0xAC	; 172
     f76:	92 e0       	ldi	r25, 0x02	; 2
     f78:	9f 93       	push	r25
     f7a:	8f 93       	push	r24
     f7c:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
     f80:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
     f84:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
     f88:	0f 90       	pop	r0
     f8a:	0f 90       	pop	r0
     f8c:	0f 90       	pop	r0
     f8e:	0f 90       	pop	r0
     f90:	88 3c       	cpi	r24, 0xC8	; 200
     f92:	91 05       	cpc	r25, r1
     f94:	dc f4       	brge	.+54     	; 0xfcc <play_menu+0x8c>
     f96:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
     f9a:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
     f9e:	01 97       	sbiw	r24, 0x01	; 1
     fa0:	31 f0       	breq	.+12     	; 0xfae <play_menu+0x6e>
     fa2:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
     fa6:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
     faa:	01 97       	sbiw	r24, 0x01	; 1
     fac:	79 f4       	brne	.+30     	; 0xfcc <play_menu+0x8c>
		{
			if (joyy > 100)
     fae:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
     fb2:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
     fb6:	85 36       	cpi	r24, 0x65	; 101
     fb8:	91 05       	cpc	r25, r1
     fba:	44 f0       	brlt	.+16     	; 0xfcc <play_menu+0x8c>
			{
				flag_down = 0;
     fbc:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <flag_down+0x1>
     fc0:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_down>
				flag_up = 0;
     fc4:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <flag_up+0x1>
     fc8:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
     fcc:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
     fd0:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
     fd4:	88 3c       	cpi	r24, 0xC8	; 200
     fd6:	91 05       	cpc	r25, r1
     fd8:	1c f1       	brlt	.+70     	; 0x1020 <play_menu+0xe0>
     fda:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
     fde:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
     fe2:	89 2b       	or	r24, r25
     fe4:	e9 f4       	brne	.+58     	; 0x1020 <play_menu+0xe0>
		{
			arrow_pos--;
     fe6:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
     fea:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
     fee:	01 97       	sbiw	r24, 0x01	; 1
     ff0:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
     ff4:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_up = 1;
     ff8:	81 e0       	ldi	r24, 0x01	; 1
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <flag_up+0x1>
    1000:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <flag_up>
			OLED_clear_arrow();
    1004:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 0)
    1008:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    100c:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1010:	89 2b       	or	r24, r25
    1012:	31 f4       	brne	.+12     	; 0x1020 <play_menu+0xe0>
			{
				arrow_pos = 7;
    1014:	87 e0       	ldi	r24, 0x07	; 7
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    101c:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1020:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    1024:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    1028:	85 36       	cpi	r24, 0x65	; 101
    102a:	91 05       	cpc	r25, r1
    102c:	1c f5       	brge	.+70     	; 0x1074 <play_menu+0x134>
    102e:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    1032:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    1036:	89 2b       	or	r24, r25
    1038:	e9 f4       	brne	.+58     	; 0x1074 <play_menu+0x134>
		{
			arrow_pos++;
    103a:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    103e:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1042:	01 96       	adiw	r24, 0x01	; 1
    1044:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1048:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_down = 1;
    104c:	81 e0       	ldi	r24, 0x01	; 1
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <flag_down+0x1>
    1054:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <flag_down>
			OLED_clear_arrow();
    1058:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 8)
    105c:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1060:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1064:	08 97       	sbiw	r24, 0x08	; 8
    1066:	31 f4       	brne	.+12     	; 0x1074 <play_menu+0x134>
			{
				arrow_pos = 1;
    1068:	81 e0       	ldi	r24, 0x01	; 1
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1070:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		switch (arrow_pos)
    1074:	e0 91 1c 03 	lds	r30, 0x031C	; 0x80031c <arrow_pos>
    1078:	f0 91 1d 03 	lds	r31, 0x031D	; 0x80031d <arrow_pos+0x1>
    107c:	31 97       	sbiw	r30, 0x01	; 1
    107e:	e7 30       	cpi	r30, 0x07	; 7
    1080:	f1 05       	cpc	r31, r1
    1082:	a0 f5       	brcc	.+104    	; 0x10ec <play_menu+0x1ac>
    1084:	e8 5c       	subi	r30, 0xC8	; 200
    1086:	ff 4f       	sbci	r31, 0xFF	; 255
    1088:	0c 94 0f 0e 	jmp	0x1c1e	; 0x1c1e <__tablejump2__>
		{
		case 1:
			arrow = 1;
    108c:	81 e0       	ldi	r24, 0x01	; 1
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1094:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1098:	29 c0       	rjmp	.+82     	; 0x10ec <play_menu+0x1ac>
		case 2:
			arrow = 2;
    109a:	82 e0       	ldi	r24, 0x02	; 2
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10a2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10a6:	22 c0       	rjmp	.+68     	; 0x10ec <play_menu+0x1ac>
		case 3:
			arrow = 3;
    10a8:	83 e0       	ldi	r24, 0x03	; 3
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10b0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10b4:	1b c0       	rjmp	.+54     	; 0x10ec <play_menu+0x1ac>
		case 4:
			arrow = 4;
    10b6:	84 e0       	ldi	r24, 0x04	; 4
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10be:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10c2:	14 c0       	rjmp	.+40     	; 0x10ec <play_menu+0x1ac>
		case 5:
			arrow = 5;
    10c4:	85 e0       	ldi	r24, 0x05	; 5
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10cc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10d0:	0d c0       	rjmp	.+26     	; 0x10ec <play_menu+0x1ac>
		case 6:
			arrow = 6;
    10d2:	86 e0       	ldi	r24, 0x06	; 6
    10d4:	90 e0       	ldi	r25, 0x00	; 0
    10d6:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10da:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    10de:	06 c0       	rjmp	.+12     	; 0x10ec <play_menu+0x1ac>
		case 7:
			arrow = 7;
    10e0:	87 e0       	ldi	r24, 0x07	; 7
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    10e8:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    10ec:	60 e0       	ldi	r22, 0x00	; 0
    10ee:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    10f2:	0e 94 63 07 	call	0xec6	; 0xec6 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    10f6:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    10fa:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	09 f0       	breq	.+2      	; 0x1104 <play_menu+0x1c4>
    1102:	1e cf       	rjmp	.-452    	; 0xf40 <play_menu>
    1104:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    1108:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    110c:	07 97       	sbiw	r24, 0x07	; 7
    110e:	09 f0       	breq	.+2      	; 0x1112 <play_menu+0x1d2>
    1110:	17 cf       	rjmp	.-466    	; 0xf40 <play_menu>
		{
			arrow = 1;
    1112:	81 e0       	ldi	r24, 0x01	; 1
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    111a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    111e:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    1122:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
    1126:	08 95       	ret

00001128 <hs_menu>:
}

void hs_menu(void)
{
	arrow_pos = 1;
    1128:	81 e0       	ldi	r24, 0x01	; 1
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1130:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	if (button3State == 0)
    1134:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    1138:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    113c:	89 2b       	or	r24, r25
    113e:	21 f4       	brne	.+8      	; 0x1148 <hs_menu+0x20>
	{
		button_flag = 0;
    1140:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <button_flag+0x1>
    1144:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <button_flag>
	}
	while(1)
	{
		OLED_home();
    1148:	0e 94 20 07 	call	0xe40	; 0xe40 <OLED_home>
		oled_align_centre("High scores");
    114c:	81 eb       	ldi	r24, 0xB1	; 177
    114e:	92 e0       	ldi	r25, 0x02	; 2
    1150:	0e 94 87 07 	call	0xf0e	; 0xf0e <oled_align_centre>
		oled_printf("High scores");
    1154:	81 eb       	ldi	r24, 0xB1	; 177
    1156:	92 e0       	ldi	r25, 0x02	; 2
    1158:	9f 93       	push	r25
    115a:	8f 93       	push	r24
    115c:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
		OLED_goto_pos(7, 9);
    1160:	69 e0       	ldi	r22, 0x09	; 9
    1162:	87 e0       	ldi	r24, 0x07	; 7
    1164:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
		oled_printf("Quit");
    1168:	8c ea       	ldi	r24, 0xAC	; 172
    116a:	92 e0       	ldi	r25, 0x02	; 2
    116c:	9f 93       	push	r25
    116e:	8f 93       	push	r24
    1170:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1174:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    1178:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    117c:	0f 90       	pop	r0
    117e:	0f 90       	pop	r0
    1180:	0f 90       	pop	r0
    1182:	0f 90       	pop	r0
    1184:	88 3c       	cpi	r24, 0xC8	; 200
    1186:	91 05       	cpc	r25, r1
    1188:	dc f4       	brge	.+54     	; 0x11c0 <hs_menu+0x98>
    118a:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    118e:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    1192:	01 97       	sbiw	r24, 0x01	; 1
    1194:	31 f0       	breq	.+12     	; 0x11a2 <hs_menu+0x7a>
    1196:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    119a:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    119e:	01 97       	sbiw	r24, 0x01	; 1
    11a0:	79 f4       	brne	.+30     	; 0x11c0 <hs_menu+0x98>
		{
			if (joyy > 100)
    11a2:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    11a6:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    11aa:	85 36       	cpi	r24, 0x65	; 101
    11ac:	91 05       	cpc	r25, r1
    11ae:	44 f0       	brlt	.+16     	; 0x11c0 <hs_menu+0x98>
			{
				flag_down = 0;
    11b0:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <flag_down+0x1>
    11b4:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_down>
				flag_up = 0;
    11b8:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <flag_up+0x1>
    11bc:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    11c0:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    11c4:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    11c8:	88 3c       	cpi	r24, 0xC8	; 200
    11ca:	91 05       	cpc	r25, r1
    11cc:	1c f1       	brlt	.+70     	; 0x1214 <hs_menu+0xec>
    11ce:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    11d2:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    11d6:	89 2b       	or	r24, r25
    11d8:	e9 f4       	brne	.+58     	; 0x1214 <hs_menu+0xec>
		{
			arrow_pos--;
    11da:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    11de:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    11e2:	01 97       	sbiw	r24, 0x01	; 1
    11e4:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    11e8:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_up = 1;
    11ec:	81 e0       	ldi	r24, 0x01	; 1
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <flag_up+0x1>
    11f4:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <flag_up>
			OLED_clear_arrow();
    11f8:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 0)
    11fc:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1200:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1204:	89 2b       	or	r24, r25
    1206:	31 f4       	brne	.+12     	; 0x1214 <hs_menu+0xec>
			{
				arrow_pos = 7;
    1208:	87 e0       	ldi	r24, 0x07	; 7
    120a:	90 e0       	ldi	r25, 0x00	; 0
    120c:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1210:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1214:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    1218:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    121c:	85 36       	cpi	r24, 0x65	; 101
    121e:	91 05       	cpc	r25, r1
    1220:	1c f5       	brge	.+70     	; 0x1268 <hs_menu+0x140>
    1222:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    1226:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    122a:	89 2b       	or	r24, r25
    122c:	e9 f4       	brne	.+58     	; 0x1268 <hs_menu+0x140>
		{
			arrow_pos++;
    122e:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1232:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1236:	01 96       	adiw	r24, 0x01	; 1
    1238:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    123c:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_down = 1;
    1240:	81 e0       	ldi	r24, 0x01	; 1
    1242:	90 e0       	ldi	r25, 0x00	; 0
    1244:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <flag_down+0x1>
    1248:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <flag_down>
			OLED_clear_arrow();
    124c:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 8)
    1250:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1254:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1258:	08 97       	sbiw	r24, 0x08	; 8
    125a:	31 f4       	brne	.+12     	; 0x1268 <hs_menu+0x140>
			{
				arrow_pos = 1;
    125c:	81 e0       	ldi	r24, 0x01	; 1
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1264:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		switch (arrow_pos)
    1268:	e0 91 1c 03 	lds	r30, 0x031C	; 0x80031c <arrow_pos>
    126c:	f0 91 1d 03 	lds	r31, 0x031D	; 0x80031d <arrow_pos+0x1>
    1270:	31 97       	sbiw	r30, 0x01	; 1
    1272:	e7 30       	cpi	r30, 0x07	; 7
    1274:	f1 05       	cpc	r31, r1
    1276:	a0 f5       	brcc	.+104    	; 0x12e0 <hs_menu+0x1b8>
    1278:	e1 5c       	subi	r30, 0xC1	; 193
    127a:	ff 4f       	sbci	r31, 0xFF	; 255
    127c:	0c 94 0f 0e 	jmp	0x1c1e	; 0x1c1e <__tablejump2__>
		{
			case 1:
			arrow = 1;
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1288:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    128c:	29 c0       	rjmp	.+82     	; 0x12e0 <hs_menu+0x1b8>
			case 2:
			arrow = 2;
    128e:	82 e0       	ldi	r24, 0x02	; 2
    1290:	90 e0       	ldi	r25, 0x00	; 0
    1292:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1296:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    129a:	22 c0       	rjmp	.+68     	; 0x12e0 <hs_menu+0x1b8>
			case 3:
			arrow = 3;
    129c:	83 e0       	ldi	r24, 0x03	; 3
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12a4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    12a8:	1b c0       	rjmp	.+54     	; 0x12e0 <hs_menu+0x1b8>
			case 4:
			arrow = 4;
    12aa:	84 e0       	ldi	r24, 0x04	; 4
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12b2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    12b6:	14 c0       	rjmp	.+40     	; 0x12e0 <hs_menu+0x1b8>
			case 5:
			arrow = 5;
    12b8:	85 e0       	ldi	r24, 0x05	; 5
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12c0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <hs_menu+0x1b8>
			case 6:
			arrow = 6;
    12c6:	86 e0       	ldi	r24, 0x06	; 6
    12c8:	90 e0       	ldi	r25, 0x00	; 0
    12ca:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12ce:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    12d2:	06 c0       	rjmp	.+12     	; 0x12e0 <hs_menu+0x1b8>
			case 7:
			arrow = 7;
    12d4:	87 e0       	ldi	r24, 0x07	; 7
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    12dc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    12e0:	60 e0       	ldi	r22, 0x00	; 0
    12e2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    12e6:	0e 94 63 07 	call	0xec6	; 0xec6 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    12ea:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    12ee:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    12f2:	01 97       	sbiw	r24, 0x01	; 1
    12f4:	09 f0       	breq	.+2      	; 0x12f8 <hs_menu+0x1d0>
    12f6:	28 cf       	rjmp	.-432    	; 0x1148 <hs_menu+0x20>
    12f8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    12fc:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    1300:	07 97       	sbiw	r24, 0x07	; 7
    1302:	09 f0       	breq	.+2      	; 0x1306 <hs_menu+0x1de>
    1304:	21 cf       	rjmp	.-446    	; 0x1148 <hs_menu+0x20>
		{
			arrow = 1;
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    130e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    1312:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    1316:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
    131a:	08 95       	ret

0000131c <diff_menu>:
}

void diff_menu(void)
{
	arrow_pos = 1;
    131c:	81 e0       	ldi	r24, 0x01	; 1
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1324:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	if (button3State == 0)
    1328:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    132c:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    1330:	89 2b       	or	r24, r25
    1332:	21 f4       	brne	.+8      	; 0x133c <diff_menu+0x20>
	{
		button_flag = 0;
    1334:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <button_flag+0x1>
    1338:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <button_flag>
	}
	while(1)
	{
		OLED_home();
    133c:	0e 94 20 07 	call	0xe40	; 0xe40 <OLED_home>
		oled_align_centre("Difficulty");
    1340:	8d eb       	ldi	r24, 0xBD	; 189
    1342:	92 e0       	ldi	r25, 0x02	; 2
    1344:	0e 94 87 07 	call	0xf0e	; 0xf0e <oled_align_centre>
		oled_printf("Difficulty");
    1348:	8d eb       	ldi	r24, 0xBD	; 189
    134a:	92 e0       	ldi	r25, 0x02	; 2
    134c:	9f 93       	push	r25
    134e:	8f 93       	push	r24
    1350:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
		OLED_goto_pos(7, 9);
    1354:	69 e0       	ldi	r22, 0x09	; 9
    1356:	87 e0       	ldi	r24, 0x07	; 7
    1358:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
		oled_printf("Back");
    135c:	88 ec       	ldi	r24, 0xC8	; 200
    135e:	92 e0       	ldi	r25, 0x02	; 2
    1360:	9f 93       	push	r25
    1362:	8f 93       	push	r24
    1364:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1368:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    136c:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    1370:	0f 90       	pop	r0
    1372:	0f 90       	pop	r0
    1374:	0f 90       	pop	r0
    1376:	0f 90       	pop	r0
    1378:	88 3c       	cpi	r24, 0xC8	; 200
    137a:	91 05       	cpc	r25, r1
    137c:	dc f4       	brge	.+54     	; 0x13b4 <diff_menu+0x98>
    137e:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    1382:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    1386:	01 97       	sbiw	r24, 0x01	; 1
    1388:	31 f0       	breq	.+12     	; 0x1396 <diff_menu+0x7a>
    138a:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    138e:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    1392:	01 97       	sbiw	r24, 0x01	; 1
    1394:	79 f4       	brne	.+30     	; 0x13b4 <diff_menu+0x98>
		{
			if (joyy > 100)
    1396:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    139a:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    139e:	85 36       	cpi	r24, 0x65	; 101
    13a0:	91 05       	cpc	r25, r1
    13a2:	44 f0       	brlt	.+16     	; 0x13b4 <diff_menu+0x98>
			{
				flag_down = 0;
    13a4:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <flag_down+0x1>
    13a8:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_down>
				flag_up = 0;
    13ac:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <flag_up+0x1>
    13b0:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    13b4:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    13b8:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    13bc:	88 3c       	cpi	r24, 0xC8	; 200
    13be:	91 05       	cpc	r25, r1
    13c0:	1c f1       	brlt	.+70     	; 0x1408 <diff_menu+0xec>
    13c2:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    13c6:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    13ca:	89 2b       	or	r24, r25
    13cc:	e9 f4       	brne	.+58     	; 0x1408 <diff_menu+0xec>
		{
			arrow_pos--;
    13ce:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    13d2:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    13d6:	01 97       	sbiw	r24, 0x01	; 1
    13d8:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    13dc:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_up = 1;
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <flag_up+0x1>
    13e8:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <flag_up>
			OLED_clear_arrow();
    13ec:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 0)
    13f0:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    13f4:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    13f8:	89 2b       	or	r24, r25
    13fa:	31 f4       	brne	.+12     	; 0x1408 <diff_menu+0xec>
			{
				arrow_pos = 7;
    13fc:	87 e0       	ldi	r24, 0x07	; 7
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1404:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1408:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    140c:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    1410:	85 36       	cpi	r24, 0x65	; 101
    1412:	91 05       	cpc	r25, r1
    1414:	1c f5       	brge	.+70     	; 0x145c <diff_menu+0x140>
    1416:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    141a:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    141e:	89 2b       	or	r24, r25
    1420:	e9 f4       	brne	.+58     	; 0x145c <diff_menu+0x140>
		{
			arrow_pos++;
    1422:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1426:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    142a:	01 96       	adiw	r24, 0x01	; 1
    142c:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1430:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			flag_down = 1;
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <flag_down+0x1>
    143c:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <flag_down>
			OLED_clear_arrow();
    1440:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			if (arrow_pos == 8)
    1444:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1448:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    144c:	08 97       	sbiw	r24, 0x08	; 8
    144e:	31 f4       	brne	.+12     	; 0x145c <diff_menu+0x140>
			{
				arrow_pos = 1;
    1450:	81 e0       	ldi	r24, 0x01	; 1
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1458:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
			}
		}

		switch (arrow_pos)
    145c:	e0 91 1c 03 	lds	r30, 0x031C	; 0x80031c <arrow_pos>
    1460:	f0 91 1d 03 	lds	r31, 0x031D	; 0x80031d <arrow_pos+0x1>
    1464:	31 97       	sbiw	r30, 0x01	; 1
    1466:	e7 30       	cpi	r30, 0x07	; 7
    1468:	f1 05       	cpc	r31, r1
    146a:	a0 f5       	brcc	.+104    	; 0x14d4 <diff_menu+0x1b8>
    146c:	ea 5b       	subi	r30, 0xBA	; 186
    146e:	ff 4f       	sbci	r31, 0xFF	; 255
    1470:	0c 94 0f 0e 	jmp	0x1c1e	; 0x1c1e <__tablejump2__>
		{
			case 1:
			arrow = 1;
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	90 e0       	ldi	r25, 0x00	; 0
    1478:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    147c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    1480:	29 c0       	rjmp	.+82     	; 0x14d4 <diff_menu+0x1b8>
			case 2:
			arrow = 2;
    1482:	82 e0       	ldi	r24, 0x02	; 2
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    148a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    148e:	22 c0       	rjmp	.+68     	; 0x14d4 <diff_menu+0x1b8>
			case 3:
			arrow = 3;
    1490:	83 e0       	ldi	r24, 0x03	; 3
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1498:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    149c:	1b c0       	rjmp	.+54     	; 0x14d4 <diff_menu+0x1b8>
			case 4:
			arrow = 4;
    149e:	84 e0       	ldi	r24, 0x04	; 4
    14a0:	90 e0       	ldi	r25, 0x00	; 0
    14a2:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    14a6:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    14aa:	14 c0       	rjmp	.+40     	; 0x14d4 <diff_menu+0x1b8>
			case 5:
			arrow = 5;
    14ac:	85 e0       	ldi	r24, 0x05	; 5
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    14b4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    14b8:	0d c0       	rjmp	.+26     	; 0x14d4 <diff_menu+0x1b8>
			case 6:
			arrow = 6;
    14ba:	86 e0       	ldi	r24, 0x06	; 6
    14bc:	90 e0       	ldi	r25, 0x00	; 0
    14be:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    14c2:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
    14c6:	06 c0       	rjmp	.+12     	; 0x14d4 <diff_menu+0x1b8>
			case 7:
			arrow = 7;
    14c8:	87 e0       	ldi	r24, 0x07	; 7
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    14d0:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    14d4:	60 e0       	ldi	r22, 0x00	; 0
    14d6:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    14da:	0e 94 63 07 	call	0xec6	; 0xec6 <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    14de:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    14e2:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	09 f0       	breq	.+2      	; 0x14ec <diff_menu+0x1d0>
    14ea:	28 cf       	rjmp	.-432    	; 0x133c <diff_menu+0x20>
    14ec:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    14f0:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <arrow+0x1>
    14f4:	07 97       	sbiw	r24, 0x07	; 7
    14f6:	09 f0       	breq	.+2      	; 0x14fa <diff_menu+0x1de>
    14f8:	21 cf       	rjmp	.-446    	; 0x133c <diff_menu+0x20>
		{
			arrow = 1;
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1502:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
			OLED_reset();
    1506:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    150a:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
    150e:	08 95       	ret

00001510 <main_menu>:
int flag_down = 0;
int button_flag = 0;


void main_menu()
{
    1510:	cf 93       	push	r28
    1512:	df 93       	push	r29
    // Run right after bootup after a oled_reset() to clear screen
	OLED_home();
    1514:	0e 94 20 07 	call	0xe40	; 0xe40 <OLED_home>
    oled_align_centre("Main menu");
    1518:	8d ec       	ldi	r24, 0xCD	; 205
    151a:	92 e0       	ldi	r25, 0x02	; 2
    151c:	0e 94 87 07 	call	0xf0e	; 0xf0e <oled_align_centre>
    oled_printf("Main menu");
    1520:	8d ec       	ldi	r24, 0xCD	; 205
    1522:	92 e0       	ldi	r25, 0x02	; 2
    1524:	9f 93       	push	r25
    1526:	8f 93       	push	r24
    1528:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
    OLED_goto_pos(1, 9);
    152c:	69 e0       	ldi	r22, 0x09	; 9
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
    oled_printf("Play");
    1534:	87 ea       	ldi	r24, 0xA7	; 167
    1536:	92 e0       	ldi	r25, 0x02	; 2
    1538:	9f 93       	push	r25
    153a:	8f 93       	push	r24
    153c:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
    OLED_goto_pos(2, 9);
    1540:	69 e0       	ldi	r22, 0x09	; 9
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
    oled_printf("High scores");
    1548:	81 eb       	ldi	r24, 0xB1	; 177
    154a:	92 e0       	ldi	r25, 0x02	; 2
    154c:	9f 93       	push	r25
    154e:	8f 93       	push	r24
    1550:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
    OLED_goto_pos(3, 9);
    1554:	69 e0       	ldi	r22, 0x09	; 9
    1556:	83 e0       	ldi	r24, 0x03	; 3
    1558:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_pos>
    oled_printf("Difficulty");
    155c:	8d eb       	ldi	r24, 0xBD	; 189
    155e:	92 e0       	ldi	r25, 0x02	; 2
    1560:	9f 93       	push	r25
    1562:	8f 93       	push	r24
    1564:	0e 94 75 07 	call	0xeea	; 0xeea <oled_printf>
	
	if (button3State == 0)
    1568:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    156c:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    1570:	2d b7       	in	r18, 0x3d	; 61
    1572:	3e b7       	in	r19, 0x3e	; 62
    1574:	28 5f       	subi	r18, 0xF8	; 248
    1576:	3f 4f       	sbci	r19, 0xFF	; 255
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	f8 94       	cli
    157c:	3e bf       	out	0x3e, r19	; 62
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	2d bf       	out	0x3d, r18	; 61
    1582:	89 2b       	or	r24, r25
    1584:	21 f4       	brne	.+8      	; 0x158e <main_menu+0x7e>
	{
		button_flag = 0;
    1586:	10 92 de 02 	sts	0x02DE, r1	; 0x8002de <button_flag+0x1>
    158a:	10 92 dd 02 	sts	0x02DD, r1	; 0x8002dd <button_flag>
	}

    // Use the joystick to navigate the menus, the joystick needs to be above or below a certain treshold to update the arrow and also to only be activated once on every joystick move
    if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    158e:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    1592:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    1596:	88 3c       	cpi	r24, 0xC8	; 200
    1598:	91 05       	cpc	r25, r1
    159a:	dc f4       	brge	.+54     	; 0x15d2 <main_menu+0xc2>
    159c:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    15a0:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	31 f0       	breq	.+12     	; 0x15b4 <main_menu+0xa4>
    15a8:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    15ac:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    15b0:	01 97       	sbiw	r24, 0x01	; 1
    15b2:	79 f4       	brne	.+30     	; 0x15d2 <main_menu+0xc2>
    {
	    if (joyy > 100)
    15b4:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    15b8:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    15bc:	85 36       	cpi	r24, 0x65	; 101
    15be:	91 05       	cpc	r25, r1
    15c0:	44 f0       	brlt	.+16     	; 0x15d2 <main_menu+0xc2>
	    {
		    flag_down = 0;
    15c2:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <flag_down+0x1>
    15c6:	10 92 df 02 	sts	0x02DF, r1	; 0x8002df <flag_down>
		    flag_up = 0;
    15ca:	10 92 e2 02 	sts	0x02E2, r1	; 0x8002e2 <flag_up+0x1>
    15ce:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <flag_up>
	    }
    }

    if (joyy >= 200 && flag_up == 0)
    15d2:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    15d6:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    15da:	88 3c       	cpi	r24, 0xC8	; 200
    15dc:	91 05       	cpc	r25, r1
    15de:	1c f1       	brlt	.+70     	; 0x1626 <main_menu+0x116>
    15e0:	80 91 e1 02 	lds	r24, 0x02E1	; 0x8002e1 <flag_up>
    15e4:	90 91 e2 02 	lds	r25, 0x02E2	; 0x8002e2 <flag_up+0x1>
    15e8:	89 2b       	or	r24, r25
    15ea:	e9 f4       	brne	.+58     	; 0x1626 <main_menu+0x116>
    {
	    arrow_pos--;
    15ec:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    15f0:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    15f4:	01 97       	sbiw	r24, 0x01	; 1
    15f6:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    15fa:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	    flag_up = 1;
    15fe:	81 e0       	ldi	r24, 0x01	; 1
    1600:	90 e0       	ldi	r25, 0x00	; 0
    1602:	90 93 e2 02 	sts	0x02E2, r25	; 0x8002e2 <flag_up+0x1>
    1606:	80 93 e1 02 	sts	0x02E1, r24	; 0x8002e1 <flag_up>
		OLED_clear_arrow();
    160a:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
	    if (arrow_pos == 0)
    160e:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1612:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1616:	89 2b       	or	r24, r25
    1618:	31 f4       	brne	.+12     	; 0x1626 <main_menu+0x116>
	    {
		    arrow_pos = 7;
    161a:	87 e0       	ldi	r24, 0x07	; 7
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1622:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	    }
    }

    if (joyy <= 100 && flag_down == 0)
    1626:	80 91 f5 02 	lds	r24, 0x02F5	; 0x8002f5 <joyy>
    162a:	90 91 f6 02 	lds	r25, 0x02F6	; 0x8002f6 <joyy+0x1>
    162e:	85 36       	cpi	r24, 0x65	; 101
    1630:	91 05       	cpc	r25, r1
    1632:	1c f5       	brge	.+70     	; 0x167a <main_menu+0x16a>
    1634:	80 91 df 02 	lds	r24, 0x02DF	; 0x8002df <flag_down>
    1638:	90 91 e0 02 	lds	r25, 0x02E0	; 0x8002e0 <flag_down+0x1>
    163c:	89 2b       	or	r24, r25
    163e:	e9 f4       	brne	.+58     	; 0x167a <main_menu+0x16a>
    {
	    arrow_pos++;
    1640:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1644:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    1648:	01 96       	adiw	r24, 0x01	; 1
    164a:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    164e:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	    flag_down = 1;
    1652:	81 e0       	ldi	r24, 0x01	; 1
    1654:	90 e0       	ldi	r25, 0x00	; 0
    1656:	90 93 e0 02 	sts	0x02E0, r25	; 0x8002e0 <flag_down+0x1>
    165a:	80 93 df 02 	sts	0x02DF, r24	; 0x8002df <flag_down>
	    OLED_clear_arrow();
    165e:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
	    if (arrow_pos == 8)
    1662:	80 91 1c 03 	lds	r24, 0x031C	; 0x80031c <arrow_pos>
    1666:	90 91 1d 03 	lds	r25, 0x031D	; 0x80031d <arrow_pos+0x1>
    166a:	08 97       	sbiw	r24, 0x08	; 8
    166c:	31 f4       	brne	.+12     	; 0x167a <main_menu+0x16a>
	    {
		    arrow_pos = 1;
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    1676:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
	    }
    }

    // Based on the arrows position on the menu, submenus can be entered by pressing the joystick button. The submenus run inside while() loops, and when entering a new loop, either break the loop to go back to the main menu or go into a new loop
    // Current design includes another switch-case for the arrowpointer functionality, for deeper submenus, could have to use same system to enter submenus as before, so like nested functions
    switch (arrow_pos)
    167a:	e0 91 1c 03 	lds	r30, 0x031C	; 0x80031c <arrow_pos>
    167e:	f0 91 1d 03 	lds	r31, 0x031D	; 0x80031d <arrow_pos+0x1>
    1682:	31 97       	sbiw	r30, 0x01	; 1
    1684:	e7 30       	cpi	r30, 0x07	; 7
    1686:	f1 05       	cpc	r31, r1
    1688:	08 f0       	brcs	.+2      	; 0x168c <main_menu+0x17c>
    168a:	77 c0       	rjmp	.+238    	; 0x177a <main_menu+0x26a>
    168c:	e3 5b       	subi	r30, 0xB3	; 179
    168e:	ff 4f       	sbci	r31, 0xFF	; 255
    1690:	0c 94 0f 0e 	jmp	0x1c1e	; 0x1c1e <__tablejump2__>
    {
    case 1:
        arrow = 1;
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    169c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1 && button_flag == 0)
    16a0:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    16a4:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    16a8:	01 97       	sbiw	r24, 0x01	; 1
    16aa:	09 f0       	breq	.+2      	; 0x16ae <main_menu+0x19e>
    16ac:	66 c0       	rjmp	.+204    	; 0x177a <main_menu+0x26a>
    16ae:	80 91 dd 02 	lds	r24, 0x02DD	; 0x8002dd <button_flag>
    16b2:	90 91 de 02 	lds	r25, 0x02DE	; 0x8002de <button_flag+0x1>
    16b6:	89 2b       	or	r24, r25
    16b8:	09 f0       	breq	.+2      	; 0x16bc <main_menu+0x1ac>
    16ba:	5f c0       	rjmp	.+190    	; 0x177a <main_menu+0x26a>
        {
			button_flag = 1;
    16bc:	c1 e0       	ldi	r28, 0x01	; 1
    16be:	d0 e0       	ldi	r29, 0x00	; 0
    16c0:	d0 93 de 02 	sts	0x02DE, r29	; 0x8002de <button_flag+0x1>
    16c4:	c0 93 dd 02 	sts	0x02DD, r28	; 0x8002dd <button_flag>
            OLED_reset();
    16c8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
            // Only run the play_menu, when exiting the play menu break the loop (might have to break the loop with flag instead of break;)
         
            play_menu();
    16cc:	0e 94 a0 07 	call	0xf40	; 0xf40 <play_menu>
			OLED_clear_arrow();
    16d0:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
			arrow_pos = 1;
    16d4:	d0 93 1d 03 	sts	0x031D, r29	; 0x80031d <arrow_pos+0x1>
    16d8:	c0 93 1c 03 	sts	0x031C, r28	; 0x80031c <arrow_pos>
    16dc:	4e c0       	rjmp	.+156    	; 0x177a <main_menu+0x26a>
        }
        break;
    case 2:
        arrow = 2;
    16de:	82 e0       	ldi	r24, 0x02	; 2
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    16e6:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1)
    16ea:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    16ee:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    16f2:	01 97       	sbiw	r24, 0x01	; 1
    16f4:	09 f0       	breq	.+2      	; 0x16f8 <main_menu+0x1e8>
    16f6:	41 c0       	rjmp	.+130    	; 0x177a <main_menu+0x26a>
        {
           OLED_reset();
    16f8:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
           // Only run the hs_menu, when exiting the high scores menu break the loop
           hs_menu();
    16fc:	0e 94 94 08 	call	0x1128	; 0x1128 <hs_menu>
		   OLED_clear_arrow();
    1700:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
		   arrow_pos = 1;
    1704:	81 e0       	ldi	r24, 0x01	; 1
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    170c:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
    1710:	34 c0       	rjmp	.+104    	; 0x177a <main_menu+0x26a>
        }
        break;
    case 3:
        arrow = 3;
    1712:	83 e0       	ldi	r24, 0x03	; 3
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    171a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        if (button3State == 1)
    171e:	80 91 18 03 	lds	r24, 0x0318	; 0x800318 <button3State>
    1722:	90 91 19 03 	lds	r25, 0x0319	; 0x800319 <button3State+0x1>
    1726:	01 97       	sbiw	r24, 0x01	; 1
    1728:	41 f5       	brne	.+80     	; 0x177a <main_menu+0x26a>
        {
            OLED_reset();
    172a:	0e 94 3d 07 	call	0xe7a	; 0xe7a <OLED_reset>
            // Only run the diff_menu, when exiting the difficulty menu break the loop
            diff_menu();
    172e:	0e 94 8e 09 	call	0x131c	; 0x131c <diff_menu>
            OLED_clear_arrow();
    1732:	0e 94 4b 07 	call	0xe96	; 0xe96 <OLED_clear_arrow>
            arrow_pos = 1;
    1736:	81 e0       	ldi	r24, 0x01	; 1
    1738:	90 e0       	ldi	r25, 0x00	; 0
    173a:	90 93 1d 03 	sts	0x031D, r25	; 0x80031d <arrow_pos+0x1>
    173e:	80 93 1c 03 	sts	0x031C, r24	; 0x80031c <arrow_pos>
    1742:	1b c0       	rjmp	.+54     	; 0x177a <main_menu+0x26a>
        }
        break;
    case 4:
        arrow = 4;
    1744:	84 e0       	ldi	r24, 0x04	; 4
    1746:	90 e0       	ldi	r25, 0x00	; 0
    1748:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    174c:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>

        break;
    1750:	14 c0       	rjmp	.+40     	; 0x177a <main_menu+0x26a>
    case 5:
        arrow = 5;
    1752:	85 e0       	ldi	r24, 0x05	; 5
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    175a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    175e:	0d c0       	rjmp	.+26     	; 0x177a <main_menu+0x26a>
    case 6:
        arrow = 6;
    1760:	86 e0       	ldi	r24, 0x06	; 6
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1768:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    176c:	06 c0       	rjmp	.+12     	; 0x177a <main_menu+0x26a>
    case 7:
        arrow = 7;
    176e:	87 e0       	ldi	r24, 0x07	; 7
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <arrow+0x1>
    1776:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <arrow>
        break;
    }
    OLED_print_arrow(arrow, 0);
    177a:	60 e0       	ldi	r22, 0x00	; 0
    177c:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <arrow>
    1780:	0e 94 63 07 	call	0xec6	; 0xec6 <OLED_print_arrow>
}
    1784:	df 91       	pop	r29
    1786:	cf 91       	pop	r28
    1788:	08 95       	ret

0000178a <SPI_Init>:


void SPI_Init(void)
{
	/* Set MOSI and SCK output, all others input */
	DDRB = (1<<PB4)|(1<<PB5)|(1<<PB7);
    178a:	80 eb       	ldi	r24, 0xB0	; 176
    178c:	87 bb       	out	0x17, r24	; 23
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    178e:	81 e5       	ldi	r24, 0x51	; 81
    1790:	8d b9       	out	0x0d, r24	; 13
	
	set_bit(PORTB, PB4);
    1792:	88 b3       	in	r24, 0x18	; 24
    1794:	80 61       	ori	r24, 0x10	; 16
    1796:	88 bb       	out	0x18, r24	; 24
    1798:	08 95       	ret

0000179a <SPI_Transmit>:
}

void SPI_Transmit(char Data)
{
	/* Start transmission */
	SPDR = Data;
    179a:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
    179c:	77 9b       	sbis	0x0e, 7	; 14
    179e:	fe cf       	rjmp	.-4      	; 0x179c <SPI_Transmit+0x2>
	;
}
    17a0:	08 95       	ret

000017a2 <SPI_Recieve>:


char SPI_Recieve(void)
{
	/* Start transmission */
	SPDR = 0x00;
    17a2:	1f b8       	out	0x0f, r1	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
    17a4:	77 9b       	sbis	0x0e, 7	; 14
    17a6:	fe cf       	rjmp	.-4      	; 0x17a4 <SPI_Recieve+0x2>
	;
	return(SPDR);
    17a8:	8f b1       	in	r24, 0x0f	; 15
}
    17aa:	08 95       	ret

000017ac <uart_start>:
    17ac:	2b b1       	in	r18, 0x0b	; 11
    17ae:	2d 7f       	andi	r18, 0xFD	; 253
    17b0:	2b b9       	out	0x0b, r18	; 11
    17b2:	90 bd       	out	0x20, r25	; 32
    17b4:	89 b9       	out	0x09, r24	; 9
    17b6:	88 e1       	ldi	r24, 0x18	; 24
    17b8:	8a b9       	out	0x0a, r24	; 10
    17ba:	8e e8       	ldi	r24, 0x8E	; 142
    17bc:	80 bd       	out	0x20, r24	; 32
    17be:	08 95       	ret

000017c0 <uart_transmit>:
    17c0:	5d 9b       	sbis	0x0b, 5	; 11
    17c2:	fe cf       	rjmp	.-4      	; 0x17c0 <uart_transmit>
    17c4:	8c b9       	out	0x0c, r24	; 12
    17c6:	80 e0       	ldi	r24, 0x00	; 0
    17c8:	90 e0       	ldi	r25, 0x00	; 0
    17ca:	08 95       	ret

000017cc <uart_recieve>:
    17cc:	5d 9b       	sbis	0x0b, 5	; 11
    17ce:	fe cf       	rjmp	.-4      	; 0x17cc <uart_recieve>
    17d0:	8c b1       	in	r24, 0x0c	; 12
    17d2:	90 e0       	ldi	r25, 0x00	; 0
    17d4:	08 95       	ret

000017d6 <__subsf3>:
    17d6:	50 58       	subi	r21, 0x80	; 128

000017d8 <__addsf3>:
    17d8:	bb 27       	eor	r27, r27
    17da:	aa 27       	eor	r26, r26
    17dc:	0e 94 03 0c 	call	0x1806	; 0x1806 <__addsf3x>
    17e0:	0c 94 54 0d 	jmp	0x1aa8	; 0x1aa8 <__fp_round>
    17e4:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__fp_pscA>
    17e8:	38 f0       	brcs	.+14     	; 0x17f8 <__addsf3+0x20>
    17ea:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscB>
    17ee:	20 f0       	brcs	.+8      	; 0x17f8 <__addsf3+0x20>
    17f0:	39 f4       	brne	.+14     	; 0x1800 <__addsf3+0x28>
    17f2:	9f 3f       	cpi	r25, 0xFF	; 255
    17f4:	19 f4       	brne	.+6      	; 0x17fc <__addsf3+0x24>
    17f6:	26 f4       	brtc	.+8      	; 0x1800 <__addsf3+0x28>
    17f8:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__fp_nan>
    17fc:	0e f4       	brtc	.+2      	; 0x1800 <__addsf3+0x28>
    17fe:	e0 95       	com	r30
    1800:	e7 fb       	bst	r30, 7
    1802:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_inf>

00001806 <__addsf3x>:
    1806:	e9 2f       	mov	r30, r25
    1808:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__fp_split3>
    180c:	58 f3       	brcs	.-42     	; 0x17e4 <__addsf3+0xc>
    180e:	ba 17       	cp	r27, r26
    1810:	62 07       	cpc	r22, r18
    1812:	73 07       	cpc	r23, r19
    1814:	84 07       	cpc	r24, r20
    1816:	95 07       	cpc	r25, r21
    1818:	20 f0       	brcs	.+8      	; 0x1822 <__addsf3x+0x1c>
    181a:	79 f4       	brne	.+30     	; 0x183a <__addsf3x+0x34>
    181c:	a6 f5       	brtc	.+104    	; 0x1886 <__addsf3x+0x80>
    181e:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <__fp_zero>
    1822:	0e f4       	brtc	.+2      	; 0x1826 <__addsf3x+0x20>
    1824:	e0 95       	com	r30
    1826:	0b 2e       	mov	r0, r27
    1828:	ba 2f       	mov	r27, r26
    182a:	a0 2d       	mov	r26, r0
    182c:	0b 01       	movw	r0, r22
    182e:	b9 01       	movw	r22, r18
    1830:	90 01       	movw	r18, r0
    1832:	0c 01       	movw	r0, r24
    1834:	ca 01       	movw	r24, r20
    1836:	a0 01       	movw	r20, r0
    1838:	11 24       	eor	r1, r1
    183a:	ff 27       	eor	r31, r31
    183c:	59 1b       	sub	r21, r25
    183e:	99 f0       	breq	.+38     	; 0x1866 <__addsf3x+0x60>
    1840:	59 3f       	cpi	r21, 0xF9	; 249
    1842:	50 f4       	brcc	.+20     	; 0x1858 <__addsf3x+0x52>
    1844:	50 3e       	cpi	r21, 0xE0	; 224
    1846:	68 f1       	brcs	.+90     	; 0x18a2 <__addsf3x+0x9c>
    1848:	1a 16       	cp	r1, r26
    184a:	f0 40       	sbci	r31, 0x00	; 0
    184c:	a2 2f       	mov	r26, r18
    184e:	23 2f       	mov	r18, r19
    1850:	34 2f       	mov	r19, r20
    1852:	44 27       	eor	r20, r20
    1854:	58 5f       	subi	r21, 0xF8	; 248
    1856:	f3 cf       	rjmp	.-26     	; 0x183e <__addsf3x+0x38>
    1858:	46 95       	lsr	r20
    185a:	37 95       	ror	r19
    185c:	27 95       	ror	r18
    185e:	a7 95       	ror	r26
    1860:	f0 40       	sbci	r31, 0x00	; 0
    1862:	53 95       	inc	r21
    1864:	c9 f7       	brne	.-14     	; 0x1858 <__addsf3x+0x52>
    1866:	7e f4       	brtc	.+30     	; 0x1886 <__addsf3x+0x80>
    1868:	1f 16       	cp	r1, r31
    186a:	ba 0b       	sbc	r27, r26
    186c:	62 0b       	sbc	r22, r18
    186e:	73 0b       	sbc	r23, r19
    1870:	84 0b       	sbc	r24, r20
    1872:	ba f0       	brmi	.+46     	; 0x18a2 <__addsf3x+0x9c>
    1874:	91 50       	subi	r25, 0x01	; 1
    1876:	a1 f0       	breq	.+40     	; 0x18a0 <__addsf3x+0x9a>
    1878:	ff 0f       	add	r31, r31
    187a:	bb 1f       	adc	r27, r27
    187c:	66 1f       	adc	r22, r22
    187e:	77 1f       	adc	r23, r23
    1880:	88 1f       	adc	r24, r24
    1882:	c2 f7       	brpl	.-16     	; 0x1874 <__addsf3x+0x6e>
    1884:	0e c0       	rjmp	.+28     	; 0x18a2 <__addsf3x+0x9c>
    1886:	ba 0f       	add	r27, r26
    1888:	62 1f       	adc	r22, r18
    188a:	73 1f       	adc	r23, r19
    188c:	84 1f       	adc	r24, r20
    188e:	48 f4       	brcc	.+18     	; 0x18a2 <__addsf3x+0x9c>
    1890:	87 95       	ror	r24
    1892:	77 95       	ror	r23
    1894:	67 95       	ror	r22
    1896:	b7 95       	ror	r27
    1898:	f7 95       	ror	r31
    189a:	9e 3f       	cpi	r25, 0xFE	; 254
    189c:	08 f0       	brcs	.+2      	; 0x18a0 <__addsf3x+0x9a>
    189e:	b0 cf       	rjmp	.-160    	; 0x1800 <__addsf3+0x28>
    18a0:	93 95       	inc	r25
    18a2:	88 0f       	add	r24, r24
    18a4:	08 f0       	brcs	.+2      	; 0x18a8 <__addsf3x+0xa2>
    18a6:	99 27       	eor	r25, r25
    18a8:	ee 0f       	add	r30, r30
    18aa:	97 95       	ror	r25
    18ac:	87 95       	ror	r24
    18ae:	08 95       	ret

000018b0 <__divsf3>:
    18b0:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__divsf3x>
    18b4:	0c 94 54 0d 	jmp	0x1aa8	; 0x1aa8 <__fp_round>
    18b8:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscB>
    18bc:	58 f0       	brcs	.+22     	; 0x18d4 <__divsf3+0x24>
    18be:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__fp_pscA>
    18c2:	40 f0       	brcs	.+16     	; 0x18d4 <__divsf3+0x24>
    18c4:	29 f4       	brne	.+10     	; 0x18d0 <__divsf3+0x20>
    18c6:	5f 3f       	cpi	r21, 0xFF	; 255
    18c8:	29 f0       	breq	.+10     	; 0x18d4 <__divsf3+0x24>
    18ca:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_inf>
    18ce:	51 11       	cpse	r21, r1
    18d0:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_szero>
    18d4:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__fp_nan>

000018d8 <__divsf3x>:
    18d8:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__fp_split3>
    18dc:	68 f3       	brcs	.-38     	; 0x18b8 <__divsf3+0x8>

000018de <__divsf3_pse>:
    18de:	99 23       	and	r25, r25
    18e0:	b1 f3       	breq	.-20     	; 0x18ce <__divsf3+0x1e>
    18e2:	55 23       	and	r21, r21
    18e4:	91 f3       	breq	.-28     	; 0x18ca <__divsf3+0x1a>
    18e6:	95 1b       	sub	r25, r21
    18e8:	55 0b       	sbc	r21, r21
    18ea:	bb 27       	eor	r27, r27
    18ec:	aa 27       	eor	r26, r26
    18ee:	62 17       	cp	r22, r18
    18f0:	73 07       	cpc	r23, r19
    18f2:	84 07       	cpc	r24, r20
    18f4:	38 f0       	brcs	.+14     	; 0x1904 <__divsf3_pse+0x26>
    18f6:	9f 5f       	subi	r25, 0xFF	; 255
    18f8:	5f 4f       	sbci	r21, 0xFF	; 255
    18fa:	22 0f       	add	r18, r18
    18fc:	33 1f       	adc	r19, r19
    18fe:	44 1f       	adc	r20, r20
    1900:	aa 1f       	adc	r26, r26
    1902:	a9 f3       	breq	.-22     	; 0x18ee <__divsf3_pse+0x10>
    1904:	35 d0       	rcall	.+106    	; 0x1970 <__divsf3_pse+0x92>
    1906:	0e 2e       	mov	r0, r30
    1908:	3a f0       	brmi	.+14     	; 0x1918 <__divsf3_pse+0x3a>
    190a:	e0 e8       	ldi	r30, 0x80	; 128
    190c:	32 d0       	rcall	.+100    	; 0x1972 <__divsf3_pse+0x94>
    190e:	91 50       	subi	r25, 0x01	; 1
    1910:	50 40       	sbci	r21, 0x00	; 0
    1912:	e6 95       	lsr	r30
    1914:	00 1c       	adc	r0, r0
    1916:	ca f7       	brpl	.-14     	; 0x190a <__divsf3_pse+0x2c>
    1918:	2b d0       	rcall	.+86     	; 0x1970 <__divsf3_pse+0x92>
    191a:	fe 2f       	mov	r31, r30
    191c:	29 d0       	rcall	.+82     	; 0x1970 <__divsf3_pse+0x92>
    191e:	66 0f       	add	r22, r22
    1920:	77 1f       	adc	r23, r23
    1922:	88 1f       	adc	r24, r24
    1924:	bb 1f       	adc	r27, r27
    1926:	26 17       	cp	r18, r22
    1928:	37 07       	cpc	r19, r23
    192a:	48 07       	cpc	r20, r24
    192c:	ab 07       	cpc	r26, r27
    192e:	b0 e8       	ldi	r27, 0x80	; 128
    1930:	09 f0       	breq	.+2      	; 0x1934 <__divsf3_pse+0x56>
    1932:	bb 0b       	sbc	r27, r27
    1934:	80 2d       	mov	r24, r0
    1936:	bf 01       	movw	r22, r30
    1938:	ff 27       	eor	r31, r31
    193a:	93 58       	subi	r25, 0x83	; 131
    193c:	5f 4f       	sbci	r21, 0xFF	; 255
    193e:	3a f0       	brmi	.+14     	; 0x194e <__divsf3_pse+0x70>
    1940:	9e 3f       	cpi	r25, 0xFE	; 254
    1942:	51 05       	cpc	r21, r1
    1944:	78 f0       	brcs	.+30     	; 0x1964 <__divsf3_pse+0x86>
    1946:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_inf>
    194a:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_szero>
    194e:	5f 3f       	cpi	r21, 0xFF	; 255
    1950:	e4 f3       	brlt	.-8      	; 0x194a <__divsf3_pse+0x6c>
    1952:	98 3e       	cpi	r25, 0xE8	; 232
    1954:	d4 f3       	brlt	.-12     	; 0x194a <__divsf3_pse+0x6c>
    1956:	86 95       	lsr	r24
    1958:	77 95       	ror	r23
    195a:	67 95       	ror	r22
    195c:	b7 95       	ror	r27
    195e:	f7 95       	ror	r31
    1960:	9f 5f       	subi	r25, 0xFF	; 255
    1962:	c9 f7       	brne	.-14     	; 0x1956 <__divsf3_pse+0x78>
    1964:	88 0f       	add	r24, r24
    1966:	91 1d       	adc	r25, r1
    1968:	96 95       	lsr	r25
    196a:	87 95       	ror	r24
    196c:	97 f9       	bld	r25, 7
    196e:	08 95       	ret
    1970:	e1 e0       	ldi	r30, 0x01	; 1
    1972:	66 0f       	add	r22, r22
    1974:	77 1f       	adc	r23, r23
    1976:	88 1f       	adc	r24, r24
    1978:	bb 1f       	adc	r27, r27
    197a:	62 17       	cp	r22, r18
    197c:	73 07       	cpc	r23, r19
    197e:	84 07       	cpc	r24, r20
    1980:	ba 07       	cpc	r27, r26
    1982:	20 f0       	brcs	.+8      	; 0x198c <__divsf3_pse+0xae>
    1984:	62 1b       	sub	r22, r18
    1986:	73 0b       	sbc	r23, r19
    1988:	84 0b       	sbc	r24, r20
    198a:	ba 0b       	sbc	r27, r26
    198c:	ee 1f       	adc	r30, r30
    198e:	88 f7       	brcc	.-30     	; 0x1972 <__divsf3_pse+0x94>
    1990:	e0 95       	com	r30
    1992:	08 95       	ret

00001994 <__fixsfsi>:
    1994:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <__fixunssfsi>
    1998:	68 94       	set
    199a:	b1 11       	cpse	r27, r1
    199c:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_szero>
    19a0:	08 95       	ret

000019a2 <__fixunssfsi>:
    19a2:	0e 94 6d 0d 	call	0x1ada	; 0x1ada <__fp_splitA>
    19a6:	88 f0       	brcs	.+34     	; 0x19ca <__fixunssfsi+0x28>
    19a8:	9f 57       	subi	r25, 0x7F	; 127
    19aa:	98 f0       	brcs	.+38     	; 0x19d2 <__fixunssfsi+0x30>
    19ac:	b9 2f       	mov	r27, r25
    19ae:	99 27       	eor	r25, r25
    19b0:	b7 51       	subi	r27, 0x17	; 23
    19b2:	b0 f0       	brcs	.+44     	; 0x19e0 <__fixunssfsi+0x3e>
    19b4:	e1 f0       	breq	.+56     	; 0x19ee <__fixunssfsi+0x4c>
    19b6:	66 0f       	add	r22, r22
    19b8:	77 1f       	adc	r23, r23
    19ba:	88 1f       	adc	r24, r24
    19bc:	99 1f       	adc	r25, r25
    19be:	1a f0       	brmi	.+6      	; 0x19c6 <__fixunssfsi+0x24>
    19c0:	ba 95       	dec	r27
    19c2:	c9 f7       	brne	.-14     	; 0x19b6 <__fixunssfsi+0x14>
    19c4:	14 c0       	rjmp	.+40     	; 0x19ee <__fixunssfsi+0x4c>
    19c6:	b1 30       	cpi	r27, 0x01	; 1
    19c8:	91 f0       	breq	.+36     	; 0x19ee <__fixunssfsi+0x4c>
    19ca:	0e 94 87 0d 	call	0x1b0e	; 0x1b0e <__fp_zero>
    19ce:	b1 e0       	ldi	r27, 0x01	; 1
    19d0:	08 95       	ret
    19d2:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <__fp_zero>
    19d6:	67 2f       	mov	r22, r23
    19d8:	78 2f       	mov	r23, r24
    19da:	88 27       	eor	r24, r24
    19dc:	b8 5f       	subi	r27, 0xF8	; 248
    19de:	39 f0       	breq	.+14     	; 0x19ee <__fixunssfsi+0x4c>
    19e0:	b9 3f       	cpi	r27, 0xF9	; 249
    19e2:	cc f3       	brlt	.-14     	; 0x19d6 <__fixunssfsi+0x34>
    19e4:	86 95       	lsr	r24
    19e6:	77 95       	ror	r23
    19e8:	67 95       	ror	r22
    19ea:	b3 95       	inc	r27
    19ec:	d9 f7       	brne	.-10     	; 0x19e4 <__fixunssfsi+0x42>
    19ee:	3e f4       	brtc	.+14     	; 0x19fe <__fixunssfsi+0x5c>
    19f0:	90 95       	com	r25
    19f2:	80 95       	com	r24
    19f4:	70 95       	com	r23
    19f6:	61 95       	neg	r22
    19f8:	7f 4f       	sbci	r23, 0xFF	; 255
    19fa:	8f 4f       	sbci	r24, 0xFF	; 255
    19fc:	9f 4f       	sbci	r25, 0xFF	; 255
    19fe:	08 95       	ret

00001a00 <__floatunsisf>:
    1a00:	e8 94       	clt
    1a02:	09 c0       	rjmp	.+18     	; 0x1a16 <__floatsisf+0x12>

00001a04 <__floatsisf>:
    1a04:	97 fb       	bst	r25, 7
    1a06:	3e f4       	brtc	.+14     	; 0x1a16 <__floatsisf+0x12>
    1a08:	90 95       	com	r25
    1a0a:	80 95       	com	r24
    1a0c:	70 95       	com	r23
    1a0e:	61 95       	neg	r22
    1a10:	7f 4f       	sbci	r23, 0xFF	; 255
    1a12:	8f 4f       	sbci	r24, 0xFF	; 255
    1a14:	9f 4f       	sbci	r25, 0xFF	; 255
    1a16:	99 23       	and	r25, r25
    1a18:	a9 f0       	breq	.+42     	; 0x1a44 <__floatsisf+0x40>
    1a1a:	f9 2f       	mov	r31, r25
    1a1c:	96 e9       	ldi	r25, 0x96	; 150
    1a1e:	bb 27       	eor	r27, r27
    1a20:	93 95       	inc	r25
    1a22:	f6 95       	lsr	r31
    1a24:	87 95       	ror	r24
    1a26:	77 95       	ror	r23
    1a28:	67 95       	ror	r22
    1a2a:	b7 95       	ror	r27
    1a2c:	f1 11       	cpse	r31, r1
    1a2e:	f8 cf       	rjmp	.-16     	; 0x1a20 <__floatsisf+0x1c>
    1a30:	fa f4       	brpl	.+62     	; 0x1a70 <__floatsisf+0x6c>
    1a32:	bb 0f       	add	r27, r27
    1a34:	11 f4       	brne	.+4      	; 0x1a3a <__floatsisf+0x36>
    1a36:	60 ff       	sbrs	r22, 0
    1a38:	1b c0       	rjmp	.+54     	; 0x1a70 <__floatsisf+0x6c>
    1a3a:	6f 5f       	subi	r22, 0xFF	; 255
    1a3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a3e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a40:	9f 4f       	sbci	r25, 0xFF	; 255
    1a42:	16 c0       	rjmp	.+44     	; 0x1a70 <__floatsisf+0x6c>
    1a44:	88 23       	and	r24, r24
    1a46:	11 f0       	breq	.+4      	; 0x1a4c <__floatsisf+0x48>
    1a48:	96 e9       	ldi	r25, 0x96	; 150
    1a4a:	11 c0       	rjmp	.+34     	; 0x1a6e <__floatsisf+0x6a>
    1a4c:	77 23       	and	r23, r23
    1a4e:	21 f0       	breq	.+8      	; 0x1a58 <__floatsisf+0x54>
    1a50:	9e e8       	ldi	r25, 0x8E	; 142
    1a52:	87 2f       	mov	r24, r23
    1a54:	76 2f       	mov	r23, r22
    1a56:	05 c0       	rjmp	.+10     	; 0x1a62 <__floatsisf+0x5e>
    1a58:	66 23       	and	r22, r22
    1a5a:	71 f0       	breq	.+28     	; 0x1a78 <__floatsisf+0x74>
    1a5c:	96 e8       	ldi	r25, 0x86	; 134
    1a5e:	86 2f       	mov	r24, r22
    1a60:	70 e0       	ldi	r23, 0x00	; 0
    1a62:	60 e0       	ldi	r22, 0x00	; 0
    1a64:	2a f0       	brmi	.+10     	; 0x1a70 <__floatsisf+0x6c>
    1a66:	9a 95       	dec	r25
    1a68:	66 0f       	add	r22, r22
    1a6a:	77 1f       	adc	r23, r23
    1a6c:	88 1f       	adc	r24, r24
    1a6e:	da f7       	brpl	.-10     	; 0x1a66 <__floatsisf+0x62>
    1a70:	88 0f       	add	r24, r24
    1a72:	96 95       	lsr	r25
    1a74:	87 95       	ror	r24
    1a76:	97 f9       	bld	r25, 7
    1a78:	08 95       	ret

00001a7a <__fp_inf>:
    1a7a:	97 f9       	bld	r25, 7
    1a7c:	9f 67       	ori	r25, 0x7F	; 127
    1a7e:	80 e8       	ldi	r24, 0x80	; 128
    1a80:	70 e0       	ldi	r23, 0x00	; 0
    1a82:	60 e0       	ldi	r22, 0x00	; 0
    1a84:	08 95       	ret

00001a86 <__fp_nan>:
    1a86:	9f ef       	ldi	r25, 0xFF	; 255
    1a88:	80 ec       	ldi	r24, 0xC0	; 192
    1a8a:	08 95       	ret

00001a8c <__fp_pscA>:
    1a8c:	00 24       	eor	r0, r0
    1a8e:	0a 94       	dec	r0
    1a90:	16 16       	cp	r1, r22
    1a92:	17 06       	cpc	r1, r23
    1a94:	18 06       	cpc	r1, r24
    1a96:	09 06       	cpc	r0, r25
    1a98:	08 95       	ret

00001a9a <__fp_pscB>:
    1a9a:	00 24       	eor	r0, r0
    1a9c:	0a 94       	dec	r0
    1a9e:	12 16       	cp	r1, r18
    1aa0:	13 06       	cpc	r1, r19
    1aa2:	14 06       	cpc	r1, r20
    1aa4:	05 06       	cpc	r0, r21
    1aa6:	08 95       	ret

00001aa8 <__fp_round>:
    1aa8:	09 2e       	mov	r0, r25
    1aaa:	03 94       	inc	r0
    1aac:	00 0c       	add	r0, r0
    1aae:	11 f4       	brne	.+4      	; 0x1ab4 <__fp_round+0xc>
    1ab0:	88 23       	and	r24, r24
    1ab2:	52 f0       	brmi	.+20     	; 0x1ac8 <__fp_round+0x20>
    1ab4:	bb 0f       	add	r27, r27
    1ab6:	40 f4       	brcc	.+16     	; 0x1ac8 <__fp_round+0x20>
    1ab8:	bf 2b       	or	r27, r31
    1aba:	11 f4       	brne	.+4      	; 0x1ac0 <__fp_round+0x18>
    1abc:	60 ff       	sbrs	r22, 0
    1abe:	04 c0       	rjmp	.+8      	; 0x1ac8 <__fp_round+0x20>
    1ac0:	6f 5f       	subi	r22, 0xFF	; 255
    1ac2:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac4:	8f 4f       	sbci	r24, 0xFF	; 255
    1ac6:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac8:	08 95       	ret

00001aca <__fp_split3>:
    1aca:	57 fd       	sbrc	r21, 7
    1acc:	90 58       	subi	r25, 0x80	; 128
    1ace:	44 0f       	add	r20, r20
    1ad0:	55 1f       	adc	r21, r21
    1ad2:	59 f0       	breq	.+22     	; 0x1aea <__fp_splitA+0x10>
    1ad4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ad6:	71 f0       	breq	.+28     	; 0x1af4 <__fp_splitA+0x1a>
    1ad8:	47 95       	ror	r20

00001ada <__fp_splitA>:
    1ada:	88 0f       	add	r24, r24
    1adc:	97 fb       	bst	r25, 7
    1ade:	99 1f       	adc	r25, r25
    1ae0:	61 f0       	breq	.+24     	; 0x1afa <__fp_splitA+0x20>
    1ae2:	9f 3f       	cpi	r25, 0xFF	; 255
    1ae4:	79 f0       	breq	.+30     	; 0x1b04 <__fp_splitA+0x2a>
    1ae6:	87 95       	ror	r24
    1ae8:	08 95       	ret
    1aea:	12 16       	cp	r1, r18
    1aec:	13 06       	cpc	r1, r19
    1aee:	14 06       	cpc	r1, r20
    1af0:	55 1f       	adc	r21, r21
    1af2:	f2 cf       	rjmp	.-28     	; 0x1ad8 <__fp_split3+0xe>
    1af4:	46 95       	lsr	r20
    1af6:	f1 df       	rcall	.-30     	; 0x1ada <__fp_splitA>
    1af8:	08 c0       	rjmp	.+16     	; 0x1b0a <__fp_splitA+0x30>
    1afa:	16 16       	cp	r1, r22
    1afc:	17 06       	cpc	r1, r23
    1afe:	18 06       	cpc	r1, r24
    1b00:	99 1f       	adc	r25, r25
    1b02:	f1 cf       	rjmp	.-30     	; 0x1ae6 <__fp_splitA+0xc>
    1b04:	86 95       	lsr	r24
    1b06:	71 05       	cpc	r23, r1
    1b08:	61 05       	cpc	r22, r1
    1b0a:	08 94       	sec
    1b0c:	08 95       	ret

00001b0e <__fp_zero>:
    1b0e:	e8 94       	clt

00001b10 <__fp_szero>:
    1b10:	bb 27       	eor	r27, r27
    1b12:	66 27       	eor	r22, r22
    1b14:	77 27       	eor	r23, r23
    1b16:	cb 01       	movw	r24, r22
    1b18:	97 f9       	bld	r25, 7
    1b1a:	08 95       	ret

00001b1c <__mulsf3>:
    1b1c:	0e 94 a1 0d 	call	0x1b42	; 0x1b42 <__mulsf3x>
    1b20:	0c 94 54 0d 	jmp	0x1aa8	; 0x1aa8 <__fp_round>
    1b24:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__fp_pscA>
    1b28:	38 f0       	brcs	.+14     	; 0x1b38 <__mulsf3+0x1c>
    1b2a:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <__fp_pscB>
    1b2e:	20 f0       	brcs	.+8      	; 0x1b38 <__mulsf3+0x1c>
    1b30:	95 23       	and	r25, r21
    1b32:	11 f0       	breq	.+4      	; 0x1b38 <__mulsf3+0x1c>
    1b34:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_inf>
    1b38:	0c 94 43 0d 	jmp	0x1a86	; 0x1a86 <__fp_nan>
    1b3c:	11 24       	eor	r1, r1
    1b3e:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_szero>

00001b42 <__mulsf3x>:
    1b42:	0e 94 65 0d 	call	0x1aca	; 0x1aca <__fp_split3>
    1b46:	70 f3       	brcs	.-36     	; 0x1b24 <__mulsf3+0x8>

00001b48 <__mulsf3_pse>:
    1b48:	95 9f       	mul	r25, r21
    1b4a:	c1 f3       	breq	.-16     	; 0x1b3c <__mulsf3+0x20>
    1b4c:	95 0f       	add	r25, r21
    1b4e:	50 e0       	ldi	r21, 0x00	; 0
    1b50:	55 1f       	adc	r21, r21
    1b52:	62 9f       	mul	r22, r18
    1b54:	f0 01       	movw	r30, r0
    1b56:	72 9f       	mul	r23, r18
    1b58:	bb 27       	eor	r27, r27
    1b5a:	f0 0d       	add	r31, r0
    1b5c:	b1 1d       	adc	r27, r1
    1b5e:	63 9f       	mul	r22, r19
    1b60:	aa 27       	eor	r26, r26
    1b62:	f0 0d       	add	r31, r0
    1b64:	b1 1d       	adc	r27, r1
    1b66:	aa 1f       	adc	r26, r26
    1b68:	64 9f       	mul	r22, r20
    1b6a:	66 27       	eor	r22, r22
    1b6c:	b0 0d       	add	r27, r0
    1b6e:	a1 1d       	adc	r26, r1
    1b70:	66 1f       	adc	r22, r22
    1b72:	82 9f       	mul	r24, r18
    1b74:	22 27       	eor	r18, r18
    1b76:	b0 0d       	add	r27, r0
    1b78:	a1 1d       	adc	r26, r1
    1b7a:	62 1f       	adc	r22, r18
    1b7c:	73 9f       	mul	r23, r19
    1b7e:	b0 0d       	add	r27, r0
    1b80:	a1 1d       	adc	r26, r1
    1b82:	62 1f       	adc	r22, r18
    1b84:	83 9f       	mul	r24, r19
    1b86:	a0 0d       	add	r26, r0
    1b88:	61 1d       	adc	r22, r1
    1b8a:	22 1f       	adc	r18, r18
    1b8c:	74 9f       	mul	r23, r20
    1b8e:	33 27       	eor	r19, r19
    1b90:	a0 0d       	add	r26, r0
    1b92:	61 1d       	adc	r22, r1
    1b94:	23 1f       	adc	r18, r19
    1b96:	84 9f       	mul	r24, r20
    1b98:	60 0d       	add	r22, r0
    1b9a:	21 1d       	adc	r18, r1
    1b9c:	82 2f       	mov	r24, r18
    1b9e:	76 2f       	mov	r23, r22
    1ba0:	6a 2f       	mov	r22, r26
    1ba2:	11 24       	eor	r1, r1
    1ba4:	9f 57       	subi	r25, 0x7F	; 127
    1ba6:	50 40       	sbci	r21, 0x00	; 0
    1ba8:	9a f0       	brmi	.+38     	; 0x1bd0 <__mulsf3_pse+0x88>
    1baa:	f1 f0       	breq	.+60     	; 0x1be8 <__mulsf3_pse+0xa0>
    1bac:	88 23       	and	r24, r24
    1bae:	4a f0       	brmi	.+18     	; 0x1bc2 <__mulsf3_pse+0x7a>
    1bb0:	ee 0f       	add	r30, r30
    1bb2:	ff 1f       	adc	r31, r31
    1bb4:	bb 1f       	adc	r27, r27
    1bb6:	66 1f       	adc	r22, r22
    1bb8:	77 1f       	adc	r23, r23
    1bba:	88 1f       	adc	r24, r24
    1bbc:	91 50       	subi	r25, 0x01	; 1
    1bbe:	50 40       	sbci	r21, 0x00	; 0
    1bc0:	a9 f7       	brne	.-22     	; 0x1bac <__mulsf3_pse+0x64>
    1bc2:	9e 3f       	cpi	r25, 0xFE	; 254
    1bc4:	51 05       	cpc	r21, r1
    1bc6:	80 f0       	brcs	.+32     	; 0x1be8 <__mulsf3_pse+0xa0>
    1bc8:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_inf>
    1bcc:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__fp_szero>
    1bd0:	5f 3f       	cpi	r21, 0xFF	; 255
    1bd2:	e4 f3       	brlt	.-8      	; 0x1bcc <__mulsf3_pse+0x84>
    1bd4:	98 3e       	cpi	r25, 0xE8	; 232
    1bd6:	d4 f3       	brlt	.-12     	; 0x1bcc <__mulsf3_pse+0x84>
    1bd8:	86 95       	lsr	r24
    1bda:	77 95       	ror	r23
    1bdc:	67 95       	ror	r22
    1bde:	b7 95       	ror	r27
    1be0:	f7 95       	ror	r31
    1be2:	e7 95       	ror	r30
    1be4:	9f 5f       	subi	r25, 0xFF	; 255
    1be6:	c1 f7       	brne	.-16     	; 0x1bd8 <__mulsf3_pse+0x90>
    1be8:	fe 2b       	or	r31, r30
    1bea:	88 0f       	add	r24, r24
    1bec:	91 1d       	adc	r25, r1
    1bee:	96 95       	lsr	r25
    1bf0:	87 95       	ror	r24
    1bf2:	97 f9       	bld	r25, 7
    1bf4:	08 95       	ret

00001bf6 <__divmodhi4>:
    1bf6:	97 fb       	bst	r25, 7
    1bf8:	07 2e       	mov	r0, r23
    1bfa:	16 f4       	brtc	.+4      	; 0x1c00 <__divmodhi4+0xa>
    1bfc:	00 94       	com	r0
    1bfe:	07 d0       	rcall	.+14     	; 0x1c0e <__divmodhi4_neg1>
    1c00:	77 fd       	sbrc	r23, 7
    1c02:	09 d0       	rcall	.+18     	; 0x1c16 <__divmodhi4_neg2>
    1c04:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <__udivmodhi4>
    1c08:	07 fc       	sbrc	r0, 7
    1c0a:	05 d0       	rcall	.+10     	; 0x1c16 <__divmodhi4_neg2>
    1c0c:	3e f4       	brtc	.+14     	; 0x1c1c <__divmodhi4_exit>

00001c0e <__divmodhi4_neg1>:
    1c0e:	90 95       	com	r25
    1c10:	81 95       	neg	r24
    1c12:	9f 4f       	sbci	r25, 0xFF	; 255
    1c14:	08 95       	ret

00001c16 <__divmodhi4_neg2>:
    1c16:	70 95       	com	r23
    1c18:	61 95       	neg	r22
    1c1a:	7f 4f       	sbci	r23, 0xFF	; 255

00001c1c <__divmodhi4_exit>:
    1c1c:	08 95       	ret

00001c1e <__tablejump2__>:
    1c1e:	ee 0f       	add	r30, r30
    1c20:	ff 1f       	adc	r31, r31
    1c22:	05 90       	lpm	r0, Z+
    1c24:	f4 91       	lpm	r31, Z
    1c26:	e0 2d       	mov	r30, r0
    1c28:	09 94       	ijmp

00001c2a <__udivmodhi4>:
    1c2a:	aa 1b       	sub	r26, r26
    1c2c:	bb 1b       	sub	r27, r27
    1c2e:	51 e1       	ldi	r21, 0x11	; 17
    1c30:	07 c0       	rjmp	.+14     	; 0x1c40 <__udivmodhi4_ep>

00001c32 <__udivmodhi4_loop>:
    1c32:	aa 1f       	adc	r26, r26
    1c34:	bb 1f       	adc	r27, r27
    1c36:	a6 17       	cp	r26, r22
    1c38:	b7 07       	cpc	r27, r23
    1c3a:	10 f0       	brcs	.+4      	; 0x1c40 <__udivmodhi4_ep>
    1c3c:	a6 1b       	sub	r26, r22
    1c3e:	b7 0b       	sbc	r27, r23

00001c40 <__udivmodhi4_ep>:
    1c40:	88 1f       	adc	r24, r24
    1c42:	99 1f       	adc	r25, r25
    1c44:	5a 95       	dec	r21
    1c46:	a9 f7       	brne	.-22     	; 0x1c32 <__udivmodhi4_loop>
    1c48:	80 95       	com	r24
    1c4a:	90 95       	com	r25
    1c4c:	bc 01       	movw	r22, r24
    1c4e:	cd 01       	movw	r24, r26
    1c50:	08 95       	ret

00001c52 <fdevopen>:
    1c52:	0f 93       	push	r16
    1c54:	1f 93       	push	r17
    1c56:	cf 93       	push	r28
    1c58:	df 93       	push	r29
    1c5a:	00 97       	sbiw	r24, 0x00	; 0
    1c5c:	31 f4       	brne	.+12     	; 0x1c6a <fdevopen+0x18>
    1c5e:	61 15       	cp	r22, r1
    1c60:	71 05       	cpc	r23, r1
    1c62:	19 f4       	brne	.+6      	; 0x1c6a <fdevopen+0x18>
    1c64:	80 e0       	ldi	r24, 0x00	; 0
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	3a c0       	rjmp	.+116    	; 0x1cde <fdevopen+0x8c>
    1c6a:	8b 01       	movw	r16, r22
    1c6c:	ec 01       	movw	r28, r24
    1c6e:	6e e0       	ldi	r22, 0x0E	; 14
    1c70:	70 e0       	ldi	r23, 0x00	; 0
    1c72:	81 e0       	ldi	r24, 0x01	; 1
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	0e 94 9b 10 	call	0x2136	; 0x2136 <calloc>
    1c7a:	fc 01       	movw	r30, r24
    1c7c:	89 2b       	or	r24, r25
    1c7e:	91 f3       	breq	.-28     	; 0x1c64 <fdevopen+0x12>
    1c80:	80 e8       	ldi	r24, 0x80	; 128
    1c82:	83 83       	std	Z+3, r24	; 0x03
    1c84:	01 15       	cp	r16, r1
    1c86:	11 05       	cpc	r17, r1
    1c88:	71 f0       	breq	.+28     	; 0x1ca6 <fdevopen+0x54>
    1c8a:	13 87       	std	Z+11, r17	; 0x0b
    1c8c:	02 87       	std	Z+10, r16	; 0x0a
    1c8e:	81 e8       	ldi	r24, 0x81	; 129
    1c90:	83 83       	std	Z+3, r24	; 0x03
    1c92:	80 91 1e 03 	lds	r24, 0x031E	; 0x80031e <__iob>
    1c96:	90 91 1f 03 	lds	r25, 0x031F	; 0x80031f <__iob+0x1>
    1c9a:	89 2b       	or	r24, r25
    1c9c:	21 f4       	brne	.+8      	; 0x1ca6 <fdevopen+0x54>
    1c9e:	f0 93 1f 03 	sts	0x031F, r31	; 0x80031f <__iob+0x1>
    1ca2:	e0 93 1e 03 	sts	0x031E, r30	; 0x80031e <__iob>
    1ca6:	20 97       	sbiw	r28, 0x00	; 0
    1ca8:	c9 f0       	breq	.+50     	; 0x1cdc <fdevopen+0x8a>
    1caa:	d1 87       	std	Z+9, r29	; 0x09
    1cac:	c0 87       	std	Z+8, r28	; 0x08
    1cae:	83 81       	ldd	r24, Z+3	; 0x03
    1cb0:	82 60       	ori	r24, 0x02	; 2
    1cb2:	83 83       	std	Z+3, r24	; 0x03
    1cb4:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <__iob+0x2>
    1cb8:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <__iob+0x3>
    1cbc:	89 2b       	or	r24, r25
    1cbe:	71 f4       	brne	.+28     	; 0x1cdc <fdevopen+0x8a>
    1cc0:	f0 93 21 03 	sts	0x0321, r31	; 0x800321 <__iob+0x3>
    1cc4:	e0 93 20 03 	sts	0x0320, r30	; 0x800320 <__iob+0x2>
    1cc8:	80 91 22 03 	lds	r24, 0x0322	; 0x800322 <__iob+0x4>
    1ccc:	90 91 23 03 	lds	r25, 0x0323	; 0x800323 <__iob+0x5>
    1cd0:	89 2b       	or	r24, r25
    1cd2:	21 f4       	brne	.+8      	; 0x1cdc <fdevopen+0x8a>
    1cd4:	f0 93 23 03 	sts	0x0323, r31	; 0x800323 <__iob+0x5>
    1cd8:	e0 93 22 03 	sts	0x0322, r30	; 0x800322 <__iob+0x4>
    1cdc:	cf 01       	movw	r24, r30
    1cde:	df 91       	pop	r29
    1ce0:	cf 91       	pop	r28
    1ce2:	1f 91       	pop	r17
    1ce4:	0f 91       	pop	r16
    1ce6:	08 95       	ret

00001ce8 <printf>:
    1ce8:	a0 e0       	ldi	r26, 0x00	; 0
    1cea:	b0 e0       	ldi	r27, 0x00	; 0
    1cec:	ea e7       	ldi	r30, 0x7A	; 122
    1cee:	fe e0       	ldi	r31, 0x0E	; 14
    1cf0:	0c 94 9f 12 	jmp	0x253e	; 0x253e <__prologue_saves__+0x20>
    1cf4:	ae 01       	movw	r20, r28
    1cf6:	4b 5f       	subi	r20, 0xFB	; 251
    1cf8:	5f 4f       	sbci	r21, 0xFF	; 255
    1cfa:	fa 01       	movw	r30, r20
    1cfc:	61 91       	ld	r22, Z+
    1cfe:	71 91       	ld	r23, Z+
    1d00:	af 01       	movw	r20, r30
    1d02:	80 91 20 03 	lds	r24, 0x0320	; 0x800320 <__iob+0x2>
    1d06:	90 91 21 03 	lds	r25, 0x0321	; 0x800321 <__iob+0x3>
    1d0a:	0e 94 ba 0e 	call	0x1d74	; 0x1d74 <vfprintf>
    1d0e:	e2 e0       	ldi	r30, 0x02	; 2
    1d10:	0c 94 bb 12 	jmp	0x2576	; 0x2576 <__epilogue_restores__+0x20>

00001d14 <puts>:
    1d14:	0f 93       	push	r16
    1d16:	1f 93       	push	r17
    1d18:	cf 93       	push	r28
    1d1a:	df 93       	push	r29
    1d1c:	e0 91 20 03 	lds	r30, 0x0320	; 0x800320 <__iob+0x2>
    1d20:	f0 91 21 03 	lds	r31, 0x0321	; 0x800321 <__iob+0x3>
    1d24:	23 81       	ldd	r18, Z+3	; 0x03
    1d26:	21 ff       	sbrs	r18, 1
    1d28:	1b c0       	rjmp	.+54     	; 0x1d60 <puts+0x4c>
    1d2a:	8c 01       	movw	r16, r24
    1d2c:	d0 e0       	ldi	r29, 0x00	; 0
    1d2e:	c0 e0       	ldi	r28, 0x00	; 0
    1d30:	f8 01       	movw	r30, r16
    1d32:	81 91       	ld	r24, Z+
    1d34:	8f 01       	movw	r16, r30
    1d36:	60 91 20 03 	lds	r22, 0x0320	; 0x800320 <__iob+0x2>
    1d3a:	70 91 21 03 	lds	r23, 0x0321	; 0x800321 <__iob+0x3>
    1d3e:	db 01       	movw	r26, r22
    1d40:	18 96       	adiw	r26, 0x08	; 8
    1d42:	ed 91       	ld	r30, X+
    1d44:	fc 91       	ld	r31, X
    1d46:	19 97       	sbiw	r26, 0x09	; 9
    1d48:	88 23       	and	r24, r24
    1d4a:	31 f0       	breq	.+12     	; 0x1d58 <puts+0x44>
    1d4c:	09 95       	icall
    1d4e:	89 2b       	or	r24, r25
    1d50:	79 f3       	breq	.-34     	; 0x1d30 <puts+0x1c>
    1d52:	df ef       	ldi	r29, 0xFF	; 255
    1d54:	cf ef       	ldi	r28, 0xFF	; 255
    1d56:	ec cf       	rjmp	.-40     	; 0x1d30 <puts+0x1c>
    1d58:	8a e0       	ldi	r24, 0x0A	; 10
    1d5a:	09 95       	icall
    1d5c:	89 2b       	or	r24, r25
    1d5e:	19 f0       	breq	.+6      	; 0x1d66 <puts+0x52>
    1d60:	8f ef       	ldi	r24, 0xFF	; 255
    1d62:	9f ef       	ldi	r25, 0xFF	; 255
    1d64:	02 c0       	rjmp	.+4      	; 0x1d6a <puts+0x56>
    1d66:	8d 2f       	mov	r24, r29
    1d68:	9c 2f       	mov	r25, r28
    1d6a:	df 91       	pop	r29
    1d6c:	cf 91       	pop	r28
    1d6e:	1f 91       	pop	r17
    1d70:	0f 91       	pop	r16
    1d72:	08 95       	ret

00001d74 <vfprintf>:
    1d74:	ab e0       	ldi	r26, 0x0B	; 11
    1d76:	b0 e0       	ldi	r27, 0x00	; 0
    1d78:	e0 ec       	ldi	r30, 0xC0	; 192
    1d7a:	fe e0       	ldi	r31, 0x0E	; 14
    1d7c:	0c 94 8f 12 	jmp	0x251e	; 0x251e <__prologue_saves__>
    1d80:	6c 01       	movw	r12, r24
    1d82:	7b 01       	movw	r14, r22
    1d84:	8a 01       	movw	r16, r20
    1d86:	fc 01       	movw	r30, r24
    1d88:	17 82       	std	Z+7, r1	; 0x07
    1d8a:	16 82       	std	Z+6, r1	; 0x06
    1d8c:	83 81       	ldd	r24, Z+3	; 0x03
    1d8e:	81 ff       	sbrs	r24, 1
    1d90:	cc c1       	rjmp	.+920    	; 0x212a <vfprintf+0x3b6>
    1d92:	ce 01       	movw	r24, r28
    1d94:	01 96       	adiw	r24, 0x01	; 1
    1d96:	3c 01       	movw	r6, r24
    1d98:	f6 01       	movw	r30, r12
    1d9a:	93 81       	ldd	r25, Z+3	; 0x03
    1d9c:	f7 01       	movw	r30, r14
    1d9e:	93 fd       	sbrc	r25, 3
    1da0:	85 91       	lpm	r24, Z+
    1da2:	93 ff       	sbrs	r25, 3
    1da4:	81 91       	ld	r24, Z+
    1da6:	7f 01       	movw	r14, r30
    1da8:	88 23       	and	r24, r24
    1daa:	09 f4       	brne	.+2      	; 0x1dae <vfprintf+0x3a>
    1dac:	ba c1       	rjmp	.+884    	; 0x2122 <vfprintf+0x3ae>
    1dae:	85 32       	cpi	r24, 0x25	; 37
    1db0:	39 f4       	brne	.+14     	; 0x1dc0 <vfprintf+0x4c>
    1db2:	93 fd       	sbrc	r25, 3
    1db4:	85 91       	lpm	r24, Z+
    1db6:	93 ff       	sbrs	r25, 3
    1db8:	81 91       	ld	r24, Z+
    1dba:	7f 01       	movw	r14, r30
    1dbc:	85 32       	cpi	r24, 0x25	; 37
    1dbe:	29 f4       	brne	.+10     	; 0x1dca <vfprintf+0x56>
    1dc0:	b6 01       	movw	r22, r12
    1dc2:	90 e0       	ldi	r25, 0x00	; 0
    1dc4:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    1dc8:	e7 cf       	rjmp	.-50     	; 0x1d98 <vfprintf+0x24>
    1dca:	91 2c       	mov	r9, r1
    1dcc:	21 2c       	mov	r2, r1
    1dce:	31 2c       	mov	r3, r1
    1dd0:	ff e1       	ldi	r31, 0x1F	; 31
    1dd2:	f3 15       	cp	r31, r3
    1dd4:	d8 f0       	brcs	.+54     	; 0x1e0c <vfprintf+0x98>
    1dd6:	8b 32       	cpi	r24, 0x2B	; 43
    1dd8:	79 f0       	breq	.+30     	; 0x1df8 <vfprintf+0x84>
    1dda:	38 f4       	brcc	.+14     	; 0x1dea <vfprintf+0x76>
    1ddc:	80 32       	cpi	r24, 0x20	; 32
    1dde:	79 f0       	breq	.+30     	; 0x1dfe <vfprintf+0x8a>
    1de0:	83 32       	cpi	r24, 0x23	; 35
    1de2:	a1 f4       	brne	.+40     	; 0x1e0c <vfprintf+0x98>
    1de4:	23 2d       	mov	r18, r3
    1de6:	20 61       	ori	r18, 0x10	; 16
    1de8:	1d c0       	rjmp	.+58     	; 0x1e24 <vfprintf+0xb0>
    1dea:	8d 32       	cpi	r24, 0x2D	; 45
    1dec:	61 f0       	breq	.+24     	; 0x1e06 <vfprintf+0x92>
    1dee:	80 33       	cpi	r24, 0x30	; 48
    1df0:	69 f4       	brne	.+26     	; 0x1e0c <vfprintf+0x98>
    1df2:	23 2d       	mov	r18, r3
    1df4:	21 60       	ori	r18, 0x01	; 1
    1df6:	16 c0       	rjmp	.+44     	; 0x1e24 <vfprintf+0xb0>
    1df8:	83 2d       	mov	r24, r3
    1dfa:	82 60       	ori	r24, 0x02	; 2
    1dfc:	38 2e       	mov	r3, r24
    1dfe:	e3 2d       	mov	r30, r3
    1e00:	e4 60       	ori	r30, 0x04	; 4
    1e02:	3e 2e       	mov	r3, r30
    1e04:	2a c0       	rjmp	.+84     	; 0x1e5a <vfprintf+0xe6>
    1e06:	f3 2d       	mov	r31, r3
    1e08:	f8 60       	ori	r31, 0x08	; 8
    1e0a:	1d c0       	rjmp	.+58     	; 0x1e46 <vfprintf+0xd2>
    1e0c:	37 fc       	sbrc	r3, 7
    1e0e:	2d c0       	rjmp	.+90     	; 0x1e6a <vfprintf+0xf6>
    1e10:	20 ed       	ldi	r18, 0xD0	; 208
    1e12:	28 0f       	add	r18, r24
    1e14:	2a 30       	cpi	r18, 0x0A	; 10
    1e16:	40 f0       	brcs	.+16     	; 0x1e28 <vfprintf+0xb4>
    1e18:	8e 32       	cpi	r24, 0x2E	; 46
    1e1a:	b9 f4       	brne	.+46     	; 0x1e4a <vfprintf+0xd6>
    1e1c:	36 fc       	sbrc	r3, 6
    1e1e:	81 c1       	rjmp	.+770    	; 0x2122 <vfprintf+0x3ae>
    1e20:	23 2d       	mov	r18, r3
    1e22:	20 64       	ori	r18, 0x40	; 64
    1e24:	32 2e       	mov	r3, r18
    1e26:	19 c0       	rjmp	.+50     	; 0x1e5a <vfprintf+0xe6>
    1e28:	36 fe       	sbrs	r3, 6
    1e2a:	06 c0       	rjmp	.+12     	; 0x1e38 <vfprintf+0xc4>
    1e2c:	8a e0       	ldi	r24, 0x0A	; 10
    1e2e:	98 9e       	mul	r9, r24
    1e30:	20 0d       	add	r18, r0
    1e32:	11 24       	eor	r1, r1
    1e34:	92 2e       	mov	r9, r18
    1e36:	11 c0       	rjmp	.+34     	; 0x1e5a <vfprintf+0xe6>
    1e38:	ea e0       	ldi	r30, 0x0A	; 10
    1e3a:	2e 9e       	mul	r2, r30
    1e3c:	20 0d       	add	r18, r0
    1e3e:	11 24       	eor	r1, r1
    1e40:	22 2e       	mov	r2, r18
    1e42:	f3 2d       	mov	r31, r3
    1e44:	f0 62       	ori	r31, 0x20	; 32
    1e46:	3f 2e       	mov	r3, r31
    1e48:	08 c0       	rjmp	.+16     	; 0x1e5a <vfprintf+0xe6>
    1e4a:	8c 36       	cpi	r24, 0x6C	; 108
    1e4c:	21 f4       	brne	.+8      	; 0x1e56 <vfprintf+0xe2>
    1e4e:	83 2d       	mov	r24, r3
    1e50:	80 68       	ori	r24, 0x80	; 128
    1e52:	38 2e       	mov	r3, r24
    1e54:	02 c0       	rjmp	.+4      	; 0x1e5a <vfprintf+0xe6>
    1e56:	88 36       	cpi	r24, 0x68	; 104
    1e58:	41 f4       	brne	.+16     	; 0x1e6a <vfprintf+0xf6>
    1e5a:	f7 01       	movw	r30, r14
    1e5c:	93 fd       	sbrc	r25, 3
    1e5e:	85 91       	lpm	r24, Z+
    1e60:	93 ff       	sbrs	r25, 3
    1e62:	81 91       	ld	r24, Z+
    1e64:	7f 01       	movw	r14, r30
    1e66:	81 11       	cpse	r24, r1
    1e68:	b3 cf       	rjmp	.-154    	; 0x1dd0 <vfprintf+0x5c>
    1e6a:	98 2f       	mov	r25, r24
    1e6c:	9f 7d       	andi	r25, 0xDF	; 223
    1e6e:	95 54       	subi	r25, 0x45	; 69
    1e70:	93 30       	cpi	r25, 0x03	; 3
    1e72:	28 f4       	brcc	.+10     	; 0x1e7e <vfprintf+0x10a>
    1e74:	0c 5f       	subi	r16, 0xFC	; 252
    1e76:	1f 4f       	sbci	r17, 0xFF	; 255
    1e78:	9f e3       	ldi	r25, 0x3F	; 63
    1e7a:	99 83       	std	Y+1, r25	; 0x01
    1e7c:	0d c0       	rjmp	.+26     	; 0x1e98 <vfprintf+0x124>
    1e7e:	83 36       	cpi	r24, 0x63	; 99
    1e80:	31 f0       	breq	.+12     	; 0x1e8e <vfprintf+0x11a>
    1e82:	83 37       	cpi	r24, 0x73	; 115
    1e84:	71 f0       	breq	.+28     	; 0x1ea2 <vfprintf+0x12e>
    1e86:	83 35       	cpi	r24, 0x53	; 83
    1e88:	09 f0       	breq	.+2      	; 0x1e8c <vfprintf+0x118>
    1e8a:	59 c0       	rjmp	.+178    	; 0x1f3e <vfprintf+0x1ca>
    1e8c:	21 c0       	rjmp	.+66     	; 0x1ed0 <vfprintf+0x15c>
    1e8e:	f8 01       	movw	r30, r16
    1e90:	80 81       	ld	r24, Z
    1e92:	89 83       	std	Y+1, r24	; 0x01
    1e94:	0e 5f       	subi	r16, 0xFE	; 254
    1e96:	1f 4f       	sbci	r17, 0xFF	; 255
    1e98:	88 24       	eor	r8, r8
    1e9a:	83 94       	inc	r8
    1e9c:	91 2c       	mov	r9, r1
    1e9e:	53 01       	movw	r10, r6
    1ea0:	13 c0       	rjmp	.+38     	; 0x1ec8 <vfprintf+0x154>
    1ea2:	28 01       	movw	r4, r16
    1ea4:	f2 e0       	ldi	r31, 0x02	; 2
    1ea6:	4f 0e       	add	r4, r31
    1ea8:	51 1c       	adc	r5, r1
    1eaa:	f8 01       	movw	r30, r16
    1eac:	a0 80       	ld	r10, Z
    1eae:	b1 80       	ldd	r11, Z+1	; 0x01
    1eb0:	36 fe       	sbrs	r3, 6
    1eb2:	03 c0       	rjmp	.+6      	; 0x1eba <vfprintf+0x146>
    1eb4:	69 2d       	mov	r22, r9
    1eb6:	70 e0       	ldi	r23, 0x00	; 0
    1eb8:	02 c0       	rjmp	.+4      	; 0x1ebe <vfprintf+0x14a>
    1eba:	6f ef       	ldi	r22, 0xFF	; 255
    1ebc:	7f ef       	ldi	r23, 0xFF	; 255
    1ebe:	c5 01       	movw	r24, r10
    1ec0:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <strnlen>
    1ec4:	4c 01       	movw	r8, r24
    1ec6:	82 01       	movw	r16, r4
    1ec8:	f3 2d       	mov	r31, r3
    1eca:	ff 77       	andi	r31, 0x7F	; 127
    1ecc:	3f 2e       	mov	r3, r31
    1ece:	16 c0       	rjmp	.+44     	; 0x1efc <vfprintf+0x188>
    1ed0:	28 01       	movw	r4, r16
    1ed2:	22 e0       	ldi	r18, 0x02	; 2
    1ed4:	42 0e       	add	r4, r18
    1ed6:	51 1c       	adc	r5, r1
    1ed8:	f8 01       	movw	r30, r16
    1eda:	a0 80       	ld	r10, Z
    1edc:	b1 80       	ldd	r11, Z+1	; 0x01
    1ede:	36 fe       	sbrs	r3, 6
    1ee0:	03 c0       	rjmp	.+6      	; 0x1ee8 <vfprintf+0x174>
    1ee2:	69 2d       	mov	r22, r9
    1ee4:	70 e0       	ldi	r23, 0x00	; 0
    1ee6:	02 c0       	rjmp	.+4      	; 0x1eec <vfprintf+0x178>
    1ee8:	6f ef       	ldi	r22, 0xFF	; 255
    1eea:	7f ef       	ldi	r23, 0xFF	; 255
    1eec:	c5 01       	movw	r24, r10
    1eee:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <strnlen_P>
    1ef2:	4c 01       	movw	r8, r24
    1ef4:	f3 2d       	mov	r31, r3
    1ef6:	f0 68       	ori	r31, 0x80	; 128
    1ef8:	3f 2e       	mov	r3, r31
    1efa:	82 01       	movw	r16, r4
    1efc:	33 fc       	sbrc	r3, 3
    1efe:	1b c0       	rjmp	.+54     	; 0x1f36 <vfprintf+0x1c2>
    1f00:	82 2d       	mov	r24, r2
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	88 16       	cp	r8, r24
    1f06:	99 06       	cpc	r9, r25
    1f08:	b0 f4       	brcc	.+44     	; 0x1f36 <vfprintf+0x1c2>
    1f0a:	b6 01       	movw	r22, r12
    1f0c:	80 e2       	ldi	r24, 0x20	; 32
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    1f14:	2a 94       	dec	r2
    1f16:	f4 cf       	rjmp	.-24     	; 0x1f00 <vfprintf+0x18c>
    1f18:	f5 01       	movw	r30, r10
    1f1a:	37 fc       	sbrc	r3, 7
    1f1c:	85 91       	lpm	r24, Z+
    1f1e:	37 fe       	sbrs	r3, 7
    1f20:	81 91       	ld	r24, Z+
    1f22:	5f 01       	movw	r10, r30
    1f24:	b6 01       	movw	r22, r12
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    1f2c:	21 10       	cpse	r2, r1
    1f2e:	2a 94       	dec	r2
    1f30:	21 e0       	ldi	r18, 0x01	; 1
    1f32:	82 1a       	sub	r8, r18
    1f34:	91 08       	sbc	r9, r1
    1f36:	81 14       	cp	r8, r1
    1f38:	91 04       	cpc	r9, r1
    1f3a:	71 f7       	brne	.-36     	; 0x1f18 <vfprintf+0x1a4>
    1f3c:	e8 c0       	rjmp	.+464    	; 0x210e <vfprintf+0x39a>
    1f3e:	84 36       	cpi	r24, 0x64	; 100
    1f40:	11 f0       	breq	.+4      	; 0x1f46 <vfprintf+0x1d2>
    1f42:	89 36       	cpi	r24, 0x69	; 105
    1f44:	41 f5       	brne	.+80     	; 0x1f96 <vfprintf+0x222>
    1f46:	f8 01       	movw	r30, r16
    1f48:	37 fe       	sbrs	r3, 7
    1f4a:	07 c0       	rjmp	.+14     	; 0x1f5a <vfprintf+0x1e6>
    1f4c:	60 81       	ld	r22, Z
    1f4e:	71 81       	ldd	r23, Z+1	; 0x01
    1f50:	82 81       	ldd	r24, Z+2	; 0x02
    1f52:	93 81       	ldd	r25, Z+3	; 0x03
    1f54:	0c 5f       	subi	r16, 0xFC	; 252
    1f56:	1f 4f       	sbci	r17, 0xFF	; 255
    1f58:	08 c0       	rjmp	.+16     	; 0x1f6a <vfprintf+0x1f6>
    1f5a:	60 81       	ld	r22, Z
    1f5c:	71 81       	ldd	r23, Z+1	; 0x01
    1f5e:	07 2e       	mov	r0, r23
    1f60:	00 0c       	add	r0, r0
    1f62:	88 0b       	sbc	r24, r24
    1f64:	99 0b       	sbc	r25, r25
    1f66:	0e 5f       	subi	r16, 0xFE	; 254
    1f68:	1f 4f       	sbci	r17, 0xFF	; 255
    1f6a:	f3 2d       	mov	r31, r3
    1f6c:	ff 76       	andi	r31, 0x6F	; 111
    1f6e:	3f 2e       	mov	r3, r31
    1f70:	97 ff       	sbrs	r25, 7
    1f72:	09 c0       	rjmp	.+18     	; 0x1f86 <vfprintf+0x212>
    1f74:	90 95       	com	r25
    1f76:	80 95       	com	r24
    1f78:	70 95       	com	r23
    1f7a:	61 95       	neg	r22
    1f7c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7e:	8f 4f       	sbci	r24, 0xFF	; 255
    1f80:	9f 4f       	sbci	r25, 0xFF	; 255
    1f82:	f0 68       	ori	r31, 0x80	; 128
    1f84:	3f 2e       	mov	r3, r31
    1f86:	2a e0       	ldi	r18, 0x0A	; 10
    1f88:	30 e0       	ldi	r19, 0x00	; 0
    1f8a:	a3 01       	movw	r20, r6
    1f8c:	0e 94 31 12 	call	0x2462	; 0x2462 <__ultoa_invert>
    1f90:	88 2e       	mov	r8, r24
    1f92:	86 18       	sub	r8, r6
    1f94:	45 c0       	rjmp	.+138    	; 0x2020 <vfprintf+0x2ac>
    1f96:	85 37       	cpi	r24, 0x75	; 117
    1f98:	31 f4       	brne	.+12     	; 0x1fa6 <vfprintf+0x232>
    1f9a:	23 2d       	mov	r18, r3
    1f9c:	2f 7e       	andi	r18, 0xEF	; 239
    1f9e:	b2 2e       	mov	r11, r18
    1fa0:	2a e0       	ldi	r18, 0x0A	; 10
    1fa2:	30 e0       	ldi	r19, 0x00	; 0
    1fa4:	25 c0       	rjmp	.+74     	; 0x1ff0 <vfprintf+0x27c>
    1fa6:	93 2d       	mov	r25, r3
    1fa8:	99 7f       	andi	r25, 0xF9	; 249
    1faa:	b9 2e       	mov	r11, r25
    1fac:	8f 36       	cpi	r24, 0x6F	; 111
    1fae:	c1 f0       	breq	.+48     	; 0x1fe0 <vfprintf+0x26c>
    1fb0:	18 f4       	brcc	.+6      	; 0x1fb8 <vfprintf+0x244>
    1fb2:	88 35       	cpi	r24, 0x58	; 88
    1fb4:	79 f0       	breq	.+30     	; 0x1fd4 <vfprintf+0x260>
    1fb6:	b5 c0       	rjmp	.+362    	; 0x2122 <vfprintf+0x3ae>
    1fb8:	80 37       	cpi	r24, 0x70	; 112
    1fba:	19 f0       	breq	.+6      	; 0x1fc2 <vfprintf+0x24e>
    1fbc:	88 37       	cpi	r24, 0x78	; 120
    1fbe:	21 f0       	breq	.+8      	; 0x1fc8 <vfprintf+0x254>
    1fc0:	b0 c0       	rjmp	.+352    	; 0x2122 <vfprintf+0x3ae>
    1fc2:	e9 2f       	mov	r30, r25
    1fc4:	e0 61       	ori	r30, 0x10	; 16
    1fc6:	be 2e       	mov	r11, r30
    1fc8:	b4 fe       	sbrs	r11, 4
    1fca:	0d c0       	rjmp	.+26     	; 0x1fe6 <vfprintf+0x272>
    1fcc:	fb 2d       	mov	r31, r11
    1fce:	f4 60       	ori	r31, 0x04	; 4
    1fd0:	bf 2e       	mov	r11, r31
    1fd2:	09 c0       	rjmp	.+18     	; 0x1fe6 <vfprintf+0x272>
    1fd4:	34 fe       	sbrs	r3, 4
    1fd6:	0a c0       	rjmp	.+20     	; 0x1fec <vfprintf+0x278>
    1fd8:	29 2f       	mov	r18, r25
    1fda:	26 60       	ori	r18, 0x06	; 6
    1fdc:	b2 2e       	mov	r11, r18
    1fde:	06 c0       	rjmp	.+12     	; 0x1fec <vfprintf+0x278>
    1fe0:	28 e0       	ldi	r18, 0x08	; 8
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	05 c0       	rjmp	.+10     	; 0x1ff0 <vfprintf+0x27c>
    1fe6:	20 e1       	ldi	r18, 0x10	; 16
    1fe8:	30 e0       	ldi	r19, 0x00	; 0
    1fea:	02 c0       	rjmp	.+4      	; 0x1ff0 <vfprintf+0x27c>
    1fec:	20 e1       	ldi	r18, 0x10	; 16
    1fee:	32 e0       	ldi	r19, 0x02	; 2
    1ff0:	f8 01       	movw	r30, r16
    1ff2:	b7 fe       	sbrs	r11, 7
    1ff4:	07 c0       	rjmp	.+14     	; 0x2004 <vfprintf+0x290>
    1ff6:	60 81       	ld	r22, Z
    1ff8:	71 81       	ldd	r23, Z+1	; 0x01
    1ffa:	82 81       	ldd	r24, Z+2	; 0x02
    1ffc:	93 81       	ldd	r25, Z+3	; 0x03
    1ffe:	0c 5f       	subi	r16, 0xFC	; 252
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	06 c0       	rjmp	.+12     	; 0x2010 <vfprintf+0x29c>
    2004:	60 81       	ld	r22, Z
    2006:	71 81       	ldd	r23, Z+1	; 0x01
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	0e 5f       	subi	r16, 0xFE	; 254
    200e:	1f 4f       	sbci	r17, 0xFF	; 255
    2010:	a3 01       	movw	r20, r6
    2012:	0e 94 31 12 	call	0x2462	; 0x2462 <__ultoa_invert>
    2016:	88 2e       	mov	r8, r24
    2018:	86 18       	sub	r8, r6
    201a:	fb 2d       	mov	r31, r11
    201c:	ff 77       	andi	r31, 0x7F	; 127
    201e:	3f 2e       	mov	r3, r31
    2020:	36 fe       	sbrs	r3, 6
    2022:	0d c0       	rjmp	.+26     	; 0x203e <vfprintf+0x2ca>
    2024:	23 2d       	mov	r18, r3
    2026:	2e 7f       	andi	r18, 0xFE	; 254
    2028:	a2 2e       	mov	r10, r18
    202a:	89 14       	cp	r8, r9
    202c:	58 f4       	brcc	.+22     	; 0x2044 <vfprintf+0x2d0>
    202e:	34 fe       	sbrs	r3, 4
    2030:	0b c0       	rjmp	.+22     	; 0x2048 <vfprintf+0x2d4>
    2032:	32 fc       	sbrc	r3, 2
    2034:	09 c0       	rjmp	.+18     	; 0x2048 <vfprintf+0x2d4>
    2036:	83 2d       	mov	r24, r3
    2038:	8e 7e       	andi	r24, 0xEE	; 238
    203a:	a8 2e       	mov	r10, r24
    203c:	05 c0       	rjmp	.+10     	; 0x2048 <vfprintf+0x2d4>
    203e:	b8 2c       	mov	r11, r8
    2040:	a3 2c       	mov	r10, r3
    2042:	03 c0       	rjmp	.+6      	; 0x204a <vfprintf+0x2d6>
    2044:	b8 2c       	mov	r11, r8
    2046:	01 c0       	rjmp	.+2      	; 0x204a <vfprintf+0x2d6>
    2048:	b9 2c       	mov	r11, r9
    204a:	a4 fe       	sbrs	r10, 4
    204c:	0f c0       	rjmp	.+30     	; 0x206c <vfprintf+0x2f8>
    204e:	fe 01       	movw	r30, r28
    2050:	e8 0d       	add	r30, r8
    2052:	f1 1d       	adc	r31, r1
    2054:	80 81       	ld	r24, Z
    2056:	80 33       	cpi	r24, 0x30	; 48
    2058:	21 f4       	brne	.+8      	; 0x2062 <vfprintf+0x2ee>
    205a:	9a 2d       	mov	r25, r10
    205c:	99 7e       	andi	r25, 0xE9	; 233
    205e:	a9 2e       	mov	r10, r25
    2060:	09 c0       	rjmp	.+18     	; 0x2074 <vfprintf+0x300>
    2062:	a2 fe       	sbrs	r10, 2
    2064:	06 c0       	rjmp	.+12     	; 0x2072 <vfprintf+0x2fe>
    2066:	b3 94       	inc	r11
    2068:	b3 94       	inc	r11
    206a:	04 c0       	rjmp	.+8      	; 0x2074 <vfprintf+0x300>
    206c:	8a 2d       	mov	r24, r10
    206e:	86 78       	andi	r24, 0x86	; 134
    2070:	09 f0       	breq	.+2      	; 0x2074 <vfprintf+0x300>
    2072:	b3 94       	inc	r11
    2074:	a3 fc       	sbrc	r10, 3
    2076:	11 c0       	rjmp	.+34     	; 0x209a <vfprintf+0x326>
    2078:	a0 fe       	sbrs	r10, 0
    207a:	06 c0       	rjmp	.+12     	; 0x2088 <vfprintf+0x314>
    207c:	b2 14       	cp	r11, r2
    207e:	88 f4       	brcc	.+34     	; 0x20a2 <vfprintf+0x32e>
    2080:	28 0c       	add	r2, r8
    2082:	92 2c       	mov	r9, r2
    2084:	9b 18       	sub	r9, r11
    2086:	0e c0       	rjmp	.+28     	; 0x20a4 <vfprintf+0x330>
    2088:	b2 14       	cp	r11, r2
    208a:	60 f4       	brcc	.+24     	; 0x20a4 <vfprintf+0x330>
    208c:	b6 01       	movw	r22, r12
    208e:	80 e2       	ldi	r24, 0x20	; 32
    2090:	90 e0       	ldi	r25, 0x00	; 0
    2092:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    2096:	b3 94       	inc	r11
    2098:	f7 cf       	rjmp	.-18     	; 0x2088 <vfprintf+0x314>
    209a:	b2 14       	cp	r11, r2
    209c:	18 f4       	brcc	.+6      	; 0x20a4 <vfprintf+0x330>
    209e:	2b 18       	sub	r2, r11
    20a0:	02 c0       	rjmp	.+4      	; 0x20a6 <vfprintf+0x332>
    20a2:	98 2c       	mov	r9, r8
    20a4:	21 2c       	mov	r2, r1
    20a6:	a4 fe       	sbrs	r10, 4
    20a8:	10 c0       	rjmp	.+32     	; 0x20ca <vfprintf+0x356>
    20aa:	b6 01       	movw	r22, r12
    20ac:	80 e3       	ldi	r24, 0x30	; 48
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    20b4:	a2 fe       	sbrs	r10, 2
    20b6:	17 c0       	rjmp	.+46     	; 0x20e6 <vfprintf+0x372>
    20b8:	a1 fc       	sbrc	r10, 1
    20ba:	03 c0       	rjmp	.+6      	; 0x20c2 <vfprintf+0x34e>
    20bc:	88 e7       	ldi	r24, 0x78	; 120
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	02 c0       	rjmp	.+4      	; 0x20c6 <vfprintf+0x352>
    20c2:	88 e5       	ldi	r24, 0x58	; 88
    20c4:	90 e0       	ldi	r25, 0x00	; 0
    20c6:	b6 01       	movw	r22, r12
    20c8:	0c c0       	rjmp	.+24     	; 0x20e2 <vfprintf+0x36e>
    20ca:	8a 2d       	mov	r24, r10
    20cc:	86 78       	andi	r24, 0x86	; 134
    20ce:	59 f0       	breq	.+22     	; 0x20e6 <vfprintf+0x372>
    20d0:	a1 fe       	sbrs	r10, 1
    20d2:	02 c0       	rjmp	.+4      	; 0x20d8 <vfprintf+0x364>
    20d4:	8b e2       	ldi	r24, 0x2B	; 43
    20d6:	01 c0       	rjmp	.+2      	; 0x20da <vfprintf+0x366>
    20d8:	80 e2       	ldi	r24, 0x20	; 32
    20da:	a7 fc       	sbrc	r10, 7
    20dc:	8d e2       	ldi	r24, 0x2D	; 45
    20de:	b6 01       	movw	r22, r12
    20e0:	90 e0       	ldi	r25, 0x00	; 0
    20e2:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    20e6:	89 14       	cp	r8, r9
    20e8:	38 f4       	brcc	.+14     	; 0x20f8 <vfprintf+0x384>
    20ea:	b6 01       	movw	r22, r12
    20ec:	80 e3       	ldi	r24, 0x30	; 48
    20ee:	90 e0       	ldi	r25, 0x00	; 0
    20f0:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    20f4:	9a 94       	dec	r9
    20f6:	f7 cf       	rjmp	.-18     	; 0x20e6 <vfprintf+0x372>
    20f8:	8a 94       	dec	r8
    20fa:	f3 01       	movw	r30, r6
    20fc:	e8 0d       	add	r30, r8
    20fe:	f1 1d       	adc	r31, r1
    2100:	80 81       	ld	r24, Z
    2102:	b6 01       	movw	r22, r12
    2104:	90 e0       	ldi	r25, 0x00	; 0
    2106:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    210a:	81 10       	cpse	r8, r1
    210c:	f5 cf       	rjmp	.-22     	; 0x20f8 <vfprintf+0x384>
    210e:	22 20       	and	r2, r2
    2110:	09 f4       	brne	.+2      	; 0x2114 <vfprintf+0x3a0>
    2112:	42 ce       	rjmp	.-892    	; 0x1d98 <vfprintf+0x24>
    2114:	b6 01       	movw	r22, r12
    2116:	80 e2       	ldi	r24, 0x20	; 32
    2118:	90 e0       	ldi	r25, 0x00	; 0
    211a:	0e 94 f5 11 	call	0x23ea	; 0x23ea <fputc>
    211e:	2a 94       	dec	r2
    2120:	f6 cf       	rjmp	.-20     	; 0x210e <vfprintf+0x39a>
    2122:	f6 01       	movw	r30, r12
    2124:	86 81       	ldd	r24, Z+6	; 0x06
    2126:	97 81       	ldd	r25, Z+7	; 0x07
    2128:	02 c0       	rjmp	.+4      	; 0x212e <vfprintf+0x3ba>
    212a:	8f ef       	ldi	r24, 0xFF	; 255
    212c:	9f ef       	ldi	r25, 0xFF	; 255
    212e:	2b 96       	adiw	r28, 0x0b	; 11
    2130:	e2 e1       	ldi	r30, 0x12	; 18
    2132:	0c 94 ab 12 	jmp	0x2556	; 0x2556 <__epilogue_restores__>

00002136 <calloc>:
    2136:	0f 93       	push	r16
    2138:	1f 93       	push	r17
    213a:	cf 93       	push	r28
    213c:	df 93       	push	r29
    213e:	86 9f       	mul	r24, r22
    2140:	80 01       	movw	r16, r0
    2142:	87 9f       	mul	r24, r23
    2144:	10 0d       	add	r17, r0
    2146:	96 9f       	mul	r25, r22
    2148:	10 0d       	add	r17, r0
    214a:	11 24       	eor	r1, r1
    214c:	c8 01       	movw	r24, r16
    214e:	0e 94 b7 10 	call	0x216e	; 0x216e <malloc>
    2152:	ec 01       	movw	r28, r24
    2154:	00 97       	sbiw	r24, 0x00	; 0
    2156:	29 f0       	breq	.+10     	; 0x2162 <calloc+0x2c>
    2158:	a8 01       	movw	r20, r16
    215a:	60 e0       	ldi	r22, 0x00	; 0
    215c:	70 e0       	ldi	r23, 0x00	; 0
    215e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <memset>
    2162:	ce 01       	movw	r24, r28
    2164:	df 91       	pop	r29
    2166:	cf 91       	pop	r28
    2168:	1f 91       	pop	r17
    216a:	0f 91       	pop	r16
    216c:	08 95       	ret

0000216e <malloc>:
    216e:	0f 93       	push	r16
    2170:	1f 93       	push	r17
    2172:	cf 93       	push	r28
    2174:	df 93       	push	r29
    2176:	82 30       	cpi	r24, 0x02	; 2
    2178:	91 05       	cpc	r25, r1
    217a:	10 f4       	brcc	.+4      	; 0x2180 <malloc+0x12>
    217c:	82 e0       	ldi	r24, 0x02	; 2
    217e:	90 e0       	ldi	r25, 0x00	; 0
    2180:	e0 91 26 03 	lds	r30, 0x0326	; 0x800326 <__flp>
    2184:	f0 91 27 03 	lds	r31, 0x0327	; 0x800327 <__flp+0x1>
    2188:	20 e0       	ldi	r18, 0x00	; 0
    218a:	30 e0       	ldi	r19, 0x00	; 0
    218c:	a0 e0       	ldi	r26, 0x00	; 0
    218e:	b0 e0       	ldi	r27, 0x00	; 0
    2190:	30 97       	sbiw	r30, 0x00	; 0
    2192:	19 f1       	breq	.+70     	; 0x21da <malloc+0x6c>
    2194:	40 81       	ld	r20, Z
    2196:	51 81       	ldd	r21, Z+1	; 0x01
    2198:	02 81       	ldd	r16, Z+2	; 0x02
    219a:	13 81       	ldd	r17, Z+3	; 0x03
    219c:	48 17       	cp	r20, r24
    219e:	59 07       	cpc	r21, r25
    21a0:	c8 f0       	brcs	.+50     	; 0x21d4 <malloc+0x66>
    21a2:	84 17       	cp	r24, r20
    21a4:	95 07       	cpc	r25, r21
    21a6:	69 f4       	brne	.+26     	; 0x21c2 <malloc+0x54>
    21a8:	10 97       	sbiw	r26, 0x00	; 0
    21aa:	31 f0       	breq	.+12     	; 0x21b8 <malloc+0x4a>
    21ac:	12 96       	adiw	r26, 0x02	; 2
    21ae:	0c 93       	st	X, r16
    21b0:	12 97       	sbiw	r26, 0x02	; 2
    21b2:	13 96       	adiw	r26, 0x03	; 3
    21b4:	1c 93       	st	X, r17
    21b6:	27 c0       	rjmp	.+78     	; 0x2206 <malloc+0x98>
    21b8:	00 93 26 03 	sts	0x0326, r16	; 0x800326 <__flp>
    21bc:	10 93 27 03 	sts	0x0327, r17	; 0x800327 <__flp+0x1>
    21c0:	22 c0       	rjmp	.+68     	; 0x2206 <malloc+0x98>
    21c2:	21 15       	cp	r18, r1
    21c4:	31 05       	cpc	r19, r1
    21c6:	19 f0       	breq	.+6      	; 0x21ce <malloc+0x60>
    21c8:	42 17       	cp	r20, r18
    21ca:	53 07       	cpc	r21, r19
    21cc:	18 f4       	brcc	.+6      	; 0x21d4 <malloc+0x66>
    21ce:	9a 01       	movw	r18, r20
    21d0:	bd 01       	movw	r22, r26
    21d2:	ef 01       	movw	r28, r30
    21d4:	df 01       	movw	r26, r30
    21d6:	f8 01       	movw	r30, r16
    21d8:	db cf       	rjmp	.-74     	; 0x2190 <malloc+0x22>
    21da:	21 15       	cp	r18, r1
    21dc:	31 05       	cpc	r19, r1
    21de:	f9 f0       	breq	.+62     	; 0x221e <malloc+0xb0>
    21e0:	28 1b       	sub	r18, r24
    21e2:	39 0b       	sbc	r19, r25
    21e4:	24 30       	cpi	r18, 0x04	; 4
    21e6:	31 05       	cpc	r19, r1
    21e8:	80 f4       	brcc	.+32     	; 0x220a <malloc+0x9c>
    21ea:	8a 81       	ldd	r24, Y+2	; 0x02
    21ec:	9b 81       	ldd	r25, Y+3	; 0x03
    21ee:	61 15       	cp	r22, r1
    21f0:	71 05       	cpc	r23, r1
    21f2:	21 f0       	breq	.+8      	; 0x21fc <malloc+0x8e>
    21f4:	fb 01       	movw	r30, r22
    21f6:	93 83       	std	Z+3, r25	; 0x03
    21f8:	82 83       	std	Z+2, r24	; 0x02
    21fa:	04 c0       	rjmp	.+8      	; 0x2204 <malloc+0x96>
    21fc:	90 93 27 03 	sts	0x0327, r25	; 0x800327 <__flp+0x1>
    2200:	80 93 26 03 	sts	0x0326, r24	; 0x800326 <__flp>
    2204:	fe 01       	movw	r30, r28
    2206:	32 96       	adiw	r30, 0x02	; 2
    2208:	44 c0       	rjmp	.+136    	; 0x2292 <malloc+0x124>
    220a:	fe 01       	movw	r30, r28
    220c:	e2 0f       	add	r30, r18
    220e:	f3 1f       	adc	r31, r19
    2210:	81 93       	st	Z+, r24
    2212:	91 93       	st	Z+, r25
    2214:	22 50       	subi	r18, 0x02	; 2
    2216:	31 09       	sbc	r19, r1
    2218:	39 83       	std	Y+1, r19	; 0x01
    221a:	28 83       	st	Y, r18
    221c:	3a c0       	rjmp	.+116    	; 0x2292 <malloc+0x124>
    221e:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <__brkval>
    2222:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <__brkval+0x1>
    2226:	23 2b       	or	r18, r19
    2228:	41 f4       	brne	.+16     	; 0x223a <malloc+0xcc>
    222a:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    222e:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    2232:	30 93 25 03 	sts	0x0325, r19	; 0x800325 <__brkval+0x1>
    2236:	20 93 24 03 	sts	0x0324, r18	; 0x800324 <__brkval>
    223a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    223e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    2242:	21 15       	cp	r18, r1
    2244:	31 05       	cpc	r19, r1
    2246:	41 f4       	brne	.+16     	; 0x2258 <malloc+0xea>
    2248:	2d b7       	in	r18, 0x3d	; 61
    224a:	3e b7       	in	r19, 0x3e	; 62
    224c:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2250:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    2254:	24 1b       	sub	r18, r20
    2256:	35 0b       	sbc	r19, r21
    2258:	e0 91 24 03 	lds	r30, 0x0324	; 0x800324 <__brkval>
    225c:	f0 91 25 03 	lds	r31, 0x0325	; 0x800325 <__brkval+0x1>
    2260:	e2 17       	cp	r30, r18
    2262:	f3 07       	cpc	r31, r19
    2264:	a0 f4       	brcc	.+40     	; 0x228e <malloc+0x120>
    2266:	2e 1b       	sub	r18, r30
    2268:	3f 0b       	sbc	r19, r31
    226a:	28 17       	cp	r18, r24
    226c:	39 07       	cpc	r19, r25
    226e:	78 f0       	brcs	.+30     	; 0x228e <malloc+0x120>
    2270:	ac 01       	movw	r20, r24
    2272:	4e 5f       	subi	r20, 0xFE	; 254
    2274:	5f 4f       	sbci	r21, 0xFF	; 255
    2276:	24 17       	cp	r18, r20
    2278:	35 07       	cpc	r19, r21
    227a:	48 f0       	brcs	.+18     	; 0x228e <malloc+0x120>
    227c:	4e 0f       	add	r20, r30
    227e:	5f 1f       	adc	r21, r31
    2280:	50 93 25 03 	sts	0x0325, r21	; 0x800325 <__brkval+0x1>
    2284:	40 93 24 03 	sts	0x0324, r20	; 0x800324 <__brkval>
    2288:	81 93       	st	Z+, r24
    228a:	91 93       	st	Z+, r25
    228c:	02 c0       	rjmp	.+4      	; 0x2292 <malloc+0x124>
    228e:	e0 e0       	ldi	r30, 0x00	; 0
    2290:	f0 e0       	ldi	r31, 0x00	; 0
    2292:	cf 01       	movw	r24, r30
    2294:	df 91       	pop	r29
    2296:	cf 91       	pop	r28
    2298:	1f 91       	pop	r17
    229a:	0f 91       	pop	r16
    229c:	08 95       	ret

0000229e <free>:
    229e:	cf 93       	push	r28
    22a0:	df 93       	push	r29
    22a2:	00 97       	sbiw	r24, 0x00	; 0
    22a4:	09 f4       	brne	.+2      	; 0x22a8 <free+0xa>
    22a6:	81 c0       	rjmp	.+258    	; 0x23aa <free+0x10c>
    22a8:	fc 01       	movw	r30, r24
    22aa:	32 97       	sbiw	r30, 0x02	; 2
    22ac:	13 82       	std	Z+3, r1	; 0x03
    22ae:	12 82       	std	Z+2, r1	; 0x02
    22b0:	a0 91 26 03 	lds	r26, 0x0326	; 0x800326 <__flp>
    22b4:	b0 91 27 03 	lds	r27, 0x0327	; 0x800327 <__flp+0x1>
    22b8:	10 97       	sbiw	r26, 0x00	; 0
    22ba:	81 f4       	brne	.+32     	; 0x22dc <free+0x3e>
    22bc:	20 81       	ld	r18, Z
    22be:	31 81       	ldd	r19, Z+1	; 0x01
    22c0:	82 0f       	add	r24, r18
    22c2:	93 1f       	adc	r25, r19
    22c4:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <__brkval>
    22c8:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <__brkval+0x1>
    22cc:	28 17       	cp	r18, r24
    22ce:	39 07       	cpc	r19, r25
    22d0:	51 f5       	brne	.+84     	; 0x2326 <free+0x88>
    22d2:	f0 93 25 03 	sts	0x0325, r31	; 0x800325 <__brkval+0x1>
    22d6:	e0 93 24 03 	sts	0x0324, r30	; 0x800324 <__brkval>
    22da:	67 c0       	rjmp	.+206    	; 0x23aa <free+0x10c>
    22dc:	ed 01       	movw	r28, r26
    22de:	20 e0       	ldi	r18, 0x00	; 0
    22e0:	30 e0       	ldi	r19, 0x00	; 0
    22e2:	ce 17       	cp	r28, r30
    22e4:	df 07       	cpc	r29, r31
    22e6:	40 f4       	brcc	.+16     	; 0x22f8 <free+0x5a>
    22e8:	4a 81       	ldd	r20, Y+2	; 0x02
    22ea:	5b 81       	ldd	r21, Y+3	; 0x03
    22ec:	9e 01       	movw	r18, r28
    22ee:	41 15       	cp	r20, r1
    22f0:	51 05       	cpc	r21, r1
    22f2:	f1 f0       	breq	.+60     	; 0x2330 <free+0x92>
    22f4:	ea 01       	movw	r28, r20
    22f6:	f5 cf       	rjmp	.-22     	; 0x22e2 <free+0x44>
    22f8:	d3 83       	std	Z+3, r29	; 0x03
    22fa:	c2 83       	std	Z+2, r28	; 0x02
    22fc:	40 81       	ld	r20, Z
    22fe:	51 81       	ldd	r21, Z+1	; 0x01
    2300:	84 0f       	add	r24, r20
    2302:	95 1f       	adc	r25, r21
    2304:	c8 17       	cp	r28, r24
    2306:	d9 07       	cpc	r29, r25
    2308:	59 f4       	brne	.+22     	; 0x2320 <free+0x82>
    230a:	88 81       	ld	r24, Y
    230c:	99 81       	ldd	r25, Y+1	; 0x01
    230e:	84 0f       	add	r24, r20
    2310:	95 1f       	adc	r25, r21
    2312:	02 96       	adiw	r24, 0x02	; 2
    2314:	91 83       	std	Z+1, r25	; 0x01
    2316:	80 83       	st	Z, r24
    2318:	8a 81       	ldd	r24, Y+2	; 0x02
    231a:	9b 81       	ldd	r25, Y+3	; 0x03
    231c:	93 83       	std	Z+3, r25	; 0x03
    231e:	82 83       	std	Z+2, r24	; 0x02
    2320:	21 15       	cp	r18, r1
    2322:	31 05       	cpc	r19, r1
    2324:	29 f4       	brne	.+10     	; 0x2330 <free+0x92>
    2326:	f0 93 27 03 	sts	0x0327, r31	; 0x800327 <__flp+0x1>
    232a:	e0 93 26 03 	sts	0x0326, r30	; 0x800326 <__flp>
    232e:	3d c0       	rjmp	.+122    	; 0x23aa <free+0x10c>
    2330:	e9 01       	movw	r28, r18
    2332:	fb 83       	std	Y+3, r31	; 0x03
    2334:	ea 83       	std	Y+2, r30	; 0x02
    2336:	49 91       	ld	r20, Y+
    2338:	59 91       	ld	r21, Y+
    233a:	c4 0f       	add	r28, r20
    233c:	d5 1f       	adc	r29, r21
    233e:	ec 17       	cp	r30, r28
    2340:	fd 07       	cpc	r31, r29
    2342:	61 f4       	brne	.+24     	; 0x235c <free+0xbe>
    2344:	80 81       	ld	r24, Z
    2346:	91 81       	ldd	r25, Z+1	; 0x01
    2348:	84 0f       	add	r24, r20
    234a:	95 1f       	adc	r25, r21
    234c:	02 96       	adiw	r24, 0x02	; 2
    234e:	e9 01       	movw	r28, r18
    2350:	99 83       	std	Y+1, r25	; 0x01
    2352:	88 83       	st	Y, r24
    2354:	82 81       	ldd	r24, Z+2	; 0x02
    2356:	93 81       	ldd	r25, Z+3	; 0x03
    2358:	9b 83       	std	Y+3, r25	; 0x03
    235a:	8a 83       	std	Y+2, r24	; 0x02
    235c:	e0 e0       	ldi	r30, 0x00	; 0
    235e:	f0 e0       	ldi	r31, 0x00	; 0
    2360:	12 96       	adiw	r26, 0x02	; 2
    2362:	8d 91       	ld	r24, X+
    2364:	9c 91       	ld	r25, X
    2366:	13 97       	sbiw	r26, 0x03	; 3
    2368:	00 97       	sbiw	r24, 0x00	; 0
    236a:	19 f0       	breq	.+6      	; 0x2372 <free+0xd4>
    236c:	fd 01       	movw	r30, r26
    236e:	dc 01       	movw	r26, r24
    2370:	f7 cf       	rjmp	.-18     	; 0x2360 <free+0xc2>
    2372:	8d 91       	ld	r24, X+
    2374:	9c 91       	ld	r25, X
    2376:	11 97       	sbiw	r26, 0x01	; 1
    2378:	9d 01       	movw	r18, r26
    237a:	2e 5f       	subi	r18, 0xFE	; 254
    237c:	3f 4f       	sbci	r19, 0xFF	; 255
    237e:	82 0f       	add	r24, r18
    2380:	93 1f       	adc	r25, r19
    2382:	20 91 24 03 	lds	r18, 0x0324	; 0x800324 <__brkval>
    2386:	30 91 25 03 	lds	r19, 0x0325	; 0x800325 <__brkval+0x1>
    238a:	28 17       	cp	r18, r24
    238c:	39 07       	cpc	r19, r25
    238e:	69 f4       	brne	.+26     	; 0x23aa <free+0x10c>
    2390:	30 97       	sbiw	r30, 0x00	; 0
    2392:	29 f4       	brne	.+10     	; 0x239e <free+0x100>
    2394:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <__flp+0x1>
    2398:	10 92 26 03 	sts	0x0326, r1	; 0x800326 <__flp>
    239c:	02 c0       	rjmp	.+4      	; 0x23a2 <free+0x104>
    239e:	13 82       	std	Z+3, r1	; 0x03
    23a0:	12 82       	std	Z+2, r1	; 0x02
    23a2:	b0 93 25 03 	sts	0x0325, r27	; 0x800325 <__brkval+0x1>
    23a6:	a0 93 24 03 	sts	0x0324, r26	; 0x800324 <__brkval>
    23aa:	df 91       	pop	r29
    23ac:	cf 91       	pop	r28
    23ae:	08 95       	ret

000023b0 <strnlen_P>:
    23b0:	fc 01       	movw	r30, r24
    23b2:	05 90       	lpm	r0, Z+
    23b4:	61 50       	subi	r22, 0x01	; 1
    23b6:	70 40       	sbci	r23, 0x00	; 0
    23b8:	01 10       	cpse	r0, r1
    23ba:	d8 f7       	brcc	.-10     	; 0x23b2 <strnlen_P+0x2>
    23bc:	80 95       	com	r24
    23be:	90 95       	com	r25
    23c0:	8e 0f       	add	r24, r30
    23c2:	9f 1f       	adc	r25, r31
    23c4:	08 95       	ret

000023c6 <memset>:
    23c6:	dc 01       	movw	r26, r24
    23c8:	01 c0       	rjmp	.+2      	; 0x23cc <memset+0x6>
    23ca:	6d 93       	st	X+, r22
    23cc:	41 50       	subi	r20, 0x01	; 1
    23ce:	50 40       	sbci	r21, 0x00	; 0
    23d0:	e0 f7       	brcc	.-8      	; 0x23ca <memset+0x4>
    23d2:	08 95       	ret

000023d4 <strnlen>:
    23d4:	fc 01       	movw	r30, r24
    23d6:	61 50       	subi	r22, 0x01	; 1
    23d8:	70 40       	sbci	r23, 0x00	; 0
    23da:	01 90       	ld	r0, Z+
    23dc:	01 10       	cpse	r0, r1
    23de:	d8 f7       	brcc	.-10     	; 0x23d6 <strnlen+0x2>
    23e0:	80 95       	com	r24
    23e2:	90 95       	com	r25
    23e4:	8e 0f       	add	r24, r30
    23e6:	9f 1f       	adc	r25, r31
    23e8:	08 95       	ret

000023ea <fputc>:
    23ea:	0f 93       	push	r16
    23ec:	1f 93       	push	r17
    23ee:	cf 93       	push	r28
    23f0:	df 93       	push	r29
    23f2:	fb 01       	movw	r30, r22
    23f4:	23 81       	ldd	r18, Z+3	; 0x03
    23f6:	21 fd       	sbrc	r18, 1
    23f8:	03 c0       	rjmp	.+6      	; 0x2400 <fputc+0x16>
    23fa:	8f ef       	ldi	r24, 0xFF	; 255
    23fc:	9f ef       	ldi	r25, 0xFF	; 255
    23fe:	2c c0       	rjmp	.+88     	; 0x2458 <fputc+0x6e>
    2400:	22 ff       	sbrs	r18, 2
    2402:	16 c0       	rjmp	.+44     	; 0x2430 <fputc+0x46>
    2404:	46 81       	ldd	r20, Z+6	; 0x06
    2406:	57 81       	ldd	r21, Z+7	; 0x07
    2408:	24 81       	ldd	r18, Z+4	; 0x04
    240a:	35 81       	ldd	r19, Z+5	; 0x05
    240c:	42 17       	cp	r20, r18
    240e:	53 07       	cpc	r21, r19
    2410:	44 f4       	brge	.+16     	; 0x2422 <fputc+0x38>
    2412:	a0 81       	ld	r26, Z
    2414:	b1 81       	ldd	r27, Z+1	; 0x01
    2416:	9d 01       	movw	r18, r26
    2418:	2f 5f       	subi	r18, 0xFF	; 255
    241a:	3f 4f       	sbci	r19, 0xFF	; 255
    241c:	31 83       	std	Z+1, r19	; 0x01
    241e:	20 83       	st	Z, r18
    2420:	8c 93       	st	X, r24
    2422:	26 81       	ldd	r18, Z+6	; 0x06
    2424:	37 81       	ldd	r19, Z+7	; 0x07
    2426:	2f 5f       	subi	r18, 0xFF	; 255
    2428:	3f 4f       	sbci	r19, 0xFF	; 255
    242a:	37 83       	std	Z+7, r19	; 0x07
    242c:	26 83       	std	Z+6, r18	; 0x06
    242e:	14 c0       	rjmp	.+40     	; 0x2458 <fputc+0x6e>
    2430:	8b 01       	movw	r16, r22
    2432:	ec 01       	movw	r28, r24
    2434:	fb 01       	movw	r30, r22
    2436:	00 84       	ldd	r0, Z+8	; 0x08
    2438:	f1 85       	ldd	r31, Z+9	; 0x09
    243a:	e0 2d       	mov	r30, r0
    243c:	09 95       	icall
    243e:	89 2b       	or	r24, r25
    2440:	e1 f6       	brne	.-72     	; 0x23fa <fputc+0x10>
    2442:	d8 01       	movw	r26, r16
    2444:	16 96       	adiw	r26, 0x06	; 6
    2446:	8d 91       	ld	r24, X+
    2448:	9c 91       	ld	r25, X
    244a:	17 97       	sbiw	r26, 0x07	; 7
    244c:	01 96       	adiw	r24, 0x01	; 1
    244e:	17 96       	adiw	r26, 0x07	; 7
    2450:	9c 93       	st	X, r25
    2452:	8e 93       	st	-X, r24
    2454:	16 97       	sbiw	r26, 0x06	; 6
    2456:	ce 01       	movw	r24, r28
    2458:	df 91       	pop	r29
    245a:	cf 91       	pop	r28
    245c:	1f 91       	pop	r17
    245e:	0f 91       	pop	r16
    2460:	08 95       	ret

00002462 <__ultoa_invert>:
    2462:	fa 01       	movw	r30, r20
    2464:	aa 27       	eor	r26, r26
    2466:	28 30       	cpi	r18, 0x08	; 8
    2468:	51 f1       	breq	.+84     	; 0x24be <__ultoa_invert+0x5c>
    246a:	20 31       	cpi	r18, 0x10	; 16
    246c:	81 f1       	breq	.+96     	; 0x24ce <__ultoa_invert+0x6c>
    246e:	e8 94       	clt
    2470:	6f 93       	push	r22
    2472:	6e 7f       	andi	r22, 0xFE	; 254
    2474:	6e 5f       	subi	r22, 0xFE	; 254
    2476:	7f 4f       	sbci	r23, 0xFF	; 255
    2478:	8f 4f       	sbci	r24, 0xFF	; 255
    247a:	9f 4f       	sbci	r25, 0xFF	; 255
    247c:	af 4f       	sbci	r26, 0xFF	; 255
    247e:	b1 e0       	ldi	r27, 0x01	; 1
    2480:	3e d0       	rcall	.+124    	; 0x24fe <__ultoa_invert+0x9c>
    2482:	b4 e0       	ldi	r27, 0x04	; 4
    2484:	3c d0       	rcall	.+120    	; 0x24fe <__ultoa_invert+0x9c>
    2486:	67 0f       	add	r22, r23
    2488:	78 1f       	adc	r23, r24
    248a:	89 1f       	adc	r24, r25
    248c:	9a 1f       	adc	r25, r26
    248e:	a1 1d       	adc	r26, r1
    2490:	68 0f       	add	r22, r24
    2492:	79 1f       	adc	r23, r25
    2494:	8a 1f       	adc	r24, r26
    2496:	91 1d       	adc	r25, r1
    2498:	a1 1d       	adc	r26, r1
    249a:	6a 0f       	add	r22, r26
    249c:	71 1d       	adc	r23, r1
    249e:	81 1d       	adc	r24, r1
    24a0:	91 1d       	adc	r25, r1
    24a2:	a1 1d       	adc	r26, r1
    24a4:	20 d0       	rcall	.+64     	; 0x24e6 <__ultoa_invert+0x84>
    24a6:	09 f4       	brne	.+2      	; 0x24aa <__ultoa_invert+0x48>
    24a8:	68 94       	set
    24aa:	3f 91       	pop	r19
    24ac:	2a e0       	ldi	r18, 0x0A	; 10
    24ae:	26 9f       	mul	r18, r22
    24b0:	11 24       	eor	r1, r1
    24b2:	30 19       	sub	r19, r0
    24b4:	30 5d       	subi	r19, 0xD0	; 208
    24b6:	31 93       	st	Z+, r19
    24b8:	de f6       	brtc	.-74     	; 0x2470 <__ultoa_invert+0xe>
    24ba:	cf 01       	movw	r24, r30
    24bc:	08 95       	ret
    24be:	46 2f       	mov	r20, r22
    24c0:	47 70       	andi	r20, 0x07	; 7
    24c2:	40 5d       	subi	r20, 0xD0	; 208
    24c4:	41 93       	st	Z+, r20
    24c6:	b3 e0       	ldi	r27, 0x03	; 3
    24c8:	0f d0       	rcall	.+30     	; 0x24e8 <__ultoa_invert+0x86>
    24ca:	c9 f7       	brne	.-14     	; 0x24be <__ultoa_invert+0x5c>
    24cc:	f6 cf       	rjmp	.-20     	; 0x24ba <__ultoa_invert+0x58>
    24ce:	46 2f       	mov	r20, r22
    24d0:	4f 70       	andi	r20, 0x0F	; 15
    24d2:	40 5d       	subi	r20, 0xD0	; 208
    24d4:	4a 33       	cpi	r20, 0x3A	; 58
    24d6:	18 f0       	brcs	.+6      	; 0x24de <__ultoa_invert+0x7c>
    24d8:	49 5d       	subi	r20, 0xD9	; 217
    24da:	31 fd       	sbrc	r19, 1
    24dc:	40 52       	subi	r20, 0x20	; 32
    24de:	41 93       	st	Z+, r20
    24e0:	02 d0       	rcall	.+4      	; 0x24e6 <__ultoa_invert+0x84>
    24e2:	a9 f7       	brne	.-22     	; 0x24ce <__ultoa_invert+0x6c>
    24e4:	ea cf       	rjmp	.-44     	; 0x24ba <__ultoa_invert+0x58>
    24e6:	b4 e0       	ldi	r27, 0x04	; 4
    24e8:	a6 95       	lsr	r26
    24ea:	97 95       	ror	r25
    24ec:	87 95       	ror	r24
    24ee:	77 95       	ror	r23
    24f0:	67 95       	ror	r22
    24f2:	ba 95       	dec	r27
    24f4:	c9 f7       	brne	.-14     	; 0x24e8 <__ultoa_invert+0x86>
    24f6:	00 97       	sbiw	r24, 0x00	; 0
    24f8:	61 05       	cpc	r22, r1
    24fa:	71 05       	cpc	r23, r1
    24fc:	08 95       	ret
    24fe:	9b 01       	movw	r18, r22
    2500:	ac 01       	movw	r20, r24
    2502:	0a 2e       	mov	r0, r26
    2504:	06 94       	lsr	r0
    2506:	57 95       	ror	r21
    2508:	47 95       	ror	r20
    250a:	37 95       	ror	r19
    250c:	27 95       	ror	r18
    250e:	ba 95       	dec	r27
    2510:	c9 f7       	brne	.-14     	; 0x2504 <__ultoa_invert+0xa2>
    2512:	62 0f       	add	r22, r18
    2514:	73 1f       	adc	r23, r19
    2516:	84 1f       	adc	r24, r20
    2518:	95 1f       	adc	r25, r21
    251a:	a0 1d       	adc	r26, r0
    251c:	08 95       	ret

0000251e <__prologue_saves__>:
    251e:	2f 92       	push	r2
    2520:	3f 92       	push	r3
    2522:	4f 92       	push	r4
    2524:	5f 92       	push	r5
    2526:	6f 92       	push	r6
    2528:	7f 92       	push	r7
    252a:	8f 92       	push	r8
    252c:	9f 92       	push	r9
    252e:	af 92       	push	r10
    2530:	bf 92       	push	r11
    2532:	cf 92       	push	r12
    2534:	df 92       	push	r13
    2536:	ef 92       	push	r14
    2538:	ff 92       	push	r15
    253a:	0f 93       	push	r16
    253c:	1f 93       	push	r17
    253e:	cf 93       	push	r28
    2540:	df 93       	push	r29
    2542:	cd b7       	in	r28, 0x3d	; 61
    2544:	de b7       	in	r29, 0x3e	; 62
    2546:	ca 1b       	sub	r28, r26
    2548:	db 0b       	sbc	r29, r27
    254a:	0f b6       	in	r0, 0x3f	; 63
    254c:	f8 94       	cli
    254e:	de bf       	out	0x3e, r29	; 62
    2550:	0f be       	out	0x3f, r0	; 63
    2552:	cd bf       	out	0x3d, r28	; 61
    2554:	09 94       	ijmp

00002556 <__epilogue_restores__>:
    2556:	2a 88       	ldd	r2, Y+18	; 0x12
    2558:	39 88       	ldd	r3, Y+17	; 0x11
    255a:	48 88       	ldd	r4, Y+16	; 0x10
    255c:	5f 84       	ldd	r5, Y+15	; 0x0f
    255e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2560:	7d 84       	ldd	r7, Y+13	; 0x0d
    2562:	8c 84       	ldd	r8, Y+12	; 0x0c
    2564:	9b 84       	ldd	r9, Y+11	; 0x0b
    2566:	aa 84       	ldd	r10, Y+10	; 0x0a
    2568:	b9 84       	ldd	r11, Y+9	; 0x09
    256a:	c8 84       	ldd	r12, Y+8	; 0x08
    256c:	df 80       	ldd	r13, Y+7	; 0x07
    256e:	ee 80       	ldd	r14, Y+6	; 0x06
    2570:	fd 80       	ldd	r15, Y+5	; 0x05
    2572:	0c 81       	ldd	r16, Y+4	; 0x04
    2574:	1b 81       	ldd	r17, Y+3	; 0x03
    2576:	aa 81       	ldd	r26, Y+2	; 0x02
    2578:	b9 81       	ldd	r27, Y+1	; 0x01
    257a:	ce 0f       	add	r28, r30
    257c:	d1 1d       	adc	r29, r1
    257e:	0f b6       	in	r0, 0x3f	; 63
    2580:	f8 94       	cli
    2582:	de bf       	out	0x3e, r29	; 62
    2584:	0f be       	out	0x3f, r0	; 63
    2586:	cd bf       	out	0x3d, r28	; 61
    2588:	ed 01       	movw	r28, r26
    258a:	08 95       	ret

0000258c <_exit>:
    258c:	f8 94       	cli

0000258e <__stop_program>:
    258e:	ff cf       	rjmp	.-2      	; 0x258e <__stop_program>
