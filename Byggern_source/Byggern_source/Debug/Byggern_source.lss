
Byggern_source.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001b4  00800100  000027c8  0000285c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027c8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000058  008002b4  008002b4  00002a10  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a10  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002a6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000280  00000000  00000000  00002aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002f48  00000000  00000000  00002d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001331  00000000  00000000  00005c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001c40  00000000  00000000  00006fa1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006f0  00000000  00000000  00008be4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ed  00000000  00000000  000092d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001507  00000000  00000000  00009cc1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  0000b1c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 d0 01 	jmp	0x3a0	; 0x3a0 <__ctors_end>
       4:	0c 94 1c 05 	jmp	0xa38	; 0xa38 <__vector_1>
       8:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
       c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      10:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      14:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      18:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      1c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      20:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      24:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      28:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      2c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      30:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      34:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      38:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      3c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__vector_15>
      40:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      44:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      48:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      4c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      50:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      54:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      58:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      5c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      60:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      64:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      68:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      6c:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__bad_interrupt>
      70:	41 09       	sbc	r20, r1
      72:	48 09       	sbc	r20, r8
      74:	4f 09       	sbc	r20, r15
      76:	56 09       	sbc	r21, r6
      78:	5d 09       	sbc	r21, r13
      7a:	64 09       	sbc	r22, r4
      7c:	6b 09       	sbc	r22, r11
      7e:	47 0a       	sbc	r4, r23
      80:	4e 0a       	sbc	r4, r30
      82:	55 0a       	sbc	r5, r21
      84:	5c 0a       	sbc	r5, r28
      86:	63 0a       	sbc	r6, r19
      88:	6a 0a       	sbc	r6, r26
      8a:	71 0a       	sbc	r7, r17
      8c:	47 0b       	sbc	r20, r23
      8e:	4e 0b       	sbc	r20, r30
      90:	55 0b       	sbc	r21, r21
      92:	5c 0b       	sbc	r21, r28
      94:	63 0b       	sbc	r22, r19
      96:	6a 0b       	sbc	r22, r26
      98:	71 0b       	sbc	r23, r17
      9a:	5d 0c       	add	r5, r13
      9c:	80 0c       	add	r8, r0
      9e:	98 0c       	add	r9, r8
      a0:	af 0c       	add	r10, r15
      a2:	c6 0c       	add	r12, r6
      a4:	cd 0c       	add	r12, r13
      a6:	d4 0c       	add	r13, r4

000000a8 <__trampolines_end>:
	...
      b0:	00 06       	cpc	r0, r16
      b2:	5f 5f       	subi	r21, 0xFF	; 255
      b4:	06 00       	.word	0x0006	; ????
      b6:	00 00       	nop
      b8:	00 07       	cpc	r16, r16
      ba:	07 00       	.word	0x0007	; ????
      bc:	07 07       	cpc	r16, r23
      be:	00 00       	nop
      c0:	14 7f       	andi	r17, 0xF4	; 244
      c2:	7f 14       	cp	r7, r15
      c4:	7f 7f       	andi	r23, 0xFF	; 255
      c6:	14 00       	.word	0x0014	; ????
      c8:	24 2e       	mov	r2, r20
      ca:	6b 6b       	ori	r22, 0xBB	; 187
      cc:	3a 12       	cpse	r3, r26
      ce:	00 00       	nop
      d0:	46 66       	ori	r20, 0x66	; 102
      d2:	30 18       	sub	r3, r0
      d4:	0c 66       	ori	r16, 0x6C	; 108
      d6:	62 00       	.word	0x0062	; ????
      d8:	30 7a       	andi	r19, 0xA0	; 160
      da:	4f 5d       	subi	r20, 0xDF	; 223
      dc:	37 7a       	andi	r19, 0xA7	; 167
      de:	48 00       	.word	0x0048	; ????
      e0:	04 07       	cpc	r16, r20
      e2:	03 00       	.word	0x0003	; ????
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	00 1c       	adc	r0, r0
      ea:	3e 63       	ori	r19, 0x3E	; 62
      ec:	41 00       	.word	0x0041	; ????
      ee:	00 00       	nop
      f0:	00 41       	sbci	r16, 0x10	; 16
      f2:	63 3e       	cpi	r22, 0xE3	; 227
      f4:	1c 00       	.word	0x001c	; ????
      f6:	00 00       	nop
      f8:	08 2a       	or	r0, r24
      fa:	3e 1c       	adc	r3, r14
      fc:	1c 3e       	cpi	r17, 0xEC	; 236
      fe:	2a 08       	sbc	r2, r10
     100:	08 08       	sbc	r0, r8
     102:	3e 3e       	cpi	r19, 0xEE	; 238
     104:	08 08       	sbc	r0, r8
     106:	00 00       	nop
     108:	00 a0       	ldd	r0, Z+32	; 0x20
     10a:	e0 60       	ori	r30, 0x00	; 0
     10c:	00 00       	nop
     10e:	00 00       	nop
     110:	08 08       	sbc	r0, r8
     112:	08 08       	sbc	r0, r8
     114:	08 08       	sbc	r0, r8
     116:	00 00       	nop
     118:	00 00       	nop
     11a:	60 60       	ori	r22, 0x00	; 0
     11c:	00 00       	nop
     11e:	00 00       	nop
     120:	60 30       	cpi	r22, 0x00	; 0
     122:	18 0c       	add	r1, r8
     124:	06 03       	mulsu	r16, r22
     126:	01 00       	.word	0x0001	; ????
     128:	3e 7f       	andi	r19, 0xFE	; 254
     12a:	59 4d       	sbci	r21, 0xD9	; 217
     12c:	7f 3e       	cpi	r23, 0xEF	; 239
     12e:	00 00       	nop
     130:	42 42       	sbci	r20, 0x22	; 34
     132:	7f 7f       	andi	r23, 0xFF	; 255
     134:	40 40       	sbci	r20, 0x00	; 0
     136:	00 00       	nop
     138:	62 73       	andi	r22, 0x32	; 50
     13a:	59 49       	sbci	r21, 0x99	; 153
     13c:	6f 66       	ori	r22, 0x6F	; 111
     13e:	00 00       	nop
     140:	22 63       	ori	r18, 0x32	; 50
     142:	49 49       	sbci	r20, 0x99	; 153
     144:	7f 36       	cpi	r23, 0x6F	; 111
     146:	00 00       	nop
     148:	18 1c       	adc	r1, r8
     14a:	16 13       	cpse	r17, r22
     14c:	7f 7f       	andi	r23, 0xFF	; 255
     14e:	10 00       	.word	0x0010	; ????
     150:	27 67       	ori	r18, 0x77	; 119
     152:	45 45       	sbci	r20, 0x55	; 85
     154:	7d 39       	cpi	r23, 0x9D	; 157
     156:	00 00       	nop
     158:	3c 7e       	andi	r19, 0xEC	; 236
     15a:	4b 49       	sbci	r20, 0x9B	; 155
     15c:	79 30       	cpi	r23, 0x09	; 9
     15e:	00 00       	nop
     160:	03 63       	ori	r16, 0x33	; 51
     162:	71 19       	sub	r23, r1
     164:	0f 07       	cpc	r16, r31
     166:	00 00       	nop
     168:	36 7f       	andi	r19, 0xF6	; 246
     16a:	49 49       	sbci	r20, 0x99	; 153
     16c:	7f 36       	cpi	r23, 0x6F	; 111
     16e:	00 00       	nop
     170:	06 4f       	sbci	r16, 0xF6	; 246
     172:	49 69       	ori	r20, 0x99	; 153
     174:	3f 1e       	adc	r3, r31
     176:	00 00       	nop
     178:	00 00       	nop
     17a:	6c 6c       	ori	r22, 0xCC	; 204
     17c:	00 00       	nop
     17e:	00 00       	nop
     180:	00 a0       	ldd	r0, Z+32	; 0x20
     182:	ec 6c       	ori	r30, 0xCC	; 204
     184:	00 00       	nop
     186:	00 00       	nop
     188:	08 1c       	adc	r0, r8
     18a:	36 63       	ori	r19, 0x36	; 54
     18c:	41 00       	.word	0x0041	; ????
     18e:	00 00       	nop
     190:	14 14       	cp	r1, r4
     192:	14 14       	cp	r1, r4
     194:	14 14       	cp	r1, r4
     196:	00 00       	nop
     198:	00 41       	sbci	r16, 0x10	; 16
     19a:	63 36       	cpi	r22, 0x63	; 99
     19c:	1c 08       	sbc	r1, r12
     19e:	00 00       	nop
     1a0:	02 03       	mulsu	r16, r18
     1a2:	51 59       	subi	r21, 0x91	; 145
     1a4:	0f 06       	cpc	r0, r31
     1a6:	00 00       	nop
     1a8:	3e 7f       	andi	r19, 0xFE	; 254
     1aa:	41 5d       	subi	r20, 0xD1	; 209
     1ac:	5d 1f       	adc	r21, r29
     1ae:	1e 00       	.word	0x001e	; ????
     1b0:	7c 7e       	andi	r23, 0xEC	; 236
     1b2:	13 13       	cpse	r17, r19
     1b4:	7e 7c       	andi	r23, 0xCE	; 206
     1b6:	00 00       	nop
     1b8:	41 7f       	andi	r20, 0xF1	; 241
     1ba:	7f 49       	sbci	r23, 0x9F	; 159
     1bc:	49 7f       	andi	r20, 0xF9	; 249
     1be:	36 00       	.word	0x0036	; ????
     1c0:	1c 3e       	cpi	r17, 0xEC	; 236
     1c2:	63 41       	sbci	r22, 0x13	; 19
     1c4:	41 63       	ori	r20, 0x31	; 49
     1c6:	22 00       	.word	0x0022	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 41       	sbci	r23, 0x1F	; 31
     1cc:	63 7f       	andi	r22, 0xF3	; 243
     1ce:	1c 00       	.word	0x001c	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 49       	sbci	r23, 0x9F	; 159
     1d4:	5d 41       	sbci	r21, 0x1D	; 29
     1d6:	63 00       	.word	0x0063	; ????
     1d8:	41 7f       	andi	r20, 0xF1	; 241
     1da:	7f 49       	sbci	r23, 0x9F	; 159
     1dc:	1d 01       	movw	r2, r26
     1de:	03 00       	.word	0x0003	; ????
     1e0:	1c 3e       	cpi	r17, 0xEC	; 236
     1e2:	63 41       	sbci	r22, 0x13	; 19
     1e4:	51 73       	andi	r21, 0x31	; 49
     1e6:	72 00       	.word	0x0072	; ????
     1e8:	7f 7f       	andi	r23, 0xFF	; 255
     1ea:	08 08       	sbc	r0, r8
     1ec:	7f 7f       	andi	r23, 0xFF	; 255
     1ee:	00 00       	nop
     1f0:	00 41       	sbci	r16, 0x10	; 16
     1f2:	7f 7f       	andi	r23, 0xFF	; 255
     1f4:	41 00       	.word	0x0041	; ????
     1f6:	00 00       	nop
     1f8:	30 70       	andi	r19, 0x00	; 0
     1fa:	40 41       	sbci	r20, 0x10	; 16
     1fc:	7f 3f       	cpi	r23, 0xFF	; 255
     1fe:	01 00       	.word	0x0001	; ????
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 08       	sbc	r7, r15
     204:	1c 77       	andi	r17, 0x7C	; 124
     206:	63 00       	.word	0x0063	; ????
     208:	41 7f       	andi	r20, 0xF1	; 241
     20a:	7f 41       	sbci	r23, 0x1F	; 31
     20c:	40 60       	ori	r20, 0x00	; 0
     20e:	70 00       	.word	0x0070	; ????
     210:	7f 7f       	andi	r23, 0xFF	; 255
     212:	06 0c       	add	r0, r6
     214:	06 7f       	andi	r16, 0xF6	; 246
     216:	7f 00       	.word	0x007f	; ????
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	06 0c       	add	r0, r6
     21c:	18 7f       	andi	r17, 0xF8	; 248
     21e:	7f 00       	.word	0x007f	; ????
     220:	1c 3e       	cpi	r17, 0xEC	; 236
     222:	63 41       	sbci	r22, 0x13	; 19
     224:	63 3e       	cpi	r22, 0xE3	; 227
     226:	1c 00       	.word	0x001c	; ????
     228:	41 7f       	andi	r20, 0xF1	; 241
     22a:	7f 49       	sbci	r23, 0x9F	; 159
     22c:	09 0f       	add	r16, r25
     22e:	06 00       	.word	0x0006	; ????
     230:	1e 3f       	cpi	r17, 0xFE	; 254
     232:	21 71       	andi	r18, 0x11	; 17
     234:	7f 5e       	subi	r23, 0xEF	; 239
     236:	00 00       	nop
     238:	41 7f       	andi	r20, 0xF1	; 241
     23a:	7f 19       	sub	r23, r15
     23c:	39 6f       	ori	r19, 0xF9	; 249
     23e:	46 00       	.word	0x0046	; ????
     240:	26 67       	ori	r18, 0x76	; 118
     242:	4d 59       	subi	r20, 0x9D	; 157
     244:	7b 32       	cpi	r23, 0x2B	; 43
     246:	00 00       	nop
     248:	03 41       	sbci	r16, 0x13	; 19
     24a:	7f 7f       	andi	r23, 0xFF	; 255
     24c:	41 03       	mulsu	r20, r17
     24e:	00 00       	nop
     250:	7f 7f       	andi	r23, 0xFF	; 255
     252:	40 40       	sbci	r20, 0x00	; 0
     254:	7f 7f       	andi	r23, 0xFF	; 255
     256:	00 00       	nop
     258:	1f 3f       	cpi	r17, 0xFF	; 255
     25a:	60 60       	ori	r22, 0x00	; 0
     25c:	3f 1f       	adc	r19, r31
     25e:	00 00       	nop
     260:	7f 7f       	andi	r23, 0xFF	; 255
     262:	30 18       	sub	r3, r0
     264:	30 7f       	andi	r19, 0xF0	; 240
     266:	7f 00       	.word	0x007f	; ????
     268:	63 77       	andi	r22, 0x73	; 115
     26a:	1c 08       	sbc	r1, r12
     26c:	1c 77       	andi	r17, 0x7C	; 124
     26e:	63 00       	.word	0x0063	; ????
     270:	07 4f       	sbci	r16, 0xF7	; 247
     272:	78 78       	andi	r23, 0x88	; 136
     274:	4f 07       	cpc	r20, r31
     276:	00 00       	nop
     278:	67 73       	andi	r22, 0x37	; 55
     27a:	59 4d       	sbci	r21, 0xD9	; 217
     27c:	47 63       	ori	r20, 0x37	; 55
     27e:	71 00       	.word	0x0071	; ????
     280:	00 7f       	andi	r16, 0xF0	; 240
     282:	7f 41       	sbci	r23, 0x1F	; 31
     284:	41 00       	.word	0x0041	; ????
     286:	00 00       	nop
     288:	01 03       	mulsu	r16, r17
     28a:	06 0c       	add	r0, r6
     28c:	18 30       	cpi	r17, 0x08	; 8
     28e:	60 00       	.word	0x0060	; ????
     290:	00 41       	sbci	r16, 0x10	; 16
     292:	41 7f       	andi	r20, 0xF1	; 241
     294:	7f 00       	.word	0x007f	; ????
     296:	00 00       	nop
     298:	08 0c       	add	r0, r8
     29a:	06 03       	mulsu	r16, r22
     29c:	06 0c       	add	r0, r6
     29e:	08 00       	.word	0x0008	; ????
     2a0:	80 80       	ld	r8, Z
     2a2:	80 80       	ld	r8, Z
     2a4:	80 80       	ld	r8, Z
     2a6:	80 80       	ld	r8, Z
     2a8:	00 00       	nop
     2aa:	03 07       	cpc	r16, r19
     2ac:	04 00       	.word	0x0004	; ????
     2ae:	00 00       	nop
     2b0:	20 74       	andi	r18, 0x40	; 64
     2b2:	54 54       	subi	r21, 0x44	; 68
     2b4:	3c 78       	andi	r19, 0x8C	; 140
     2b6:	40 00       	.word	0x0040	; ????
     2b8:	41 3f       	cpi	r20, 0xF1	; 241
     2ba:	7f 44       	sbci	r23, 0x4F	; 79
     2bc:	44 7c       	andi	r20, 0xC4	; 196
     2be:	38 00       	.word	0x0038	; ????
     2c0:	38 7c       	andi	r19, 0xC8	; 200
     2c2:	44 44       	sbci	r20, 0x44	; 68
     2c4:	6c 28       	or	r6, r12
     2c6:	00 00       	nop
     2c8:	30 78       	andi	r19, 0x80	; 128
     2ca:	48 49       	sbci	r20, 0x98	; 152
     2cc:	3f 7f       	andi	r19, 0xFF	; 255
     2ce:	40 00       	.word	0x0040	; ????
     2d0:	38 7c       	andi	r19, 0xC8	; 200
     2d2:	54 54       	subi	r21, 0x44	; 68
     2d4:	5c 18       	sub	r5, r12
     2d6:	00 00       	nop
     2d8:	48 7e       	andi	r20, 0xE8	; 232
     2da:	7f 49       	sbci	r23, 0x9F	; 159
     2dc:	03 02       	muls	r16, r19
     2de:	00 00       	nop
     2e0:	98 bc       	out	0x28, r9	; 40
     2e2:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2e4:	f8 7c       	andi	r31, 0xC8	; 200
     2e6:	04 00       	.word	0x0004	; ????
     2e8:	41 7f       	andi	r20, 0xF1	; 241
     2ea:	7f 08       	sbc	r7, r15
     2ec:	04 7c       	andi	r16, 0xC4	; 196
     2ee:	78 00       	.word	0x0078	; ????
     2f0:	00 44       	sbci	r16, 0x40	; 64
     2f2:	7d 7d       	andi	r23, 0xDD	; 221
     2f4:	40 00       	.word	0x0040	; ????
     2f6:	00 00       	nop
     2f8:	40 c4       	rjmp	.+2176   	; 0xb7a <CAN_module_deactivate_cs+0x4>
     2fa:	84 fd       	sbrc	r24, 4
     2fc:	7d 00       	.word	0x007d	; ????
     2fe:	00 00       	nop
     300:	41 7f       	andi	r20, 0xF1	; 241
     302:	7f 10       	cpse	r7, r15
     304:	38 6c       	ori	r19, 0xC8	; 200
     306:	44 00       	.word	0x0044	; ????
     308:	00 41       	sbci	r16, 0x10	; 16
     30a:	7f 7f       	andi	r23, 0xFF	; 255
     30c:	40 00       	.word	0x0040	; ????
     30e:	00 00       	nop
     310:	7c 7c       	andi	r23, 0xCC	; 204
     312:	0c 18       	sub	r0, r12
     314:	0c 7c       	andi	r16, 0xCC	; 204
     316:	78 00       	.word	0x0078	; ????
     318:	7c 7c       	andi	r23, 0xCC	; 204
     31a:	04 04       	cpc	r0, r4
     31c:	7c 78       	andi	r23, 0x8C	; 140
     31e:	00 00       	nop
     320:	38 7c       	andi	r19, 0xC8	; 200
     322:	44 44       	sbci	r20, 0x44	; 68
     324:	7c 38       	cpi	r23, 0x8C	; 140
     326:	00 00       	nop
     328:	84 fc       	sbrc	r8, 4
     32a:	f8 a4       	ldd	r15, Y+40	; 0x28
     32c:	24 3c       	cpi	r18, 0xC4	; 196
     32e:	18 00       	.word	0x0018	; ????
     330:	18 3c       	cpi	r17, 0xC8	; 200
     332:	24 a4       	ldd	r2, Z+44	; 0x2c
     334:	f8 fc       	.word	0xfcf8	; ????
     336:	84 00       	.word	0x0084	; ????
     338:	44 7c       	andi	r20, 0xC4	; 196
     33a:	78 44       	sbci	r23, 0x48	; 72
     33c:	1c 18       	sub	r1, r12
     33e:	00 00       	nop
     340:	48 5c       	subi	r20, 0xC8	; 200
     342:	54 54       	subi	r21, 0x44	; 68
     344:	74 24       	eor	r7, r4
     346:	00 00       	nop
     348:	00 04       	cpc	r0, r0
     34a:	3e 7f       	andi	r19, 0xFE	; 254
     34c:	44 24       	eor	r4, r4
     34e:	00 00       	nop
     350:	3c 7c       	andi	r19, 0xCC	; 204
     352:	40 40       	sbci	r20, 0x00	; 0
     354:	3c 7c       	andi	r19, 0xCC	; 204
     356:	40 00       	.word	0x0040	; ????
     358:	1c 3c       	cpi	r17, 0xCC	; 204
     35a:	60 60       	ori	r22, 0x00	; 0
     35c:	3c 1c       	adc	r3, r12
     35e:	00 00       	nop
     360:	3c 7c       	andi	r19, 0xCC	; 204
     362:	60 30       	cpi	r22, 0x00	; 0
     364:	60 7c       	andi	r22, 0xC0	; 192
     366:	3c 00       	.word	0x003c	; ????
     368:	44 6c       	ori	r20, 0xC4	; 196
     36a:	38 10       	cpse	r3, r8
     36c:	38 6c       	ori	r19, 0xC8	; 200
     36e:	44 00       	.word	0x0044	; ????
     370:	9c bc       	out	0x2c, r9	; 44
     372:	a0 a0       	ldd	r10, Z+32	; 0x20
     374:	fc 7c       	andi	r31, 0xCC	; 204
     376:	00 00       	nop
     378:	4c 64       	ori	r20, 0x4C	; 76
     37a:	74 5c       	subi	r23, 0xC4	; 196
     37c:	4c 64       	ori	r20, 0x4C	; 76
     37e:	00 00       	nop
     380:	08 08       	sbc	r0, r8
     382:	3e 77       	andi	r19, 0x7E	; 126
     384:	41 41       	sbci	r20, 0x11	; 17
     386:	00 00       	nop
     388:	00 00       	nop
     38a:	00 77       	andi	r16, 0x70	; 112
     38c:	77 00       	.word	0x0077	; ????
     38e:	00 00       	nop
     390:	41 41       	sbci	r20, 0x11	; 17
     392:	77 3e       	cpi	r23, 0xE7	; 231
     394:	08 08       	sbc	r0, r8
     396:	00 00       	nop
     398:	02 03       	mulsu	r16, r18
     39a:	01 03       	mulsu	r16, r17
     39c:	02 03       	mulsu	r16, r18
     39e:	01 00       	.word	0x0001	; ????

000003a0 <__ctors_end>:
     3a0:	11 24       	eor	r1, r1
     3a2:	1f be       	out	0x3f, r1	; 63
     3a4:	cf ef       	ldi	r28, 0xFF	; 255
     3a6:	d4 e0       	ldi	r29, 0x04	; 4
     3a8:	de bf       	out	0x3e, r29	; 62
     3aa:	cd bf       	out	0x3d, r28	; 61

000003ac <__do_copy_data>:
     3ac:	12 e0       	ldi	r17, 0x02	; 2
     3ae:	a0 e0       	ldi	r26, 0x00	; 0
     3b0:	b1 e0       	ldi	r27, 0x01	; 1
     3b2:	e8 ec       	ldi	r30, 0xC8	; 200
     3b4:	f7 e2       	ldi	r31, 0x27	; 39
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <__do_copy_data+0x10>
     3b8:	05 90       	lpm	r0, Z+
     3ba:	0d 92       	st	X+, r0
     3bc:	a4 3b       	cpi	r26, 0xB4	; 180
     3be:	b1 07       	cpc	r27, r17
     3c0:	d9 f7       	brne	.-10     	; 0x3b8 <__do_copy_data+0xc>

000003c2 <__do_clear_bss>:
     3c2:	23 e0       	ldi	r18, 0x03	; 3
     3c4:	a4 eb       	ldi	r26, 0xB4	; 180
     3c6:	b2 e0       	ldi	r27, 0x02	; 2
     3c8:	01 c0       	rjmp	.+2      	; 0x3cc <.do_clear_bss_start>

000003ca <.do_clear_bss_loop>:
     3ca:	1d 92       	st	X+, r1

000003cc <.do_clear_bss_start>:
     3cc:	ac 30       	cpi	r26, 0x0C	; 12
     3ce:	b2 07       	cpc	r27, r18
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <.do_clear_bss_loop>
     3d2:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <main>
     3d6:	0c 94 e2 13 	jmp	0x27c4	; 0x27c4 <_exit>

000003da <__bad_interrupt>:
     3da:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003de <__vector_15>:
float negYfactor;
float negYadd;

volatile char ADC_data;

ISR (TIMER1_OVF_vect){
     3de:	1f 92       	push	r1
     3e0:	0f 92       	push	r0
     3e2:	0f b6       	in	r0, 0x3f	; 63
     3e4:	0f 92       	push	r0
     3e6:	11 24       	eor	r1, r1
     3e8:	2f 93       	push	r18
     3ea:	3f 93       	push	r19
     3ec:	4f 93       	push	r20
     3ee:	5f 93       	push	r21
     3f0:	6f 93       	push	r22
     3f2:	7f 93       	push	r23
     3f4:	8f 93       	push	r24
     3f6:	9f 93       	push	r25
     3f8:	af 93       	push	r26
     3fa:	bf 93       	push	r27
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	ef 93       	push	r30
     402:	ff 93       	push	r31
	ADC[0x00] = 0x00;
     404:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     408:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     40c:	10 82       	st	Z, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     40e:	89 ef       	ldi	r24, 0xF9	; 249
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     416:	00 c0       	rjmp	.+0      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     418:	00 00       	nop
	_delay_ms(1);
	joyy=ADC[0x00];
     41a:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     41e:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     422:	80 81       	ld	r24, Z
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	90 93 d2 02 	sts	0x02D2, r25	; 0x8002d2 <joyy+0x1>
     42a:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <joyy>
	joyx=ADC[0x00];
     42e:	80 81       	ld	r24, Z
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	90 93 f1 02 	sts	0x02F1, r25	; 0x8002f1 <joyx+0x1>
     436:	80 93 f0 02 	sts	0x02F0, r24	; 0x8002f0 <joyx>
	sliderRight = ADC[0x00];
     43a:	80 81       	ld	r24, Z
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	90 93 c0 02 	sts	0x02C0, r25	; 0x8002c0 <sliderRight+0x1>
     442:	80 93 bf 02 	sts	0x02BF, r24	; 0x8002bf <sliderRight>
	sliderLeft = ADC[0x00];
     446:	80 81       	ld	r24, Z
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	90 93 ce 02 	sts	0x02CE, r25	; 0x8002ce <sliderLeft+0x1>
     44e:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <sliderLeft>
	
	button1State = 0 != (PIND & (1<<PD2)); 
     452:	80 b3       	in	r24, 0x10	; 16
     454:	82 fb       	bst	r24, 2
     456:	88 27       	eor	r24, r24
     458:	80 f9       	bld	r24, 0
     45a:	80 93 ea 02 	sts	0x02EA, r24	; 0x8002ea <button1State>
	button2State = 0 != (PIND & (1<<PD3));
     45e:	80 b3       	in	r24, 0x10	; 16
     460:	83 fb       	bst	r24, 3
     462:	88 27       	eor	r24, r24
     464:	80 f9       	bld	r24, 0
     466:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <button2State>
	button3State = 1 != (0 != (PIND & (1<<PD5))); 
     46a:	80 b3       	in	r24, 0x10	; 16
     46c:	82 95       	swap	r24
     46e:	86 95       	lsr	r24
     470:	87 70       	andi	r24, 0x07	; 7
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	89 27       	eor	r24, r25
     476:	81 70       	andi	r24, 0x01	; 1
     478:	80 93 f2 02 	sts	0x02F2, r24	; 0x8002f2 <button3State>
	
	if (joyy < middleyjoyy)
     47c:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
     480:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
     484:	c0 91 c5 02 	lds	r28, 0x02C5	; 0x8002c5 <middleyjoyy>
     488:	d0 91 c6 02 	lds	r29, 0x02C6	; 0x8002c6 <middleyjoyy+0x1>
     48c:	8c 17       	cp	r24, r28
     48e:	9d 07       	cpc	r25, r29
     490:	54 f5       	brge	.+84     	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
	{
		joyyPercent = joyy*negYfactor/100+negYadd;
     492:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <joyy>
     496:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <joyy+0x1>
     49a:	07 2e       	mov	r0, r23
     49c:	00 0c       	add	r0, r0
     49e:	88 0b       	sbc	r24, r24
     4a0:	99 0b       	sbc	r25, r25
     4a2:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     4a6:	20 91 e2 02 	lds	r18, 0x02E2	; 0x8002e2 <negYfactor>
     4aa:	30 91 e3 02 	lds	r19, 0x02E3	; 0x8002e3 <negYfactor+0x1>
     4ae:	40 91 e4 02 	lds	r20, 0x02E4	; 0x8002e4 <negYfactor+0x2>
     4b2:	50 91 e5 02 	lds	r21, 0x02E5	; 0x8002e5 <negYfactor+0x3>
     4b6:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     4ba:	20 e0       	ldi	r18, 0x00	; 0
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	48 ec       	ldi	r20, 0xC8	; 200
     4c0:	52 e4       	ldi	r21, 0x42	; 66
     4c2:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__divsf3>
     4c6:	20 91 c1 02 	lds	r18, 0x02C1	; 0x8002c1 <negYadd>
     4ca:	30 91 c2 02 	lds	r19, 0x02C2	; 0x8002c2 <negYadd+0x1>
     4ce:	40 91 c3 02 	lds	r20, 0x02C3	; 0x8002c3 <negYadd+0x2>
     4d2:	50 91 c4 02 	lds	r21, 0x02C4	; 0x8002c4 <negYadd+0x3>
     4d6:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__addsf3>
     4da:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     4de:	70 93 d0 02 	sts	0x02D0, r23	; 0x8002d0 <joyyPercent+0x1>
     4e2:	60 93 cf 02 	sts	0x02CF, r22	; 0x8002cf <joyyPercent>
	}
	if (joyy >= middleyjoyy)
     4e6:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
     4ea:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
     4ee:	8c 17       	cp	r24, r28
     4f0:	9d 07       	cpc	r25, r29
     4f2:	54 f1       	brlt	.+84     	; 0x548 <__stack+0x49>
	{
		joyyPercent = joyy*posYfactor/100+posYadd;
     4f4:	60 91 d1 02 	lds	r22, 0x02D1	; 0x8002d1 <joyy>
     4f8:	70 91 d2 02 	lds	r23, 0x02D2	; 0x8002d2 <joyy+0x1>
     4fc:	07 2e       	mov	r0, r23
     4fe:	00 0c       	add	r0, r0
     500:	88 0b       	sbc	r24, r24
     502:	99 0b       	sbc	r25, r25
     504:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     508:	20 91 d8 02 	lds	r18, 0x02D8	; 0x8002d8 <posYfactor>
     50c:	30 91 d9 02 	lds	r19, 0x02D9	; 0x8002d9 <posYfactor+0x1>
     510:	40 91 da 02 	lds	r20, 0x02DA	; 0x8002da <posYfactor+0x2>
     514:	50 91 db 02 	lds	r21, 0x02DB	; 0x8002db <posYfactor+0x3>
     518:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	48 ec       	ldi	r20, 0xC8	; 200
     522:	52 e4       	ldi	r21, 0x42	; 66
     524:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__divsf3>
     528:	20 91 c9 02 	lds	r18, 0x02C9	; 0x8002c9 <posYadd>
     52c:	30 91 ca 02 	lds	r19, 0x02CA	; 0x8002ca <posYadd+0x1>
     530:	40 91 cb 02 	lds	r20, 0x02CB	; 0x8002cb <posYadd+0x2>
     534:	50 91 cc 02 	lds	r21, 0x02CC	; 0x8002cc <posYadd+0x3>
     538:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__addsf3>
     53c:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     540:	70 93 d0 02 	sts	0x02D0, r23	; 0x8002d0 <joyyPercent+0x1>
     544:	60 93 cf 02 	sts	0x02CF, r22	; 0x8002cf <joyyPercent>
	}
	if (joyx < middleyjoyx)
     548:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <joyx>
     54c:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <joyx+0x1>
     550:	c0 91 e0 02 	lds	r28, 0x02E0	; 0x8002e0 <middleyjoyx>
     554:	d0 91 e1 02 	lds	r29, 0x02E1	; 0x8002e1 <middleyjoyx+0x1>
     558:	8c 17       	cp	r24, r28
     55a:	9d 07       	cpc	r25, r29
     55c:	54 f5       	brge	.+84     	; 0x5b2 <__stack+0xb3>
	{
		joyxPercent = joyx*negXfactor/100+negXadd;
     55e:	60 91 f0 02 	lds	r22, 0x02F0	; 0x8002f0 <joyx>
     562:	70 91 f1 02 	lds	r23, 0x02F1	; 0x8002f1 <joyx+0x1>
     566:	07 2e       	mov	r0, r23
     568:	00 0c       	add	r0, r0
     56a:	88 0b       	sbc	r24, r24
     56c:	99 0b       	sbc	r25, r25
     56e:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     572:	20 91 e6 02 	lds	r18, 0x02E6	; 0x8002e6 <negXfactor>
     576:	30 91 e7 02 	lds	r19, 0x02E7	; 0x8002e7 <negXfactor+0x1>
     57a:	40 91 e8 02 	lds	r20, 0x02E8	; 0x8002e8 <negXfactor+0x2>
     57e:	50 91 e9 02 	lds	r21, 0x02E9	; 0x8002e9 <negXfactor+0x3>
     582:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     586:	20 e0       	ldi	r18, 0x00	; 0
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	48 ec       	ldi	r20, 0xC8	; 200
     58c:	52 e4       	ldi	r21, 0x42	; 66
     58e:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__divsf3>
     592:	20 91 dc 02 	lds	r18, 0x02DC	; 0x8002dc <negXadd>
     596:	30 91 dd 02 	lds	r19, 0x02DD	; 0x8002dd <negXadd+0x1>
     59a:	40 91 de 02 	lds	r20, 0x02DE	; 0x8002de <negXadd+0x2>
     59e:	50 91 df 02 	lds	r21, 0x02DF	; 0x8002df <negXadd+0x3>
     5a2:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__addsf3>
     5a6:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     5aa:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <joyxPercent+0x1>
     5ae:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <joyxPercent>
	}
	if (joyx >= middleyjoyx)
     5b2:	80 91 f0 02 	lds	r24, 0x02F0	; 0x8002f0 <joyx>
     5b6:	90 91 f1 02 	lds	r25, 0x02F1	; 0x8002f1 <joyx+0x1>
     5ba:	8c 17       	cp	r24, r28
     5bc:	9d 07       	cpc	r25, r29
     5be:	54 f1       	brlt	.+84     	; 0x614 <__stack+0x115>
	{
		joyxPercent = joyx*posXfactor/100+posXadd;
     5c0:	60 91 f0 02 	lds	r22, 0x02F0	; 0x8002f0 <joyx>
     5c4:	70 91 f1 02 	lds	r23, 0x02F1	; 0x8002f1 <joyx+0x1>
     5c8:	07 2e       	mov	r0, r23
     5ca:	00 0c       	add	r0, r0
     5cc:	88 0b       	sbc	r24, r24
     5ce:	99 0b       	sbc	r25, r25
     5d0:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     5d4:	20 91 ec 02 	lds	r18, 0x02EC	; 0x8002ec <posXfactor>
     5d8:	30 91 ed 02 	lds	r19, 0x02ED	; 0x8002ed <posXfactor+0x1>
     5dc:	40 91 ee 02 	lds	r20, 0x02EE	; 0x8002ee <posXfactor+0x2>
     5e0:	50 91 ef 02 	lds	r21, 0x02EF	; 0x8002ef <posXfactor+0x3>
     5e4:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     5e8:	20 e0       	ldi	r18, 0x00	; 0
     5ea:	30 e0       	ldi	r19, 0x00	; 0
     5ec:	48 ec       	ldi	r20, 0xC8	; 200
     5ee:	52 e4       	ldi	r21, 0x42	; 66
     5f0:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__divsf3>
     5f4:	20 91 d4 02 	lds	r18, 0x02D4	; 0x8002d4 <posXadd>
     5f8:	30 91 d5 02 	lds	r19, 0x02D5	; 0x8002d5 <posXadd+0x1>
     5fc:	40 91 d6 02 	lds	r20, 0x02D6	; 0x8002d6 <posXadd+0x2>
     600:	50 91 d7 02 	lds	r21, 0x02D7	; 0x8002d7 <posXadd+0x3>
     604:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <__addsf3>
     608:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     60c:	70 93 c8 02 	sts	0x02C8, r23	; 0x8002c8 <joyxPercent+0x1>
     610:	60 93 c7 02 	sts	0x02C7, r22	; 0x8002c7 <joyxPercent>
	}	
	if (joyxPercent > -5 && joyxPercent < 5)
     614:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <joyxPercent>
     618:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <joyxPercent+0x1>
     61c:	8c 3f       	cpi	r24, 0xFC	; 252
     61e:	9f 4f       	sbci	r25, 0xFF	; 255
     620:	54 f0       	brlt	.+20     	; 0x636 <__stack+0x137>
     622:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <joyxPercent>
     626:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <joyxPercent+0x1>
     62a:	05 97       	sbiw	r24, 0x05	; 5
     62c:	24 f4       	brge	.+8      	; 0x636 <__stack+0x137>
	{
		joyxPercent = 0;
     62e:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <joyxPercent+0x1>
     632:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <joyxPercent>
	}
	if (joyyPercent > -5 && joyyPercent < 5)
     636:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <joyyPercent>
     63a:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <joyyPercent+0x1>
     63e:	8c 3f       	cpi	r24, 0xFC	; 252
     640:	9f 4f       	sbci	r25, 0xFF	; 255
     642:	54 f0       	brlt	.+20     	; 0x658 <__stack+0x159>
     644:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <joyyPercent>
     648:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <joyyPercent+0x1>
     64c:	05 97       	sbiw	r24, 0x05	; 5
     64e:	24 f4       	brge	.+8      	; 0x658 <__stack+0x159>
	{
		joyyPercent = 0;
     650:	10 92 d0 02 	sts	0x02D0, r1	; 0x8002d0 <joyyPercent+0x1>
     654:	10 92 cf 02 	sts	0x02CF, r1	; 0x8002cf <joyyPercent>
	}

}
     658:	ff 91       	pop	r31
     65a:	ef 91       	pop	r30
     65c:	df 91       	pop	r29
     65e:	cf 91       	pop	r28
     660:	bf 91       	pop	r27
     662:	af 91       	pop	r26
     664:	9f 91       	pop	r25
     666:	8f 91       	pop	r24
     668:	7f 91       	pop	r23
     66a:	6f 91       	pop	r22
     66c:	5f 91       	pop	r21
     66e:	4f 91       	pop	r20
     670:	3f 91       	pop	r19
     672:	2f 91       	pop	r18
     674:	0f 90       	pop	r0
     676:	0f be       	out	0x3f, r0	; 63
     678:	0f 90       	pop	r0
     67a:	1f 90       	pop	r1
     67c:	18 95       	reti

0000067e <adc_init>:





void adc_init(){
     67e:	6f 92       	push	r6
     680:	7f 92       	push	r7
     682:	8f 92       	push	r8
     684:	9f 92       	push	r9
     686:	af 92       	push	r10
     688:	bf 92       	push	r11
     68a:	cf 92       	push	r12
     68c:	df 92       	push	r13
     68e:	ef 92       	push	r14
     690:	ff 92       	push	r15
     692:	0f 93       	push	r16
     694:	1f 93       	push	r17
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
	// create PWM for ADC clock
    TCCR3A = (1 << WGM30) | (1 << WGM31) | (1 << COM3A0);
     69a:	83 e4       	ldi	r24, 0x43	; 67
     69c:	80 93 8b 00 	sts	0x008B, r24	; 0x80008b <__TEXT_REGION_LENGTH__+0x7fc08b>
    TCCR3B = (1 << CS30) | (1 << WGM33);
     6a0:	81 e1       	ldi	r24, 0x11	; 17
     6a2:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7fc08a>
    OCR3A = 2; 
     6a6:	82 e0       	ldi	r24, 0x02	; 2
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     6ae:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
    DDRD |= (1 << DDD4); 
     6b2:	81 b3       	in	r24, 0x11	; 17
     6b4:	80 61       	ori	r24, 0x10	; 16
     6b6:	81 bb       	out	0x11, r24	; 17
     6b8:	83 ec       	ldi	r24, 0xC3	; 195
     6ba:	99 e0       	ldi	r25, 0x09	; 9
     6bc:	01 97       	sbiw	r24, 0x01	; 1
     6be:	f1 f7       	brne	.-4      	; 0x6bc <adc_init+0x3e>
     6c0:	00 c0       	rjmp	.+0      	; 0x6c2 <adc_init+0x44>
     6c2:	00 00       	nop
	
	// calibrate joystick 
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     6c4:	20 e0       	ldi	r18, 0x00	; 0
     6c6:	30 e0       	ldi	r19, 0x00	; 0
    DDRD |= (1 << DDD4); 
	
	
	// calibrate joystick 
	_delay_ms(10);
	int times = 0;
     6c8:	c0 e0       	ldi	r28, 0x00	; 0
     6ca:	d0 e0       	ldi	r29, 0x00	; 0
	int ignore;
	for (int i = 0; i<100; i++)
     6cc:	30 c0       	rjmp	.+96     	; 0x72e <adc_init+0xb0>
	{
		ADC[0x00] = 0x00;
     6ce:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6d2:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6d6:	10 82       	st	Z, r1
     6d8:	89 ef       	ldi	r24, 0xF9	; 249
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <adc_init+0x5e>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <adc_init+0x64>
     6e2:	00 00       	nop
		_delay_ms(1);
		intermittentx = intermittentx + ADC[0x00];
     6e4:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     6e8:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     6ec:	40 81       	ld	r20, Z
     6ee:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <__data_end>
     6f2:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <__data_end+0x1>
     6f6:	84 0f       	add	r24, r20
     6f8:	91 1d       	adc	r25, r1
     6fa:	90 93 b5 02 	sts	0x02B5, r25	; 0x8002b5 <__data_end+0x1>
     6fe:	80 93 b4 02 	sts	0x02B4, r24	; 0x8002b4 <__data_end>
		intermittenty = intermittenty + ADC[0x00];
     702:	40 81       	ld	r20, Z
     704:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <intermittenty>
     708:	90 91 b7 02 	lds	r25, 0x02B7	; 0x8002b7 <intermittenty+0x1>
     70c:	84 0f       	add	r24, r20
     70e:	91 1d       	adc	r25, r1
     710:	90 93 b7 02 	sts	0x02B7, r25	; 0x8002b7 <intermittenty+0x1>
     714:	80 93 b6 02 	sts	0x02B6, r24	; 0x8002b6 <intermittenty>
		ignore = ADC[0x00];
     718:	80 81       	ld	r24, Z
		ignore = ADC[0x00];
     71a:	80 81       	ld	r24, Z
     71c:	89 ef       	ldi	r24, 0xF9	; 249
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	01 97       	sbiw	r24, 0x01	; 1
     722:	f1 f7       	brne	.-4      	; 0x720 <adc_init+0xa2>
     724:	00 c0       	rjmp	.+0      	; 0x726 <adc_init+0xa8>
     726:	00 00       	nop
		_delay_ms(1);
		times++;
     728:	21 96       	adiw	r28, 0x01	; 1
	
	// calibrate joystick 
	_delay_ms(10);
	int times = 0;
	int ignore;
	for (int i = 0; i<100; i++)
     72a:	2f 5f       	subi	r18, 0xFF	; 255
     72c:	3f 4f       	sbci	r19, 0xFF	; 255
     72e:	24 36       	cpi	r18, 0x64	; 100
     730:	31 05       	cpc	r19, r1
     732:	6c f2       	brlt	.-102    	; 0x6ce <adc_init+0x50>
		ignore = ADC[0x00];
		ignore = ADC[0x00];
		_delay_ms(1);
		times++;
	}
	middleyjoyx = intermittentx/times;
     734:	80 91 b4 02 	lds	r24, 0x02B4	; 0x8002b4 <__data_end>
     738:	90 91 b5 02 	lds	r25, 0x02B5	; 0x8002b5 <__data_end+0x1>
     73c:	be 01       	movw	r22, r28
     73e:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     742:	26 2f       	mov	r18, r22
     744:	37 2f       	mov	r19, r23
     746:	60 93 e0 02 	sts	0x02E0, r22	; 0x8002e0 <middleyjoyx>
     74a:	70 93 e1 02 	sts	0x02E1, r23	; 0x8002e1 <middleyjoyx+0x1>
	middleyjoyy = intermittenty/times;
     74e:	80 91 b6 02 	lds	r24, 0x02B6	; 0x8002b6 <intermittenty>
     752:	90 91 b7 02 	lds	r25, 0x02B7	; 0x8002b7 <intermittenty+0x1>
     756:	be 01       	movw	r22, r28
     758:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     75c:	60 93 c5 02 	sts	0x02C5, r22	; 0x8002c5 <middleyjoyy>
     760:	70 93 c6 02 	sts	0x02C6, r23	; 0x8002c6 <middleyjoyy+0x1>
	printf("\n\n\r %d %d \n", middleyjoyx, middleyjoyy);
     764:	7f 93       	push	r23
     766:	6f 93       	push	r22
     768:	3f 93       	push	r19
     76a:	2f 93       	push	r18
     76c:	8c e1       	ldi	r24, 0x1C	; 28
     76e:	91 e0       	ldi	r25, 0x01	; 1
     770:	9f 93       	push	r25
     772:	8f 93       	push	r24
     774:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	
	
	// factors for joystick linearization
	posXfactor = (10000)/(255-middleyjoyx);
     778:	00 91 e0 02 	lds	r16, 0x02E0	; 0x8002e0 <middleyjoyx>
     77c:	10 91 e1 02 	lds	r17, 0x02E1	; 0x8002e1 <middleyjoyx+0x1>
     780:	66 24       	eor	r6, r6
     782:	6a 94       	dec	r6
     784:	71 2c       	mov	r7, r1
     786:	73 01       	movw	r14, r6
     788:	e0 1a       	sub	r14, r16
     78a:	f1 0a       	sbc	r15, r17
     78c:	c0 e1       	ldi	r28, 0x10	; 16
     78e:	d7 e2       	ldi	r29, 0x27	; 39
     790:	ce 01       	movw	r24, r28
     792:	b7 01       	movw	r22, r14
     794:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     798:	07 2e       	mov	r0, r23
     79a:	00 0c       	add	r0, r0
     79c:	88 0b       	sbc	r24, r24
     79e:	99 0b       	sbc	r25, r25
     7a0:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     7a4:	4b 01       	movw	r8, r22
     7a6:	5c 01       	movw	r10, r24
     7a8:	60 93 ec 02 	sts	0x02EC, r22	; 0x8002ec <posXfactor>
     7ac:	70 93 ed 02 	sts	0x02ED, r23	; 0x8002ed <posXfactor+0x1>
     7b0:	80 93 ee 02 	sts	0x02EE, r24	; 0x8002ee <posXfactor+0x2>
     7b4:	90 93 ef 02 	sts	0x02EF, r25	; 0x8002ef <posXfactor+0x3>
	posXadd = -1*(100*middleyjoyx)/(255-middleyjoyx);
     7b8:	2c e9       	ldi	r18, 0x9C	; 156
     7ba:	20 03       	mulsu	r18, r16
     7bc:	60 01       	movw	r12, r0
     7be:	21 9f       	mul	r18, r17
     7c0:	d0 0c       	add	r13, r0
     7c2:	11 24       	eor	r1, r1
     7c4:	c6 01       	movw	r24, r12
     7c6:	b7 01       	movw	r22, r14
     7c8:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     7cc:	7b 01       	movw	r14, r22
     7ce:	07 2e       	mov	r0, r23
     7d0:	00 0c       	add	r0, r0
     7d2:	88 0b       	sbc	r24, r24
     7d4:	99 0b       	sbc	r25, r25
     7d6:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     7da:	60 93 d4 02 	sts	0x02D4, r22	; 0x8002d4 <posXadd>
     7de:	70 93 d5 02 	sts	0x02D5, r23	; 0x8002d5 <posXadd+0x1>
     7e2:	80 93 d6 02 	sts	0x02D6, r24	; 0x8002d6 <posXadd+0x2>
     7e6:	90 93 d7 02 	sts	0x02D7, r25	; 0x8002d7 <posXadd+0x3>
	negXfactor = (10000/middleyjoyx);
     7ea:	ce 01       	movw	r24, r28
     7ec:	b8 01       	movw	r22, r16
     7ee:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     7f2:	07 2e       	mov	r0, r23
     7f4:	00 0c       	add	r0, r0
     7f6:	88 0b       	sbc	r24, r24
     7f8:	99 0b       	sbc	r25, r25
     7fa:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     7fe:	60 93 e6 02 	sts	0x02E6, r22	; 0x8002e6 <negXfactor>
     802:	70 93 e7 02 	sts	0x02E7, r23	; 0x8002e7 <negXfactor+0x1>
     806:	80 93 e8 02 	sts	0x02E8, r24	; 0x8002e8 <negXfactor+0x2>
     80a:	90 93 e9 02 	sts	0x02E9, r25	; 0x8002e9 <negXfactor+0x3>
	negXadd = -1*(middleyjoyx*100)/(middleyjoyx);
     80e:	c6 01       	movw	r24, r12
     810:	b8 01       	movw	r22, r16
     812:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     816:	07 2e       	mov	r0, r23
     818:	00 0c       	add	r0, r0
     81a:	88 0b       	sbc	r24, r24
     81c:	99 0b       	sbc	r25, r25
     81e:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     822:	60 93 dc 02 	sts	0x02DC, r22	; 0x8002dc <negXadd>
     826:	70 93 dd 02 	sts	0x02DD, r23	; 0x8002dd <negXadd+0x1>
     82a:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <negXadd+0x2>
     82e:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <negXadd+0x3>
	posYfactor = (10000)/(255-middleyjoyy);
     832:	00 91 c5 02 	lds	r16, 0x02C5	; 0x8002c5 <middleyjoyy>
     836:	10 91 c6 02 	lds	r17, 0x02C6	; 0x8002c6 <middleyjoyy+0x1>
     83a:	60 1a       	sub	r6, r16
     83c:	71 0a       	sbc	r7, r17
     83e:	ce 01       	movw	r24, r28
     840:	b3 01       	movw	r22, r6
     842:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     846:	07 2e       	mov	r0, r23
     848:	00 0c       	add	r0, r0
     84a:	88 0b       	sbc	r24, r24
     84c:	99 0b       	sbc	r25, r25
     84e:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     852:	60 93 d8 02 	sts	0x02D8, r22	; 0x8002d8 <posYfactor>
     856:	70 93 d9 02 	sts	0x02D9, r23	; 0x8002d9 <posYfactor+0x1>
     85a:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <posYfactor+0x2>
     85e:	90 93 db 02 	sts	0x02DB, r25	; 0x8002db <posYfactor+0x3>
	posYadd= -1*(100*middleyjoyy)/(255-middleyjoyy);
     862:	2c e9       	ldi	r18, 0x9C	; 156
     864:	20 03       	mulsu	r18, r16
     866:	60 01       	movw	r12, r0
     868:	21 9f       	mul	r18, r17
     86a:	d0 0c       	add	r13, r0
     86c:	11 24       	eor	r1, r1
     86e:	c6 01       	movw	r24, r12
     870:	b3 01       	movw	r22, r6
     872:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     876:	07 2e       	mov	r0, r23
     878:	00 0c       	add	r0, r0
     87a:	88 0b       	sbc	r24, r24
     87c:	99 0b       	sbc	r25, r25
     87e:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     882:	60 93 c9 02 	sts	0x02C9, r22	; 0x8002c9 <posYadd>
     886:	70 93 ca 02 	sts	0x02CA, r23	; 0x8002ca <posYadd+0x1>
     88a:	80 93 cb 02 	sts	0x02CB, r24	; 0x8002cb <posYadd+0x2>
     88e:	90 93 cc 02 	sts	0x02CC, r25	; 0x8002cc <posYadd+0x3>
	negYfactor = (10000/middleyjoyy);
     892:	ce 01       	movw	r24, r28
     894:	b8 01       	movw	r22, r16
     896:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     89a:	07 2e       	mov	r0, r23
     89c:	00 0c       	add	r0, r0
     89e:	88 0b       	sbc	r24, r24
     8a0:	99 0b       	sbc	r25, r25
     8a2:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     8a6:	60 93 e2 02 	sts	0x02E2, r22	; 0x8002e2 <negYfactor>
     8aa:	70 93 e3 02 	sts	0x02E3, r23	; 0x8002e3 <negYfactor+0x1>
     8ae:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <negYfactor+0x2>
     8b2:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <negYfactor+0x3>
	negYadd = -1*(middleyjoyy*100)/(middleyjoyy);
     8b6:	c6 01       	movw	r24, r12
     8b8:	b8 01       	movw	r22, r16
     8ba:	0e 94 17 0f 	call	0x1e2e	; 0x1e2e <__divmodhi4>
     8be:	07 2e       	mov	r0, r23
     8c0:	00 0c       	add	r0, r0
     8c2:	88 0b       	sbc	r24, r24
     8c4:	99 0b       	sbc	r25, r25
     8c6:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__floatsisf>
     8ca:	60 93 c1 02 	sts	0x02C1, r22	; 0x8002c1 <negYadd>
     8ce:	70 93 c2 02 	sts	0x02C2, r23	; 0x8002c2 <negYadd+0x1>
     8d2:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <negYadd+0x2>
     8d6:	90 93 c4 02 	sts	0x02C4, r25	; 0x8002c4 <negYadd+0x3>
	printf("Pos x: %d*x + %d\n\r", (int)(posXfactor*1000), (int)posXadd);
     8da:	20 e0       	ldi	r18, 0x00	; 0
     8dc:	30 e0       	ldi	r19, 0x00	; 0
     8de:	4a e7       	ldi	r20, 0x7A	; 122
     8e0:	54 e4       	ldi	r21, 0x44	; 68
     8e2:	c5 01       	movw	r24, r10
     8e4:	b4 01       	movw	r22, r8
     8e6:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     8ea:	ff 92       	push	r15
     8ec:	ef 92       	push	r14
     8ee:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     8f2:	7f 93       	push	r23
     8f4:	6f 93       	push	r22
     8f6:	88 e2       	ldi	r24, 0x28	; 40
     8f8:	91 e0       	ldi	r25, 0x01	; 1
     8fa:	9f 93       	push	r25
     8fc:	8f 93       	push	r24
     8fe:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	printf("Neg x: %d*x + %d\n\r", (int)(negXfactor*1000), (int)negXadd);
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	4a e7       	ldi	r20, 0x7A	; 122
     908:	54 e4       	ldi	r21, 0x44	; 68
     90a:	60 91 e6 02 	lds	r22, 0x02E6	; 0x8002e6 <negXfactor>
     90e:	70 91 e7 02 	lds	r23, 0x02E7	; 0x8002e7 <negXfactor+0x1>
     912:	80 91 e8 02 	lds	r24, 0x02E8	; 0x8002e8 <negXfactor+0x2>
     916:	90 91 e9 02 	lds	r25, 0x02E9	; 0x8002e9 <negXfactor+0x3>
     91a:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     91e:	6b 01       	movw	r12, r22
     920:	7c 01       	movw	r14, r24
     922:	60 91 dc 02 	lds	r22, 0x02DC	; 0x8002dc <negXadd>
     926:	70 91 dd 02 	lds	r23, 0x02DD	; 0x8002dd <negXadd+0x1>
     92a:	80 91 de 02 	lds	r24, 0x02DE	; 0x8002de <negXadd+0x2>
     92e:	90 91 df 02 	lds	r25, 0x02DF	; 0x8002df <negXadd+0x3>
     932:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     936:	7f 93       	push	r23
     938:	6f 93       	push	r22
     93a:	c7 01       	movw	r24, r14
     93c:	b6 01       	movw	r22, r12
     93e:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     942:	7f 93       	push	r23
     944:	6f 93       	push	r22
     946:	8b e3       	ldi	r24, 0x3B	; 59
     948:	91 e0       	ldi	r25, 0x01	; 1
     94a:	9f 93       	push	r25
     94c:	8f 93       	push	r24
     94e:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	printf("Pos y: %d*y + %d\n\r", (int)(posYfactor*1000), (int)posYadd);
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	4a e7       	ldi	r20, 0x7A	; 122
     958:	54 e4       	ldi	r21, 0x44	; 68
     95a:	60 91 d8 02 	lds	r22, 0x02D8	; 0x8002d8 <posYfactor>
     95e:	70 91 d9 02 	lds	r23, 0x02D9	; 0x8002d9 <posYfactor+0x1>
     962:	80 91 da 02 	lds	r24, 0x02DA	; 0x8002da <posYfactor+0x2>
     966:	90 91 db 02 	lds	r25, 0x02DB	; 0x8002db <posYfactor+0x3>
     96a:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     96e:	6b 01       	movw	r12, r22
     970:	7c 01       	movw	r14, r24
     972:	60 91 c9 02 	lds	r22, 0x02C9	; 0x8002c9 <posYadd>
     976:	70 91 ca 02 	lds	r23, 0x02CA	; 0x8002ca <posYadd+0x1>
     97a:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <posYadd+0x2>
     97e:	90 91 cc 02 	lds	r25, 0x02CC	; 0x8002cc <posYadd+0x3>
     982:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     986:	7f 93       	push	r23
     988:	6f 93       	push	r22
     98a:	c7 01       	movw	r24, r14
     98c:	b6 01       	movw	r22, r12
     98e:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     992:	7f 93       	push	r23
     994:	6f 93       	push	r22
     996:	8e e4       	ldi	r24, 0x4E	; 78
     998:	91 e0       	ldi	r25, 0x01	; 1
     99a:	9f 93       	push	r25
     99c:	8f 93       	push	r24
     99e:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	printf("Neg y: %d*y + %d\n\r", (int)(negYfactor*1000), (int)negYadd);
     9a2:	20 e0       	ldi	r18, 0x00	; 0
     9a4:	30 e0       	ldi	r19, 0x00	; 0
     9a6:	4a e7       	ldi	r20, 0x7A	; 122
     9a8:	54 e4       	ldi	r21, 0x44	; 68
     9aa:	60 91 e2 02 	lds	r22, 0x02E2	; 0x8002e2 <negYfactor>
     9ae:	70 91 e3 02 	lds	r23, 0x02E3	; 0x8002e3 <negYfactor+0x1>
     9b2:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <negYfactor+0x2>
     9b6:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <negYfactor+0x3>
     9ba:	0e 94 aa 0e 	call	0x1d54	; 0x1d54 <__mulsf3>
     9be:	6b 01       	movw	r12, r22
     9c0:	7c 01       	movw	r14, r24
     9c2:	60 91 c1 02 	lds	r22, 0x02C1	; 0x8002c1 <negYadd>
     9c6:	70 91 c2 02 	lds	r23, 0x02C2	; 0x8002c2 <negYadd+0x1>
     9ca:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <negYadd+0x2>
     9ce:	90 91 c4 02 	lds	r25, 0x02C4	; 0x8002c4 <negYadd+0x3>
     9d2:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     9d6:	7f 93       	push	r23
     9d8:	6f 93       	push	r22
     9da:	c7 01       	movw	r24, r14
     9dc:	b6 01       	movw	r22, r12
     9de:	0e 94 e6 0d 	call	0x1bcc	; 0x1bcc <__fixsfsi>
     9e2:	7f 93       	push	r23
     9e4:	6f 93       	push	r22
     9e6:	81 e6       	ldi	r24, 0x61	; 97
     9e8:	91 e0       	ldi	r25, 0x01	; 1
     9ea:	9f 93       	push	r25
     9ec:	8f 93       	push	r24
     9ee:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	
	// set and enable timer
	cli();
     9f2:	f8 94       	cli
	TCCR1A = 0x00;
     9f4:	1f bc       	out	0x2f, r1	; 47
	TCCR1B =  (1<<CS11);
     9f6:	82 e0       	ldi	r24, 0x02	; 2
     9f8:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << TOIE1);   
     9fa:	80 e8       	ldi	r24, 0x80	; 128
     9fc:	89 bf       	out	0x39, r24	; 57
	sei(); 
     9fe:	78 94       	sei
	
	ADC[0x00] = 0x00;
     a00:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <ADC>
     a04:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <ADC+0x1>
     a08:	10 82       	st	Z, r1


}
     a0a:	8d b7       	in	r24, 0x3d	; 61
     a0c:	9e b7       	in	r25, 0x3e	; 62
     a0e:	4e 96       	adiw	r24, 0x1e	; 30
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	f8 94       	cli
     a14:	9e bf       	out	0x3e, r25	; 62
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	8d bf       	out	0x3d, r24	; 61
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	1f 91       	pop	r17
     a20:	0f 91       	pop	r16
     a22:	ff 90       	pop	r15
     a24:	ef 90       	pop	r14
     a26:	df 90       	pop	r13
     a28:	cf 90       	pop	r12
     a2a:	bf 90       	pop	r11
     a2c:	af 90       	pop	r10
     a2e:	9f 90       	pop	r9
     a30:	8f 90       	pop	r8
     a32:	7f 90       	pop	r7
     a34:	6f 90       	pop	r6
     a36:	08 95       	ret

00000a38 <__vector_1>:

uint8_t CAN_message_recieved(void){
	uint8_t temp = message_interrupt_flag;
	message_interrupt_flag=0;
	return(temp);
}
     a38:	1f 92       	push	r1
     a3a:	0f 92       	push	r0
     a3c:	0f b6       	in	r0, 0x3f	; 63
     a3e:	0f 92       	push	r0
     a40:	11 24       	eor	r1, r1
     a42:	8f 93       	push	r24
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	80 93 b8 02 	sts	0x02B8, r24	; 0x8002b8 <message_interrupt_flag>
     a4a:	8f 91       	pop	r24
     a4c:	0f 90       	pop	r0
     a4e:	0f be       	out	0x3f, r0	; 63
     a50:	0f 90       	pop	r0
     a52:	1f 90       	pop	r1
     a54:	18 95       	reti

00000a56 <CAN_init>:
     a56:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <CAN_module_init>
     a5a:	f8 94       	cli
     a5c:	85 b7       	in	r24, 0x35	; 53
     a5e:	83 60       	ori	r24, 0x03	; 3
     a60:	85 bf       	out	0x35, r24	; 53
     a62:	80 e4       	ldi	r24, 0x40	; 64
     a64:	8b bf       	out	0x3b, r24	; 59
     a66:	78 94       	sei
     a68:	60 e8       	ldi	r22, 0x80	; 128
     a6a:	8f e0       	ldi	r24, 0x0F	; 15
     a6c:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a70:	61 e0       	ldi	r22, 0x01	; 1
     a72:	8b e2       	ldi	r24, 0x2B	; 43
     a74:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a78:	63 e0       	ldi	r22, 0x03	; 3
     a7a:	8a e2       	ldi	r24, 0x2A	; 42
     a7c:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a80:	61 eb       	ldi	r22, 0xB1	; 177
     a82:	89 e2       	ldi	r24, 0x29	; 41
     a84:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a88:	65 e0       	ldi	r22, 0x05	; 5
     a8a:	88 e2       	ldi	r24, 0x28	; 40
     a8c:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a90:	60 e0       	ldi	r22, 0x00	; 0
     a92:	8f e0       	ldi	r24, 0x0F	; 15
     a94:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     a98:	08 95       	ret

00000a9a <CAN_send_message>:




void CAN_send_message(CAN_message_struct* message){
     a9a:	0f 93       	push	r16
     a9c:	1f 93       	push	r17
     a9e:	cf 93       	push	r28
     aa0:	8c 01       	movw	r16, r24
	//load tx0 buffer with data
	//printf("ID: %x%x, DLC: %x, Data[8]: %x\n\r", message->message_id[0], message->message_id[1], message->data_length_code, message->data[6]);
	CAN_module_write(MCP_TXB0CTRL + 0x01, message->message_id[0]);
     aa2:	fc 01       	movw	r30, r24
     aa4:	60 81       	ld	r22, Z
     aa6:	81 e3       	ldi	r24, 0x31	; 49
     aa8:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
     aac:	f8 01       	movw	r30, r16
     aae:	61 81       	ldd	r22, Z+1	; 0x01
     ab0:	62 95       	swap	r22
     ab2:	66 0f       	add	r22, r22
     ab4:	60 7e       	andi	r22, 0xE0	; 224
     ab6:	82 e3       	ldi	r24, 0x32	; 50
     ab8:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
     abc:	f8 01       	movw	r30, r16
     abe:	62 81       	ldd	r22, Z+2	; 0x02
     ac0:	85 e3       	ldi	r24, 0x35	; 53
     ac2:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
	for (uint8_t i = 0; i < 8; i++)
     ac6:	c0 e0       	ldi	r28, 0x00	; 0
     ac8:	09 c0       	rjmp	.+18     	; 0xadc <CAN_send_message+0x42>
	{
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
     aca:	f8 01       	movw	r30, r16
     acc:	ec 0f       	add	r30, r28
     ace:	f1 1d       	adc	r31, r1
     ad0:	63 81       	ldd	r22, Z+3	; 0x03
     ad2:	86 e3       	ldi	r24, 0x36	; 54
     ad4:	8c 0f       	add	r24, r28
     ad6:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
	//load tx0 buffer with data
	//printf("ID: %x%x, DLC: %x, Data[8]: %x\n\r", message->message_id[0], message->message_id[1], message->data_length_code, message->data[6]);
	CAN_module_write(MCP_TXB0CTRL + 0x01, message->message_id[0]);
	CAN_module_write(MCP_TXB0CTRL + 0x02, message->message_id[1]<<5);
	CAN_module_write(MCP_TXB0CTRL + 0x05, message->data_length_code);
	for (uint8_t i = 0; i < 8; i++)
     ada:	cf 5f       	subi	r28, 0xFF	; 255
     adc:	c8 30       	cpi	r28, 0x08	; 8
     ade:	a8 f3       	brcs	.-22     	; 0xaca <CAN_send_message+0x30>
     ae0:	83 ec       	ldi	r24, 0xC3	; 195
     ae2:	99 e0       	ldi	r25, 0x09	; 9
     ae4:	01 97       	sbiw	r24, 0x01	; 1
     ae6:	f1 f7       	brne	.-4      	; 0xae4 <CAN_send_message+0x4a>
     ae8:	00 c0       	rjmp	.+0      	; 0xaea <CAN_send_message+0x50>
     aea:	00 00       	nop
	{
		CAN_module_write(MCP_TXB0CTRL+0x06+i, message->data[i]);
	}
	//request to send
	_delay_ms(10);
	CAN_module_activate_cs();
     aec:	0e 94 b9 05 	call	0xb72	; 0xb72 <CAN_module_activate_cs>
	SPI_Transmit(MCP_RTS_TX0);
     af0:	81 e8       	ldi	r24, 0x81	; 129
     af2:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
	CAN_module_deactivate_cs();
     af6:	0e 94 bb 05 	call	0xb76	; 0xb76 <CAN_module_deactivate_cs>
}
     afa:	cf 91       	pop	r28
     afc:	1f 91       	pop	r17
     afe:	0f 91       	pop	r16
     b00:	08 95       	ret

00000b02 <CAN_recieve_message>:

CAN_message_struct CAN_recieve_message(void){
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	7c 01       	movw	r14, r24
	CAN_message_struct TempMessage;
	
	if (message_interrupt_flag==1)
     b0e:	80 91 b8 02 	lds	r24, 0x02B8	; 0x8002b8 <message_interrupt_flag>
     b12:	81 30       	cpi	r24, 0x01	; 1
     b14:	39 f5       	brne	.+78     	; 0xb64 <CAN_recieve_message+0x62>
	{
		TempMessage.message_id[0] = CAN_module_read(MCP_RXB0CTRL + 0x01);
     b16:	81 e6       	ldi	r24, 0x61	; 97
     b18:	0e 94 be 05 	call	0xb7c	; 0xb7c <CAN_module_read>
     b1c:	f7 01       	movw	r30, r14
     b1e:	80 83       	st	Z, r24
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x01));
		TempMessage.message_id[1] = CAN_module_read(MCP_RXB0CTRL + 0x02)>>5;
     b20:	82 e6       	ldi	r24, 0x62	; 98
     b22:	0e 94 be 05 	call	0xb7c	; 0xb7c <CAN_module_read>
     b26:	82 95       	swap	r24
     b28:	86 95       	lsr	r24
     b2a:	87 70       	andi	r24, 0x07	; 7
     b2c:	f7 01       	movw	r30, r14
     b2e:	81 83       	std	Z+1, r24	; 0x01
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x02));
		TempMessage.data_length_code = CAN_module_read(MCP_RXB0CTRL + 0x05);
     b30:	85 e6       	ldi	r24, 0x65	; 101
     b32:	0e 94 be 05 	call	0xb7c	; 0xb7c <CAN_module_read>
     b36:	f7 01       	movw	r30, r14
     b38:	82 83       	std	Z+2, r24	; 0x02
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x05));
		for (uint8_t i = 0; i < 8; i++)
     b3a:	c0 e0       	ldi	r28, 0x00	; 0
     b3c:	0b c0       	rjmp	.+22     	; 0xb54 <CAN_recieve_message+0x52>
		{
			TempMessage.data[i]= CAN_module_read(MCP_RXB0CTRL + 0x06 + i);
     b3e:	0c 2f       	mov	r16, r28
     b40:	10 e0       	ldi	r17, 0x00	; 0
     b42:	86 e6       	ldi	r24, 0x66	; 102
     b44:	8c 0f       	add	r24, r28
     b46:	0e 94 be 05 	call	0xb7c	; 0xb7c <CAN_module_read>
     b4a:	f7 01       	movw	r30, r14
     b4c:	e0 0f       	add	r30, r16
     b4e:	f1 1f       	adc	r31, r17
     b50:	83 83       	std	Z+3, r24	; 0x03
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x01));
		TempMessage.message_id[1] = CAN_module_read(MCP_RXB0CTRL + 0x02)>>5;
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x02));
		TempMessage.data_length_code = CAN_module_read(MCP_RXB0CTRL + 0x05);
		//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x05));
		for (uint8_t i = 0; i < 8; i++)
     b52:	cf 5f       	subi	r28, 0xFF	; 255
     b54:	c8 30       	cpi	r28, 0x08	; 8
     b56:	98 f3       	brcs	.-26     	; 0xb3e <CAN_recieve_message+0x3c>
		{
			TempMessage.data[i]= CAN_module_read(MCP_RXB0CTRL + 0x06 + i);
			//printf("%x\n",CAN_module_read(MCP_RXB0CTRL + 0x06+i));
		}
		message_interrupt_flag = 0;
     b58:	10 92 b8 02 	sts	0x02B8, r1	; 0x8002b8 <message_interrupt_flag>
		CAN_module_write(MCP_CANINTF, 0x00);
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	8c e2       	ldi	r24, 0x2C	; 44
     b60:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
	}
	return(TempMessage);
}
     b64:	c7 01       	movw	r24, r14
     b66:	cf 91       	pop	r28
     b68:	1f 91       	pop	r17
     b6a:	0f 91       	pop	r16
     b6c:	ff 90       	pop	r15
     b6e:	ef 90       	pop	r14
     b70:	08 95       	ret

00000b72 <CAN_module_activate_cs>:
	SPI_Transmit(MCP_BITMOD);
	SPI_Transmit(addr);
	SPI_Transmit(bit);
	SPI_Transmit(data);	
	CAN_module_deactivate_cs();
}
     b72:	18 ba       	out	0x18, r1	; 24
     b74:	08 95       	ret

00000b76 <CAN_module_deactivate_cs>:
     b76:	80 e1       	ldi	r24, 0x10	; 16
     b78:	88 bb       	out	0x18, r24	; 24
     b7a:	08 95       	ret

00000b7c <CAN_module_read>:
     b7c:	cf 93       	push	r28
     b7e:	c8 2f       	mov	r28, r24
     b80:	0e 94 b9 05 	call	0xb72	; 0xb72 <CAN_module_activate_cs>
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
     b8a:	8c 2f       	mov	r24, r28
     b8c:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
     b90:	0e 94 ed 0c 	call	0x19da	; 0x19da <SPI_Recieve>
     b94:	c8 2f       	mov	r28, r24
     b96:	0e 94 bb 05 	call	0xb76	; 0xb76 <CAN_module_deactivate_cs>
     b9a:	8c 2f       	mov	r24, r28
     b9c:	cf 91       	pop	r28
     b9e:	08 95       	ret

00000ba0 <CAN_module_write>:
     ba0:	cf 93       	push	r28
     ba2:	df 93       	push	r29
     ba4:	d8 2f       	mov	r29, r24
     ba6:	c6 2f       	mov	r28, r22
     ba8:	0e 94 b9 05 	call	0xb72	; 0xb72 <CAN_module_activate_cs>
     bac:	82 e0       	ldi	r24, 0x02	; 2
     bae:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
     bb2:	8d 2f       	mov	r24, r29
     bb4:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
     bb8:	8c 2f       	mov	r24, r28
     bba:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
     bbe:	0e 94 bb 05 	call	0xb76	; 0xb76 <CAN_module_deactivate_cs>
     bc2:	df 91       	pop	r29
     bc4:	cf 91       	pop	r28
     bc6:	08 95       	ret

00000bc8 <CAN_module_reset>:

void CAN_module_reset(void){
	CAN_module_activate_cs();
     bc8:	0e 94 b9 05 	call	0xb72	; 0xb72 <CAN_module_activate_cs>
	SPI_Transmit(MCP_RESET);
     bcc:	80 ec       	ldi	r24, 0xC0	; 192
     bce:	0e 94 e9 0c 	call	0x19d2	; 0x19d2 <SPI_Transmit>
	CAN_module_deactivate_cs();
     bd2:	0e 94 bb 05 	call	0xb76	; 0xb76 <CAN_module_deactivate_cs>
     bd6:	81 ee       	ldi	r24, 0xE1	; 225
     bd8:	94 e0       	ldi	r25, 0x04	; 4
     bda:	01 97       	sbiw	r24, 0x01	; 1
     bdc:	f1 f7       	brne	.-4      	; 0xbda <CAN_module_reset+0x12>
     bde:	00 c0       	rjmp	.+0      	; 0xbe0 <CAN_module_reset+0x18>
     be0:	00 00       	nop
     be2:	08 95       	ret

00000be4 <CAN_module_init>:
	_delay_ms(5); // Change if timing is off
}

void CAN_module_init(){
	CAN_module_reset();
     be4:	0e 94 e4 05 	call	0xbc8	; 0xbc8 <CAN_module_reset>
	CAN_module_write(MCP_CANCTRL, MODE_NORMAL);
     be8:	60 e0       	ldi	r22, 0x00	; 0
     bea:	8f e0       	ldi	r24, 0x0F	; 15
     bec:	0e 94 d0 05 	call	0xba0	; 0xba0 <CAN_module_write>
     bf0:	08 95       	ret

00000bf2 <control>:

CAN_message_struct message;

void control(void)
{
	message.message_id[0] = 0xFF;
     bf2:	e3 ef       	ldi	r30, 0xF3	; 243
     bf4:	f2 e0       	ldi	r31, 0x02	; 2
     bf6:	8f ef       	ldi	r24, 0xFF	; 255
     bf8:	80 83       	st	Z, r24
	message.message_id[1] = 0xFF;
     bfa:	81 83       	std	Z+1, r24	; 0x01
	message.data_length_code = 7;
     bfc:	87 e0       	ldi	r24, 0x07	; 7
     bfe:	82 83       	std	Z+2, r24	; 0x02
	message.data[0]=(uint8_t)joyyPercent+100;
     c00:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <joyyPercent>
     c04:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <joyyPercent+0x1>
     c08:	8c 59       	subi	r24, 0x9C	; 156
     c0a:	83 83       	std	Z+3, r24	; 0x03
	message.data[1]=(uint8_t)joyxPercent+100;
     c0c:	80 91 c7 02 	lds	r24, 0x02C7	; 0x8002c7 <joyxPercent>
     c10:	90 91 c8 02 	lds	r25, 0x02C8	; 0x8002c8 <joyxPercent+0x1>
     c14:	8c 59       	subi	r24, 0x9C	; 156
     c16:	84 83       	std	Z+4, r24	; 0x04
	message.data[2]=sliderLeft;
     c18:	80 91 cd 02 	lds	r24, 0x02CD	; 0x8002cd <sliderLeft>
     c1c:	90 91 ce 02 	lds	r25, 0x02CE	; 0x8002ce <sliderLeft+0x1>
     c20:	85 83       	std	Z+5, r24	; 0x05
	message.data[3]=sliderRight;
     c22:	80 91 bf 02 	lds	r24, 0x02BF	; 0x8002bf <sliderRight>
     c26:	90 91 c0 02 	lds	r25, 0x02C0	; 0x8002c0 <sliderRight+0x1>
     c2a:	86 83       	std	Z+6, r24	; 0x06
	message.data[4]=button1State;
     c2c:	80 91 ea 02 	lds	r24, 0x02EA	; 0x8002ea <button1State>
     c30:	87 83       	std	Z+7, r24	; 0x07
	message.data[5]=button3State;
     c32:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
     c36:	80 87       	std	Z+8, r24	; 0x08
	message.data[6]=button2State;
     c38:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <button2State>
     c3c:	81 87       	std	Z+9, r24	; 0x09
	CAN_send_message(&message);
     c3e:	cf 01       	movw	r24, r30
     c40:	0e 94 4d 05 	call	0xa9a	; 0xa9a <CAN_send_message>
     c44:	83 ec       	ldi	r24, 0xC3	; 195
     c46:	99 e0       	ldi	r25, 0x09	; 9
     c48:	01 97       	sbiw	r24, 0x01	; 1
     c4a:	f1 f7       	brne	.-4      	; 0xc48 <control+0x56>
     c4c:	00 c0       	rjmp	.+0      	; 0xc4e <control+0x5c>
     c4e:	00 00       	nop
     c50:	08 95       	ret

00000c52 <score>:
	_delay_ms(10);
}

int score(void)
{
     c52:	0f 93       	push	r16
     c54:	1f 93       	push	r17
     c56:	cf 93       	push	r28
     c58:	df 93       	push	r29
     c5a:	cd b7       	in	r28, 0x3d	; 61
     c5c:	de b7       	in	r29, 0x3e	; 62
     c5e:	2b 97       	sbiw	r28, 0x0b	; 11
     c60:	0f b6       	in	r0, 0x3f	; 63
     c62:	f8 94       	cli
     c64:	de bf       	out	0x3e, r29	; 62
     c66:	0f be       	out	0x3f, r0	; 63
     c68:	cd bf       	out	0x3d, r28	; 61
	CAN_message_struct tempmessage = CAN_recieve_message();
     c6a:	ce 01       	movw	r24, r28
     c6c:	01 96       	adiw	r24, 0x01	; 1
     c6e:	0e 94 81 05 	call	0xb02	; 0xb02 <CAN_recieve_message>
     c72:	83 ec       	ldi	r24, 0xC3	; 195
     c74:	99 e0       	ldi	r25, 0x09	; 9
     c76:	01 97       	sbiw	r24, 0x01	; 1
     c78:	f1 f7       	brne	.-4      	; 0xc76 <score+0x24>
     c7a:	00 c0       	rjmp	.+0      	; 0xc7c <score+0x2a>
     c7c:	00 00       	nop
	_delay_ms(10);
	int scorevalue = tempmessage.data[0];
     c7e:	8c 81       	ldd	r24, Y+4	; 0x04
     c80:	08 2f       	mov	r16, r24
     c82:	10 e0       	ldi	r17, 0x00	; 0
	printf("%d \r\n", scorevalue);
     c84:	1f 92       	push	r1
     c86:	8f 93       	push	r24
     c88:	84 e7       	ldi	r24, 0x74	; 116
     c8a:	91 e0       	ldi	r25, 0x01	; 1
     c8c:	9f 93       	push	r25
     c8e:	8f 93       	push	r24
     c90:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	return scorevalue;
     c94:	0f 90       	pop	r0
     c96:	0f 90       	pop	r0
     c98:	0f 90       	pop	r0
     c9a:	0f 90       	pop	r0
     c9c:	c8 01       	movw	r24, r16
     c9e:	2b 96       	adiw	r28, 0x0b	; 11
     ca0:	0f b6       	in	r0, 0x3f	; 63
     ca2:	f8 94       	cli
     ca4:	de bf       	out	0x3e, r29	; 62
     ca6:	0f be       	out	0x3f, r0	; 63
     ca8:	cd bf       	out	0x3d, r28	; 61
     caa:	df 91       	pop	r29
     cac:	cf 91       	pop	r28
     cae:	1f 91       	pop	r17
     cb0:	0f 91       	pop	r16
     cb2:	08 95       	ret

00000cb4 <main>:
#define F_CPU 4915200
#define BAUDRATE 9600
#define BURR F_CPU/16/BAUDRATE-1


int main(){
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	cd b7       	in	r28, 0x3d	; 61
     cba:	de b7       	in	r29, 0x3e	; 62
     cbc:	2b 97       	sbiw	r28, 0x0b	; 11
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	f8 94       	cli
     cc2:	de bf       	out	0x3e, r29	; 62
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	cd bf       	out	0x3d, r28	; 61
	MCUCR = (1<<SRE);
     cc8:	80 e8       	ldi	r24, 0x80	; 128
     cca:	85 bf       	out	0x35, r24	; 53
	uart_start(BURR);
     ccc:	8f e1       	ldi	r24, 0x1F	; 31
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 f2 0c 	call	0x19e4	; 0x19e4 <uart_start>
	fdevopen(&uart_transmit, &uart_recieve);
     cd4:	62 e0       	ldi	r22, 0x02	; 2
     cd6:	7d e0       	ldi	r23, 0x0D	; 13
     cd8:	8c ef       	ldi	r24, 0xFC	; 252
     cda:	9c e0       	ldi	r25, 0x0C	; 12
     cdc:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <fdevopen>
	
	adc_init();
     ce0:	0e 94 3f 03 	call	0x67e	; 0x67e <adc_init>
	OLED_init();
     ce4:	0e 94 8a 07 	call	0xf14	; 0xf14 <OLED_init>
	SPI_Init();
     ce8:	0e 94 e2 0c 	call	0x19c4	; 0x19c4 <SPI_Init>
	CAN_init();
     cec:	0e 94 2b 05 	call	0xa56	; 0xa56 <CAN_init>
	CAN_message_struct message;
	
	OLED_reset();
     cf0:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
// 	message.data[5]=button3State;
// 	message.data[6]=button2State;
// 	CAN_send_message(&message);
// 	_delay_ms(10);
	
	printf("joyy: %d, joyx: %d, sliderLeft: %d, SliderRight: %d, rightbutton: %d, Leftbutton: %d, Joybutton: %d\n\r", joyyPercent, joyxPercent, sliderLeft, sliderRight, button2State, button1State, button3State);
     cf4:	a0 91 f2 02 	lds	r26, 0x02F2	; 0x8002f2 <button3State>
     cf8:	f0 91 ea 02 	lds	r31, 0x02EA	; 0x8002ea <button1State>
     cfc:	e0 91 d3 02 	lds	r30, 0x02D3	; 0x8002d3 <button2State>
     d00:	60 91 bf 02 	lds	r22, 0x02BF	; 0x8002bf <sliderRight>
     d04:	70 91 c0 02 	lds	r23, 0x02C0	; 0x8002c0 <sliderRight+0x1>
     d08:	40 91 cd 02 	lds	r20, 0x02CD	; 0x8002cd <sliderLeft>
     d0c:	50 91 ce 02 	lds	r21, 0x02CE	; 0x8002ce <sliderLeft+0x1>
     d10:	20 91 c7 02 	lds	r18, 0x02C7	; 0x8002c7 <joyxPercent>
     d14:	30 91 c8 02 	lds	r19, 0x02C8	; 0x8002c8 <joyxPercent+0x1>
     d18:	80 91 cf 02 	lds	r24, 0x02CF	; 0x8002cf <joyyPercent>
     d1c:	90 91 d0 02 	lds	r25, 0x02D0	; 0x8002d0 <joyyPercent+0x1>
     d20:	1f 92       	push	r1
     d22:	af 93       	push	r26
     d24:	1f 92       	push	r1
     d26:	ff 93       	push	r31
     d28:	1f 92       	push	r1
     d2a:	ef 93       	push	r30
     d2c:	7f 93       	push	r23
     d2e:	6f 93       	push	r22
     d30:	5f 93       	push	r21
     d32:	4f 93       	push	r20
     d34:	3f 93       	push	r19
     d36:	2f 93       	push	r18
     d38:	9f 93       	push	r25
     d3a:	8f 93       	push	r24
     d3c:	8a e7       	ldi	r24, 0x7A	; 122
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	9f 93       	push	r25
     d42:	8f 93       	push	r24
     d44:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	printf("data[0]: %d, data[1]: %d, data[2]: %d, data[3]: %d, data[4]: %d, data[5]: %d, data[6]: %d\n\n\r", message.data[0], message.data[1], message.data[2], message.data[3], message.data[4], message.data[5], message.data[6]);
     d48:	6a 85       	ldd	r22, Y+10	; 0x0a
     d4a:	59 85       	ldd	r21, Y+9	; 0x09
     d4c:	48 85       	ldd	r20, Y+8	; 0x08
     d4e:	3f 81       	ldd	r19, Y+7	; 0x07
     d50:	2e 81       	ldd	r18, Y+6	; 0x06
     d52:	9d 81       	ldd	r25, Y+5	; 0x05
     d54:	8c 81       	ldd	r24, Y+4	; 0x04
     d56:	1f 92       	push	r1
     d58:	6f 93       	push	r22
     d5a:	1f 92       	push	r1
     d5c:	5f 93       	push	r21
     d5e:	1f 92       	push	r1
     d60:	4f 93       	push	r20
     d62:	1f 92       	push	r1
     d64:	3f 93       	push	r19
     d66:	1f 92       	push	r1
     d68:	2f 93       	push	r18
     d6a:	1f 92       	push	r1
     d6c:	9f 93       	push	r25
     d6e:	1f 92       	push	r1
     d70:	8f 93       	push	r24
     d72:	80 ee       	ldi	r24, 0xE0	; 224
     d74:	91 e0       	ldi	r25, 0x01	; 1
     d76:	9f 93       	push	r25
     d78:	8f 93       	push	r24
     d7a:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <printf>
	
	main_menu();
     d7e:	0f b6       	in	r0, 0x3f	; 63
     d80:	f8 94       	cli
     d82:	de bf       	out	0x3e, r29	; 62
     d84:	0f be       	out	0x3f, r0	; 63
     d86:	cd bf       	out	0x3d, r28	; 61
     d88:	0e 94 93 0b 	call	0x1726	; 0x1726 <main_menu>
     d8c:	b3 cf       	rjmp	.-154    	; 0xcf4 <main+0x40>

00000d8e <OLED_Write_Command>:
	
	for(uint8_t i = 0; i < 128; i++){
		OLED_Write_Data(~0x00);
}
OLED_goto_line(line);
}
     d8e:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <oled_command>
     d92:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <oled_command+0x1>
     d96:	80 83       	st	Z, r24
     d98:	08 95       	ret

00000d9a <OLED_Write_Data>:
     d9a:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <oled_data>
     d9e:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <oled_data+0x1>
     da2:	80 83       	st	Z, r24
     da4:	08 95       	ret

00000da6 <fix_oled_pos>:
     da6:	80 91 ff 02 	lds	r24, 0x02FF	; 0x8002ff <pos+0x1>
     daa:	88 23       	and	r24, r24
     dac:	1c f4       	brge	.+6      	; 0xdb4 <fix_oled_pos+0xe>
     dae:	80 58       	subi	r24, 0x80	; 128
     db0:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <pos+0x1>
     db4:	ee ef       	ldi	r30, 0xFE	; 254
     db6:	f2 e0       	ldi	r31, 0x02	; 2
     db8:	80 81       	ld	r24, Z
     dba:	8f 5f       	subi	r24, 0xFF	; 255
     dbc:	80 83       	st	Z, r24
     dbe:	88 30       	cpi	r24, 0x08	; 8
     dc0:	10 f0       	brcs	.+4      	; 0xdc6 <fix_oled_pos+0x20>
     dc2:	10 92 fe 02 	sts	0x02FE, r1	; 0x8002fe <pos>
     dc6:	08 95       	ret

00000dc8 <oled_write>:
     dc8:	1f 93       	push	r17
     dca:	cf 93       	push	r28
     dcc:	df 93       	push	r29
     dce:	10 ee       	ldi	r17, 0xE0	; 224
     dd0:	18 0f       	add	r17, r24
     dd2:	c0 e0       	ldi	r28, 0x00	; 0
     dd4:	d0 e0       	ldi	r29, 0x00	; 0
     dd6:	18 c0       	rjmp	.+48     	; 0xe08 <oled_write+0x40>
     dd8:	e1 2f       	mov	r30, r17
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	ee 0f       	add	r30, r30
     dde:	ff 1f       	adc	r31, r31
     de0:	ee 0f       	add	r30, r30
     de2:	ff 1f       	adc	r31, r31
     de4:	ee 0f       	add	r30, r30
     de6:	ff 1f       	adc	r31, r31
     de8:	ec 0f       	add	r30, r28
     dea:	fd 1f       	adc	r31, r29
     dec:	e8 55       	subi	r30, 0x58	; 88
     dee:	ff 4f       	sbci	r31, 0xFF	; 255
     df0:	85 91       	lpm	r24, Z+
     df2:	94 91       	lpm	r25, Z
     df4:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
     df8:	ee ef       	ldi	r30, 0xFE	; 254
     dfa:	f2 e0       	ldi	r31, 0x02	; 2
     dfc:	81 81       	ldd	r24, Z+1	; 0x01
     dfe:	88 5f       	subi	r24, 0xF8	; 248
     e00:	81 83       	std	Z+1, r24	; 0x01
     e02:	0e 94 d3 06 	call	0xda6	; 0xda6 <fix_oled_pos>
     e06:	21 96       	adiw	r28, 0x01	; 1
     e08:	c8 30       	cpi	r28, 0x08	; 8
     e0a:	d1 05       	cpc	r29, r1
     e0c:	2c f3       	brlt	.-54     	; 0xdd8 <oled_write+0x10>
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	df 91       	pop	r29
     e14:	cf 91       	pop	r28
     e16:	1f 91       	pop	r17
     e18:	08 95       	ret

00000e1a <set_addressingMode>:
     e1a:	cf 93       	push	r28
     e1c:	c8 2f       	mov	r28, r24
     e1e:	80 e2       	ldi	r24, 0x20	; 32
     e20:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     e24:	8c 2f       	mov	r24, r28
     e26:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     e2a:	cf 91       	pop	r28
     e2c:	08 95       	ret

00000e2e <OLED_goto_line>:
     e2e:	cf 93       	push	r28
     e30:	c8 2f       	mov	r28, r24
     e32:	88 30       	cpi	r24, 0x08	; 8
     e34:	78 f4       	brcc	.+30     	; 0xe54 <OLED_goto_line+0x26>
     e36:	80 93 fe 02 	sts	0x02FE, r24	; 0x8002fe <pos>
     e3a:	82 e0       	ldi	r24, 0x02	; 2
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	0e 94 0d 07 	call	0xe1a	; 0xe1a <set_addressingMode>
     e42:	80 eb       	ldi	r24, 0xB0	; 176
     e44:	8c 0f       	add	r24, r28
     e46:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	0e 94 0d 07 	call	0xe1a	; 0xe1a <set_addressingMode>
     e52:	06 c0       	rjmp	.+12     	; 0xe60 <OLED_goto_line+0x32>
     e54:	8d e3       	ldi	r24, 0x3D	; 61
     e56:	92 e0       	ldi	r25, 0x02	; 2
     e58:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <puts>
     e5c:	80 e0       	ldi	r24, 0x00	; 0
     e5e:	90 e0       	ldi	r25, 0x00	; 0
     e60:	cf 91       	pop	r28
     e62:	08 95       	ret

00000e64 <OLED_goto_column>:
     e64:	cf 93       	push	r28
     e66:	df 93       	push	r29
     e68:	c8 2f       	mov	r28, r24
     e6a:	88 23       	and	r24, r24
     e6c:	b4 f0       	brlt	.+44     	; 0xe9a <OLED_goto_column+0x36>
     e6e:	80 93 ff 02 	sts	0x02FF, r24	; 0x8002ff <pos+0x1>
     e72:	82 e0       	ldi	r24, 0x02	; 2
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	0e 94 0d 07 	call	0xe1a	; 0xe1a <set_addressingMode>
     e7a:	dc 2f       	mov	r29, r28
     e7c:	d2 95       	swap	r29
     e7e:	df 70       	andi	r29, 0x0F	; 15
     e80:	8c 2f       	mov	r24, r28
     e82:	8f 70       	andi	r24, 0x0F	; 15
     e84:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     e88:	80 e1       	ldi	r24, 0x10	; 16
     e8a:	8d 0f       	add	r24, r29
     e8c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	0e 94 0d 07 	call	0xe1a	; 0xe1a <set_addressingMode>
     e98:	06 c0       	rjmp	.+12     	; 0xea6 <OLED_goto_column+0x42>
     e9a:	80 e5       	ldi	r24, 0x50	; 80
     e9c:	92 e0       	ldi	r25, 0x02	; 2
     e9e:	0e 94 a6 0f 	call	0x1f4c	; 0x1f4c <puts>
     ea2:	80 e0       	ldi	r24, 0x00	; 0
     ea4:	90 e0       	ldi	r25, 0x00	; 0
     ea6:	df 91       	pop	r29
     ea8:	cf 91       	pop	r28
     eaa:	08 95       	ret

00000eac <OLED_goto_pos>:
     eac:	cf 93       	push	r28
     eae:	c6 2f       	mov	r28, r22
     eb0:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_line>
     eb4:	8c 2f       	mov	r24, r28
     eb6:	0e 94 32 07 	call	0xe64	; 0xe64 <OLED_goto_column>
     eba:	cf 91       	pop	r28
     ebc:	08 95       	ret

00000ebe <OLED_home>:
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	80 e0       	ldi	r24, 0x00	; 0
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
     eca:	08 95       	ret

00000ecc <OLED_clear_line>:
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	d8 2f       	mov	r29, r24
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
     edc:	c0 e0       	ldi	r28, 0x00	; 0
     ede:	04 c0       	rjmp	.+8      	; 0xee8 <OLED_clear_line+0x1c>
     ee0:	80 e0       	ldi	r24, 0x00	; 0
     ee2:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
     ee6:	cf 5f       	subi	r28, 0xFF	; 255
     ee8:	cc 23       	and	r28, r28
     eea:	d4 f7       	brge	.-12     	; 0xee0 <OLED_clear_line+0x14>
     eec:	8d 2f       	mov	r24, r29
     eee:	0e 94 17 07 	call	0xe2e	; 0xe2e <OLED_goto_line>
     ef2:	df 91       	pop	r29
     ef4:	cf 91       	pop	r28
     ef6:	08 95       	ret

00000ef8 <OLED_reset>:
     ef8:	cf 93       	push	r28
     efa:	c0 e0       	ldi	r28, 0x00	; 0
     efc:	05 c0       	rjmp	.+10     	; 0xf08 <OLED_reset+0x10>
     efe:	8c 2f       	mov	r24, r28
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	0e 94 66 07 	call	0xecc	; 0xecc <OLED_clear_line>
     f06:	cf 5f       	subi	r28, 0xFF	; 255
     f08:	c8 30       	cpi	r28, 0x08	; 8
     f0a:	c8 f3       	brcs	.-14     	; 0xefe <OLED_reset+0x6>
     f0c:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
     f10:	cf 91       	pop	r28
     f12:	08 95       	ret

00000f14 <OLED_init>:
     f14:	8e ea       	ldi	r24, 0xAE	; 174
     f16:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f1a:	81 ea       	ldi	r24, 0xA1	; 161
     f1c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f20:	8a ed       	ldi	r24, 0xDA	; 218
     f22:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f26:	82 e1       	ldi	r24, 0x12	; 18
     f28:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f2c:	88 ec       	ldi	r24, 0xC8	; 200
     f2e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f32:	88 ea       	ldi	r24, 0xA8	; 168
     f34:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f38:	8f e3       	ldi	r24, 0x3F	; 63
     f3a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f3e:	85 ed       	ldi	r24, 0xD5	; 213
     f40:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f44:	80 e8       	ldi	r24, 0x80	; 128
     f46:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f4a:	81 e8       	ldi	r24, 0x81	; 129
     f4c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f50:	80 e5       	ldi	r24, 0x50	; 80
     f52:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f56:	89 ed       	ldi	r24, 0xD9	; 217
     f58:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f5c:	81 e2       	ldi	r24, 0x21	; 33
     f5e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f62:	80 e2       	ldi	r24, 0x20	; 32
     f64:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f68:	82 e0       	ldi	r24, 0x02	; 2
     f6a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f6e:	8b ed       	ldi	r24, 0xDB	; 219
     f70:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f74:	80 e3       	ldi	r24, 0x30	; 48
     f76:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f7a:	8d ea       	ldi	r24, 0xAD	; 173
     f7c:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f86:	84 ea       	ldi	r24, 0xA4	; 164
     f88:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f8c:	86 ea       	ldi	r24, 0xA6	; 166
     f8e:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f92:	8f ea       	ldi	r24, 0xAF	; 175
     f94:	0e 94 c7 06 	call	0xd8e	; 0xd8e <OLED_Write_Command>
     f98:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
     f9c:	08 95       	ret

00000f9e <OLED_clear_arrow>:
     f9e:	cf 93       	push	r28
     fa0:	df 93       	push	r29
     fa2:	d0 e0       	ldi	r29, 0x00	; 0
     fa4:	0f c0       	rjmp	.+30     	; 0xfc4 <OLED_clear_arrow+0x26>
     fa6:	60 e0       	ldi	r22, 0x00	; 0
     fa8:	70 e0       	ldi	r23, 0x00	; 0
     faa:	8d 2f       	mov	r24, r29
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
     fb2:	c0 e0       	ldi	r28, 0x00	; 0
     fb4:	04 c0       	rjmp	.+8      	; 0xfbe <OLED_clear_arrow+0x20>
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
     fbc:	cf 5f       	subi	r28, 0xFF	; 255
     fbe:	c8 30       	cpi	r28, 0x08	; 8
     fc0:	d0 f3       	brcs	.-12     	; 0xfb6 <OLED_clear_arrow+0x18>
     fc2:	df 5f       	subi	r29, 0xFF	; 255
     fc4:	d8 30       	cpi	r29, 0x08	; 8
     fc6:	78 f3       	brcs	.-34     	; 0xfa6 <OLED_clear_arrow+0x8>
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	08 95       	ret

00000fce <OLED_print_arrow>:
	
}

void OLED_print_arrow ( uint8_t row , uint8_t col )
{
	OLED_goto_pos(row , col);
     fce:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
	OLED_Write_Data(0b00011000);
     fd2:	88 e1       	ldi	r24, 0x18	; 24
     fd4:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
	OLED_Write_Data(0b00011000);
     fd8:	88 e1       	ldi	r24, 0x18	; 24
     fda:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
	OLED_Write_Data(0b01111110);
     fde:	8e e7       	ldi	r24, 0x7E	; 126
     fe0:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
	OLED_Write_Data(0b00111100);
     fe4:	8c e3       	ldi	r24, 0x3C	; 60
     fe6:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
	OLED_Write_Data(0b00011000);
     fea:	88 e1       	ldi	r24, 0x18	; 24
     fec:	0e 94 cd 06 	call	0xd9a	; 0xd9a <OLED_Write_Data>
     ff0:	08 95       	ret

00000ff2 <oled_printf>:
void set_addressingMode(addressingMode mode){
	OLED_Write_Command(0x20);
	OLED_Write_Command(mode);
}

void oled_printf(char* data, ...){
     ff2:	cf 93       	push	r28
     ff4:	df 93       	push	r29
     ff6:	cd b7       	in	r28, 0x3d	; 61
     ff8:	de b7       	in	r29, 0x3e	; 62
     ffa:	ae 01       	movw	r20, r28
     ffc:	4b 5f       	subi	r20, 0xFB	; 251
     ffe:	5f 4f       	sbci	r21, 0xFF	; 255
    1000:	fa 01       	movw	r30, r20
    1002:	61 91       	ld	r22, Z+
    1004:	71 91       	ld	r23, Z+
    1006:	af 01       	movw	r20, r30
	va_list args;
	va_start(args, data);
	vfprintf(&mystdout, data, args);
    1008:	88 e0       	ldi	r24, 0x08	; 8
    100a:	91 e0       	ldi	r25, 0x01	; 1
    100c:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <vfprintf>
	va_end(args);
	
}
    1010:	df 91       	pop	r29
    1012:	cf 91       	pop	r28
    1014:	08 95       	ret

00001016 <OLED_center>:

void OLED_center(char* toAlign) {
	OLED_goto_column(64- 8*strlen(toAlign)/2);
    1016:	fc 01       	movw	r30, r24
    1018:	01 90       	ld	r0, Z+
    101a:	00 20       	and	r0, r0
    101c:	e9 f7       	brne	.-6      	; 0x1018 <OLED_center+0x2>
    101e:	31 97       	sbiw	r30, 0x01	; 1
    1020:	e8 1b       	sub	r30, r24
    1022:	f9 0b       	sbc	r31, r25
    1024:	ee 0f       	add	r30, r30
    1026:	ff 1f       	adc	r31, r31
    1028:	ee 0f       	add	r30, r30
    102a:	ff 1f       	adc	r31, r31
    102c:	ee 0f       	add	r30, r30
    102e:	ff 1f       	adc	r31, r31
    1030:	f6 95       	lsr	r31
    1032:	e7 95       	ror	r30
    1034:	80 e4       	ldi	r24, 0x40	; 64
    1036:	8e 1b       	sub	r24, r30
    1038:	0e 94 32 07 	call	0xe64	; 0xe64 <OLED_goto_column>
    103c:	08 95       	ret

0000103e <play_menu>:
    OLED_print_arrow(arrow, 0);
}

// Each submenu is its own function that loops and functions similary like the main menu
void play_menu(void)
{
    103e:	0f 93       	push	r16
    1040:	1f 93       	push	r17
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
	OLED_reset();
    1046:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
    104a:	01 c0       	rjmp	.+2      	; 0x104e <play_menu+0x10>
    OLED_print_arrow(arrow, 0);
}

// Each submenu is its own function that loops and functions similary like the main menu
void play_menu(void)
{
    104c:	8e 01       	movw	r16, r28
	OLED_reset();
	while(1)
	{
		if (button3State == 0)
    104e:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    1052:	81 11       	cpse	r24, r1
    1054:	04 c0       	rjmp	.+8      	; 0x105e <play_menu+0x20>
		{
			button_flag = 0;
    1056:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    105a:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
		}
		
		OLED_home();
    105e:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
		OLED_center("Play");
    1062:	85 e6       	ldi	r24, 0x65	; 101
    1064:	92 e0       	ldi	r25, 0x02	; 2
    1066:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("Play");
    106a:	85 e6       	ldi	r24, 0x65	; 101
    106c:	92 e0       	ldi	r25, 0x02	; 2
    106e:	9f 93       	push	r25
    1070:	8f 93       	push	r24
    1072:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
		OLED_goto_pos(1, 0);
    1076:	60 e0       	ldi	r22, 0x00	; 0
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
		OLED_center("LB to quit");
    107e:	8a e6       	ldi	r24, 0x6A	; 106
    1080:	92 e0       	ldi	r25, 0x02	; 2
    1082:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("LB to quit");
    1086:	8a e6       	ldi	r24, 0x6A	; 106
    1088:	92 e0       	ldi	r25, 0x02	; 2
    108a:	9f 93       	push	r25
    108c:	8f 93       	push	r24
    108e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>

		if (button2State == 1)
    1092:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <button2State>
    1096:	0f 90       	pop	r0
    1098:	0f 90       	pop	r0
    109a:	0f 90       	pop	r0
    109c:	0f 90       	pop	r0
    109e:	81 30       	cpi	r24, 0x01	; 1
    10a0:	49 f4       	brne	.+18     	; 0x10b4 <play_menu+0x76>
		{
			arrow = 1;
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    10aa:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			OLED_reset();
    10ae:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
			OLED_clear_line(5);
		}
		
		qscore_old = qscore;
	}
}
    10b2:	2a c0       	rjmp	.+84     	; 0x1108 <play_menu+0xca>
			
			break;
		}
		
		// Game stuff
		control();
    10b4:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <control>
		int qscore = score();
    10b8:	0e 94 29 06 	call	0xc52	; 0xc52 <score>
    10bc:	ec 01       	movw	r28, r24
		int qscore_old;
 		
 		OLED_goto_pos(4,0);
    10be:	60 e0       	ldi	r22, 0x00	; 0
    10c0:	84 e0       	ldi	r24, 0x04	; 4
    10c2:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
 		OLED_center("Score:");
    10c6:	85 e7       	ldi	r24, 0x75	; 117
    10c8:	92 e0       	ldi	r25, 0x02	; 2
    10ca:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("Score:");
    10ce:	85 e7       	ldi	r24, 0x75	; 117
    10d0:	92 e0       	ldi	r25, 0x02	; 2
    10d2:	9f 93       	push	r25
    10d4:	8f 93       	push	r24
    10d6:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
 		OLED_goto_pos(5,0);
    10da:	60 e0       	ldi	r22, 0x00	; 0
    10dc:	85 e0       	ldi	r24, 0x05	; 5
    10de:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
		OLED_center(qscore);
    10e2:	ce 01       	movw	r24, r28
    10e4:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
 		oled_printf(qscore);
    10e8:	df 93       	push	r29
    10ea:	cf 93       	push	r28
    10ec:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
		if (qscore != qscore_old)
    10f0:	0f 90       	pop	r0
    10f2:	0f 90       	pop	r0
    10f4:	0f 90       	pop	r0
    10f6:	0f 90       	pop	r0
    10f8:	0c 17       	cp	r16, r28
    10fa:	1d 07       	cpc	r17, r29
    10fc:	09 f4       	brne	.+2      	; 0x1100 <play_menu+0xc2>
    10fe:	a6 cf       	rjmp	.-180    	; 0x104c <play_menu+0xe>
		{
			OLED_clear_line(5);
    1100:	85 e0       	ldi	r24, 0x05	; 5
    1102:	0e 94 66 07 	call	0xecc	; 0xecc <OLED_clear_line>
    1106:	a2 cf       	rjmp	.-188    	; 0x104c <play_menu+0xe>
		}
		
		qscore_old = qscore;
	}
}
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	1f 91       	pop	r17
    110e:	0f 91       	pop	r16
    1110:	08 95       	ret

00001112 <users_menu>:

void users_menu(void)
{
	arrow_pos = 1;
    1112:	81 e0       	ldi	r24, 0x01	; 1
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    111a:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	if (button3State == 0)
    111e:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    1122:	81 11       	cpse	r24, r1
    1124:	04 c0       	rjmp	.+8      	; 0x112e <users_menu+0x1c>
	{
		button_flag = 0;
    1126:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    112a:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
	}
	while(1)
	{
		arrow = 1;
    112e:	81 e0       	ldi	r24, 0x01	; 1
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1136:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
		if (button3State == 0)
    113a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    113e:	81 11       	cpse	r24, r1
    1140:	04 c0       	rjmp	.+8      	; 0x114a <users_menu+0x38>
		{
			button_flag = 0;
    1142:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    1146:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
		}
		
		OLED_home();
    114a:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
		OLED_center("Users");
    114e:	8c e7       	ldi	r24, 0x7C	; 124
    1150:	92 e0       	ldi	r25, 0x02	; 2
    1152:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("Users");
    1156:	8c e7       	ldi	r24, 0x7C	; 124
    1158:	92 e0       	ldi	r25, 0x02	; 2
    115a:	9f 93       	push	r25
    115c:	8f 93       	push	r24
    115e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
		OLED_goto_pos(7, 9);
    1162:	69 e0       	ldi	r22, 0x09	; 9
    1164:	87 e0       	ldi	r24, 0x07	; 7
    1166:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
		oled_printf("Back");
    116a:	82 e8       	ldi	r24, 0x82	; 130
    116c:	92 e0       	ldi	r25, 0x02	; 2
    116e:	9f 93       	push	r25
    1170:	8f 93       	push	r24
    1172:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1176:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    117a:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    117e:	0f 90       	pop	r0
    1180:	0f 90       	pop	r0
    1182:	0f 90       	pop	r0
    1184:	0f 90       	pop	r0
    1186:	88 3c       	cpi	r24, 0xC8	; 200
    1188:	91 05       	cpc	r25, r1
    118a:	dc f4       	brge	.+54     	; 0x11c2 <users_menu+0xb0>
    118c:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    1190:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    1194:	01 97       	sbiw	r24, 0x01	; 1
    1196:	31 f0       	breq	.+12     	; 0x11a4 <users_menu+0x92>
    1198:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    119c:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    11a0:	01 97       	sbiw	r24, 0x01	; 1
    11a2:	79 f4       	brne	.+30     	; 0x11c2 <users_menu+0xb0>
		{
			if (joyy > 100)
    11a4:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    11a8:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    11ac:	85 36       	cpi	r24, 0x65	; 101
    11ae:	91 05       	cpc	r25, r1
    11b0:	44 f0       	brlt	.+16     	; 0x11c2 <users_menu+0xb0>
			{
				flag_down = 0;
    11b2:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <flag_down+0x1>
    11b6:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <flag_down>
				flag_up = 0;
    11ba:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <flag_up+0x1>
    11be:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    11c2:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    11c6:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    11ca:	88 3c       	cpi	r24, 0xC8	; 200
    11cc:	91 05       	cpc	r25, r1
    11ce:	1c f1       	brlt	.+70     	; 0x1216 <users_menu+0x104>
    11d0:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    11d4:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    11d8:	89 2b       	or	r24, r25
    11da:	e9 f4       	brne	.+58     	; 0x1216 <users_menu+0x104>
		{
			arrow_pos--;
    11dc:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    11e0:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    11e4:	01 97       	sbiw	r24, 0x01	; 1
    11e6:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    11ea:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_up = 1;
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	90 e0       	ldi	r25, 0x00	; 0
    11f2:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <flag_up+0x1>
    11f6:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <flag_up>
			OLED_clear_arrow();
    11fa:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 0)
    11fe:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1202:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1206:	89 2b       	or	r24, r25
    1208:	31 f4       	brne	.+12     	; 0x1216 <users_menu+0x104>
			{
				arrow_pos = 7;
    120a:	87 e0       	ldi	r24, 0x07	; 7
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1212:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1216:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    121a:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    121e:	85 36       	cpi	r24, 0x65	; 101
    1220:	91 05       	cpc	r25, r1
    1222:	1c f5       	brge	.+70     	; 0x126a <users_menu+0x158>
    1224:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    1228:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    122c:	89 2b       	or	r24, r25
    122e:	e9 f4       	brne	.+58     	; 0x126a <users_menu+0x158>
		{
			arrow_pos++;
    1230:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1234:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1238:	01 96       	adiw	r24, 0x01	; 1
    123a:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    123e:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_down = 1;
    1242:	81 e0       	ldi	r24, 0x01	; 1
    1244:	90 e0       	ldi	r25, 0x00	; 0
    1246:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <flag_down+0x1>
    124a:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <flag_down>
			OLED_clear_arrow();
    124e:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 8)
    1252:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1256:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    125a:	08 97       	sbiw	r24, 0x08	; 8
    125c:	31 f4       	brne	.+12     	; 0x126a <users_menu+0x158>
			{
				arrow_pos = 1;
    125e:	81 e0       	ldi	r24, 0x01	; 1
    1260:	90 e0       	ldi	r25, 0x00	; 0
    1262:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1266:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		switch (arrow_pos)
    126a:	e0 91 00 03 	lds	r30, 0x0300	; 0x800300 <arrow_pos>
    126e:	f0 91 01 03 	lds	r31, 0x0301	; 0x800301 <arrow_pos+0x1>
    1272:	31 97       	sbiw	r30, 0x01	; 1
    1274:	e7 30       	cpi	r30, 0x07	; 7
    1276:	f1 05       	cpc	r31, r1
    1278:	a0 f5       	brcc	.+104    	; 0x12e2 <users_menu+0x1d0>
    127a:	e8 5c       	subi	r30, 0xC8	; 200
    127c:	ff 4f       	sbci	r31, 0xFF	; 255
    127e:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__tablejump2__>
		{
			case 1:
			arrow = 1;
    1282:	81 e0       	ldi	r24, 0x01	; 1
    1284:	90 e0       	ldi	r25, 0x00	; 0
    1286:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    128a:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    128e:	29 c0       	rjmp	.+82     	; 0x12e2 <users_menu+0x1d0>
			case 2:
			arrow = 2;
    1290:	82 e0       	ldi	r24, 0x02	; 2
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1298:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    129c:	22 c0       	rjmp	.+68     	; 0x12e2 <users_menu+0x1d0>
			case 3:
			arrow = 3;
    129e:	83 e0       	ldi	r24, 0x03	; 3
    12a0:	90 e0       	ldi	r25, 0x00	; 0
    12a2:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    12a6:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    12aa:	1b c0       	rjmp	.+54     	; 0x12e2 <users_menu+0x1d0>
			case 4:
			arrow = 4;
    12ac:	84 e0       	ldi	r24, 0x04	; 4
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    12b4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    12b8:	14 c0       	rjmp	.+40     	; 0x12e2 <users_menu+0x1d0>
			case 5:
			arrow = 5;
    12ba:	85 e0       	ldi	r24, 0x05	; 5
    12bc:	90 e0       	ldi	r25, 0x00	; 0
    12be:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    12c2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    12c6:	0d c0       	rjmp	.+26     	; 0x12e2 <users_menu+0x1d0>
			case 6:
			arrow = 6;
    12c8:	86 e0       	ldi	r24, 0x06	; 6
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    12d0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    12d4:	06 c0       	rjmp	.+12     	; 0x12e2 <users_menu+0x1d0>
			case 7:
			arrow = 7;
    12d6:	87 e0       	ldi	r24, 0x07	; 7
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    12de:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    12e2:	60 e0       	ldi	r22, 0x00	; 0
    12e4:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    12e8:	0e 94 e7 07 	call	0xfce	; 0xfce <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    12ec:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    12f0:	81 30       	cpi	r24, 0x01	; 1
    12f2:	09 f0       	breq	.+2      	; 0x12f6 <users_menu+0x1e4>
    12f4:	1c cf       	rjmp	.-456    	; 0x112e <users_menu+0x1c>
    12f6:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    12fa:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <arrow+0x1>
    12fe:	07 97       	sbiw	r24, 0x07	; 7
    1300:	09 f0       	breq	.+2      	; 0x1304 <users_menu+0x1f2>
    1302:	15 cf       	rjmp	.-470    	; 0x112e <users_menu+0x1c>
		{
			arrow = 1;
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    130c:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			OLED_clear_arrow();
    1310:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			OLED_reset();
    1314:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    1318:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
    131c:	08 95       	ret

0000131e <hs_menu>:
}

void hs_menu(void)
{
	arrow_pos = 1;
    131e:	81 e0       	ldi	r24, 0x01	; 1
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1326:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	if (button3State == 0)
    132a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    132e:	81 11       	cpse	r24, r1
    1330:	04 c0       	rjmp	.+8      	; 0x133a <hs_menu+0x1c>
	{
 		button_flag = 0;
    1332:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    1336:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
	}
	while(1)
	{
		arrow = 1;
    133a:	81 e0       	ldi	r24, 0x01	; 1
    133c:	90 e0       	ldi	r25, 0x00	; 0
    133e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1342:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
		if (button3State == 0)
    1346:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    134a:	81 11       	cpse	r24, r1
    134c:	04 c0       	rjmp	.+8      	; 0x1356 <hs_menu+0x38>
		{
			button_flag = 0;
    134e:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    1352:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
		}
		
		OLED_home();
    1356:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
		OLED_center("High Scores");
    135a:	87 e8       	ldi	r24, 0x87	; 135
    135c:	92 e0       	ldi	r25, 0x02	; 2
    135e:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("High Scores");
    1362:	87 e8       	ldi	r24, 0x87	; 135
    1364:	92 e0       	ldi	r25, 0x02	; 2
    1366:	9f 93       	push	r25
    1368:	8f 93       	push	r24
    136a:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
		OLED_goto_pos(7, 9);
    136e:	69 e0       	ldi	r22, 0x09	; 9
    1370:	87 e0       	ldi	r24, 0x07	; 7
    1372:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
		oled_printf("Back");
    1376:	82 e8       	ldi	r24, 0x82	; 130
    1378:	92 e0       	ldi	r25, 0x02	; 2
    137a:	9f 93       	push	r25
    137c:	8f 93       	push	r24
    137e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1382:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    1386:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    138a:	0f 90       	pop	r0
    138c:	0f 90       	pop	r0
    138e:	0f 90       	pop	r0
    1390:	0f 90       	pop	r0
    1392:	88 3c       	cpi	r24, 0xC8	; 200
    1394:	91 05       	cpc	r25, r1
    1396:	dc f4       	brge	.+54     	; 0x13ce <hs_menu+0xb0>
    1398:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    139c:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    13a0:	01 97       	sbiw	r24, 0x01	; 1
    13a2:	31 f0       	breq	.+12     	; 0x13b0 <hs_menu+0x92>
    13a4:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    13a8:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    13ac:	01 97       	sbiw	r24, 0x01	; 1
    13ae:	79 f4       	brne	.+30     	; 0x13ce <hs_menu+0xb0>
		{
			if (joyy > 100)
    13b0:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    13b4:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    13b8:	85 36       	cpi	r24, 0x65	; 101
    13ba:	91 05       	cpc	r25, r1
    13bc:	44 f0       	brlt	.+16     	; 0x13ce <hs_menu+0xb0>
			{
				flag_down = 0;
    13be:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <flag_down+0x1>
    13c2:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <flag_down>
				flag_up = 0;
    13c6:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <flag_up+0x1>
    13ca:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    13ce:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    13d2:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    13d6:	88 3c       	cpi	r24, 0xC8	; 200
    13d8:	91 05       	cpc	r25, r1
    13da:	1c f1       	brlt	.+70     	; 0x1422 <hs_menu+0x104>
    13dc:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    13e0:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    13e4:	89 2b       	or	r24, r25
    13e6:	e9 f4       	brne	.+58     	; 0x1422 <hs_menu+0x104>
		{
			arrow_pos--;
    13e8:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    13ec:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    13f0:	01 97       	sbiw	r24, 0x01	; 1
    13f2:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    13f6:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_up = 1;
    13fa:	81 e0       	ldi	r24, 0x01	; 1
    13fc:	90 e0       	ldi	r25, 0x00	; 0
    13fe:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <flag_up+0x1>
    1402:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <flag_up>
			OLED_clear_arrow();
    1406:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 0)
    140a:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    140e:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1412:	89 2b       	or	r24, r25
    1414:	31 f4       	brne	.+12     	; 0x1422 <hs_menu+0x104>
			{
				arrow_pos = 7;
    1416:	87 e0       	ldi	r24, 0x07	; 7
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    141e:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1422:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    1426:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    142a:	85 36       	cpi	r24, 0x65	; 101
    142c:	91 05       	cpc	r25, r1
    142e:	1c f5       	brge	.+70     	; 0x1476 <hs_menu+0x158>
    1430:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    1434:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    1438:	89 2b       	or	r24, r25
    143a:	e9 f4       	brne	.+58     	; 0x1476 <hs_menu+0x158>
		{
			arrow_pos++;
    143c:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1440:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1444:	01 96       	adiw	r24, 0x01	; 1
    1446:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    144a:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_down = 1;
    144e:	81 e0       	ldi	r24, 0x01	; 1
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <flag_down+0x1>
    1456:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <flag_down>
			OLED_clear_arrow();
    145a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 8)
    145e:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1462:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1466:	08 97       	sbiw	r24, 0x08	; 8
    1468:	31 f4       	brne	.+12     	; 0x1476 <hs_menu+0x158>
			{
				arrow_pos = 1;
    146a:	81 e0       	ldi	r24, 0x01	; 1
    146c:	90 e0       	ldi	r25, 0x00	; 0
    146e:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1472:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		switch (arrow_pos)
    1476:	e0 91 00 03 	lds	r30, 0x0300	; 0x800300 <arrow_pos>
    147a:	f0 91 01 03 	lds	r31, 0x0301	; 0x800301 <arrow_pos+0x1>
    147e:	31 97       	sbiw	r30, 0x01	; 1
    1480:	e7 30       	cpi	r30, 0x07	; 7
    1482:	f1 05       	cpc	r31, r1
    1484:	a0 f5       	brcc	.+104    	; 0x14ee <hs_menu+0x1d0>
    1486:	e1 5c       	subi	r30, 0xC1	; 193
    1488:	ff 4f       	sbci	r31, 0xFF	; 255
    148a:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__tablejump2__>
		{
			case 1:
			arrow = 1;
    148e:	81 e0       	ldi	r24, 0x01	; 1
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1496:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    149a:	29 c0       	rjmp	.+82     	; 0x14ee <hs_menu+0x1d0>
			case 2:
			arrow = 2;
    149c:	82 e0       	ldi	r24, 0x02	; 2
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14a4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    14a8:	22 c0       	rjmp	.+68     	; 0x14ee <hs_menu+0x1d0>
			case 3:
			arrow = 3;
    14aa:	83 e0       	ldi	r24, 0x03	; 3
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14b2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    14b6:	1b c0       	rjmp	.+54     	; 0x14ee <hs_menu+0x1d0>
			case 4:
			arrow = 4;
    14b8:	84 e0       	ldi	r24, 0x04	; 4
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14c0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    14c4:	14 c0       	rjmp	.+40     	; 0x14ee <hs_menu+0x1d0>
			case 5:
			arrow = 5;
    14c6:	85 e0       	ldi	r24, 0x05	; 5
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14ce:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    14d2:	0d c0       	rjmp	.+26     	; 0x14ee <hs_menu+0x1d0>
			case 6:
			arrow = 6;
    14d4:	86 e0       	ldi	r24, 0x06	; 6
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14dc:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    14e0:	06 c0       	rjmp	.+12     	; 0x14ee <hs_menu+0x1d0>
			case 7:
			arrow = 7;
    14e2:	87 e0       	ldi	r24, 0x07	; 7
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    14ea:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    14f4:	0e 94 e7 07 	call	0xfce	; 0xfce <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    14f8:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    14fc:	81 30       	cpi	r24, 0x01	; 1
    14fe:	09 f0       	breq	.+2      	; 0x1502 <hs_menu+0x1e4>
    1500:	1c cf       	rjmp	.-456    	; 0x133a <hs_menu+0x1c>
    1502:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    1506:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <arrow+0x1>
    150a:	07 97       	sbiw	r24, 0x07	; 7
    150c:	09 f0       	breq	.+2      	; 0x1510 <hs_menu+0x1f2>
    150e:	15 cf       	rjmp	.-470    	; 0x133a <hs_menu+0x1c>
		{
			arrow = 1;
    1510:	81 e0       	ldi	r24, 0x01	; 1
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1518:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			OLED_clear_arrow();
    151c:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			OLED_reset();
    1520:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    1524:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
    1528:	08 95       	ret

0000152a <diff_menu>:
}

void diff_menu(void)
{
	arrow_pos = 1;
    152a:	81 e0       	ldi	r24, 0x01	; 1
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1532:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	if (button3State == 0)
    1536:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    153a:	81 11       	cpse	r24, r1
    153c:	04 c0       	rjmp	.+8      	; 0x1546 <diff_menu+0x1c>
	{
		button_flag = 0;
    153e:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    1542:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
	}
	while(1)
	{
		if (button3State == 0)
    1546:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    154a:	81 11       	cpse	r24, r1
    154c:	04 c0       	rjmp	.+8      	; 0x1556 <diff_menu+0x2c>
		{
			button_flag = 0;
    154e:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    1552:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
		}
		
		OLED_home();
    1556:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
		OLED_center("Difficulty");
    155a:	83 e9       	ldi	r24, 0x93	; 147
    155c:	92 e0       	ldi	r25, 0x02	; 2
    155e:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
		oled_printf("Difficulty");
    1562:	83 e9       	ldi	r24, 0x93	; 147
    1564:	92 e0       	ldi	r25, 0x02	; 2
    1566:	9f 93       	push	r25
    1568:	8f 93       	push	r24
    156a:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
		OLED_goto_pos(7, 9);
    156e:	69 e0       	ldi	r22, 0x09	; 9
    1570:	87 e0       	ldi	r24, 0x07	; 7
    1572:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
		oled_printf("Back");
    1576:	82 e8       	ldi	r24, 0x82	; 130
    1578:	92 e0       	ldi	r25, 0x02	; 2
    157a:	9f 93       	push	r25
    157c:	8f 93       	push	r24
    157e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>

		if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    1582:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    1586:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    158a:	0f 90       	pop	r0
    158c:	0f 90       	pop	r0
    158e:	0f 90       	pop	r0
    1590:	0f 90       	pop	r0
    1592:	88 3c       	cpi	r24, 0xC8	; 200
    1594:	91 05       	cpc	r25, r1
    1596:	dc f4       	brge	.+54     	; 0x15ce <diff_menu+0xa4>
    1598:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    159c:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    15a0:	01 97       	sbiw	r24, 0x01	; 1
    15a2:	31 f0       	breq	.+12     	; 0x15b0 <diff_menu+0x86>
    15a4:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    15a8:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    15ac:	01 97       	sbiw	r24, 0x01	; 1
    15ae:	79 f4       	brne	.+30     	; 0x15ce <diff_menu+0xa4>
		{
			if (joyy > 100)
    15b0:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    15b4:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    15b8:	85 36       	cpi	r24, 0x65	; 101
    15ba:	91 05       	cpc	r25, r1
    15bc:	44 f0       	brlt	.+16     	; 0x15ce <diff_menu+0xa4>
			{
				flag_down = 0;
    15be:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <flag_down+0x1>
    15c2:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <flag_down>
				flag_up = 0;
    15c6:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <flag_up+0x1>
    15ca:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <flag_up>
			}
		}

		if (joyy >= 200 && flag_up == 0)
    15ce:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    15d2:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    15d6:	88 3c       	cpi	r24, 0xC8	; 200
    15d8:	91 05       	cpc	r25, r1
    15da:	1c f1       	brlt	.+70     	; 0x1622 <diff_menu+0xf8>
    15dc:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    15e0:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    15e4:	89 2b       	or	r24, r25
    15e6:	e9 f4       	brne	.+58     	; 0x1622 <diff_menu+0xf8>
		{
			arrow_pos--;
    15e8:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    15ec:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    15f0:	01 97       	sbiw	r24, 0x01	; 1
    15f2:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    15f6:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_up = 1;
    15fa:	81 e0       	ldi	r24, 0x01	; 1
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <flag_up+0x1>
    1602:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <flag_up>
			OLED_clear_arrow();
    1606:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 0)
    160a:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    160e:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1612:	89 2b       	or	r24, r25
    1614:	31 f4       	brne	.+12     	; 0x1622 <diff_menu+0xf8>
			{
				arrow_pos = 7;
    1616:	87 e0       	ldi	r24, 0x07	; 7
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    161e:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		if (joyy <= 100 && flag_down == 0)
    1622:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    1626:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    162a:	85 36       	cpi	r24, 0x65	; 101
    162c:	91 05       	cpc	r25, r1
    162e:	1c f5       	brge	.+70     	; 0x1676 <diff_menu+0x14c>
    1630:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    1634:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    1638:	89 2b       	or	r24, r25
    163a:	e9 f4       	brne	.+58     	; 0x1676 <diff_menu+0x14c>
		{
			arrow_pos++;
    163c:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1640:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1644:	01 96       	adiw	r24, 0x01	; 1
    1646:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    164a:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			flag_down = 1;
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <flag_down+0x1>
    1656:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <flag_down>
			OLED_clear_arrow();
    165a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			if (arrow_pos == 8)
    165e:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1662:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1666:	08 97       	sbiw	r24, 0x08	; 8
    1668:	31 f4       	brne	.+12     	; 0x1676 <diff_menu+0x14c>
			{
				arrow_pos = 1;
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1672:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
			}
		}

		switch (arrow_pos)
    1676:	e0 91 00 03 	lds	r30, 0x0300	; 0x800300 <arrow_pos>
    167a:	f0 91 01 03 	lds	r31, 0x0301	; 0x800301 <arrow_pos+0x1>
    167e:	31 97       	sbiw	r30, 0x01	; 1
    1680:	e7 30       	cpi	r30, 0x07	; 7
    1682:	f1 05       	cpc	r31, r1
    1684:	a0 f5       	brcc	.+104    	; 0x16ee <diff_menu+0x1c4>
    1686:	ea 5b       	subi	r30, 0xBA	; 186
    1688:	ff 4f       	sbci	r31, 0xFF	; 255
    168a:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__tablejump2__>
		{
			case 1:
			arrow = 1;
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1696:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    169a:	29 c0       	rjmp	.+82     	; 0x16ee <diff_menu+0x1c4>
			case 2:
			arrow = 2;
    169c:	82 e0       	ldi	r24, 0x02	; 2
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16a4:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    16a8:	22 c0       	rjmp	.+68     	; 0x16ee <diff_menu+0x1c4>
			case 3:
			arrow = 3;
    16aa:	83 e0       	ldi	r24, 0x03	; 3
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16b2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    16b6:	1b c0       	rjmp	.+54     	; 0x16ee <diff_menu+0x1c4>
			case 4:
			arrow = 4;
    16b8:	84 e0       	ldi	r24, 0x04	; 4
    16ba:	90 e0       	ldi	r25, 0x00	; 0
    16bc:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16c0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    16c4:	14 c0       	rjmp	.+40     	; 0x16ee <diff_menu+0x1c4>
			case 5:
			arrow = 5;
    16c6:	85 e0       	ldi	r24, 0x05	; 5
    16c8:	90 e0       	ldi	r25, 0x00	; 0
    16ca:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16ce:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    16d2:	0d c0       	rjmp	.+26     	; 0x16ee <diff_menu+0x1c4>
			case 6:
			arrow = 6;
    16d4:	86 e0       	ldi	r24, 0x06	; 6
    16d6:	90 e0       	ldi	r25, 0x00	; 0
    16d8:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16dc:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
    16e0:	06 c0       	rjmp	.+12     	; 0x16ee <diff_menu+0x1c4>
			case 7:
			arrow = 7;
    16e2:	87 e0       	ldi	r24, 0x07	; 7
    16e4:	90 e0       	ldi	r25, 0x00	; 0
    16e6:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    16ea:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			break;
		}

		OLED_print_arrow(arrow, 0);
    16ee:	60 e0       	ldi	r22, 0x00	; 0
    16f0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    16f4:	0e 94 e7 07 	call	0xfce	; 0xfce <OLED_print_arrow>

		if (button3State == 1 && arrow == 7)
    16f8:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    16fc:	81 30       	cpi	r24, 0x01	; 1
    16fe:	09 f0       	breq	.+2      	; 0x1702 <diff_menu+0x1d8>
    1700:	22 cf       	rjmp	.-444    	; 0x1546 <diff_menu+0x1c>
    1702:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    1706:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <arrow+0x1>
    170a:	07 97       	sbiw	r24, 0x07	; 7
    170c:	09 f0       	breq	.+2      	; 0x1710 <diff_menu+0x1e6>
    170e:	1b cf       	rjmp	.-458    	; 0x1546 <diff_menu+0x1c>
		{
			arrow = 1;
    1710:	81 e0       	ldi	r24, 0x01	; 1
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1718:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
			OLED_reset();
    171c:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
			
			break;
		}
	}
	OLED_clear_arrow();
    1720:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
    1724:	08 95       	ret

00001726 <main_menu>:
int flag_down = 0;
int button_flag = 0;


void main_menu()
{
    1726:	cf 93       	push	r28
    1728:	df 93       	push	r29
    // Run right after bootup after a oled_reset() to clear screen
	OLED_home();
    172a:	0e 94 5f 07 	call	0xebe	; 0xebe <OLED_home>
    OLED_center("Main menu");
    172e:	8e e9       	ldi	r24, 0x9E	; 158
    1730:	92 e0       	ldi	r25, 0x02	; 2
    1732:	0e 94 0b 08 	call	0x1016	; 0x1016 <OLED_center>
    oled_printf("Main menu");
    1736:	8e e9       	ldi	r24, 0x9E	; 158
    1738:	92 e0       	ldi	r25, 0x02	; 2
    173a:	9f 93       	push	r25
    173c:	8f 93       	push	r24
    173e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
    OLED_goto_pos(1, 9);
    1742:	69 e0       	ldi	r22, 0x09	; 9
    1744:	81 e0       	ldi	r24, 0x01	; 1
    1746:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
    oled_printf("Play");
    174a:	85 e6       	ldi	r24, 0x65	; 101
    174c:	92 e0       	ldi	r25, 0x02	; 2
    174e:	9f 93       	push	r25
    1750:	8f 93       	push	r24
    1752:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
	OLED_goto_pos(2, 9);
    1756:	69 e0       	ldi	r22, 0x09	; 9
    1758:	82 e0       	ldi	r24, 0x02	; 2
    175a:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
	oled_printf("Users");
    175e:	8c e7       	ldi	r24, 0x7C	; 124
    1760:	92 e0       	ldi	r25, 0x02	; 2
    1762:	9f 93       	push	r25
    1764:	8f 93       	push	r24
    1766:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
    OLED_goto_pos(3, 9);
    176a:	69 e0       	ldi	r22, 0x09	; 9
    176c:	83 e0       	ldi	r24, 0x03	; 3
    176e:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
    oled_printf("High scores");
    1772:	88 ea       	ldi	r24, 0xA8	; 168
    1774:	92 e0       	ldi	r25, 0x02	; 2
    1776:	9f 93       	push	r25
    1778:	8f 93       	push	r24
    177a:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
    OLED_goto_pos(4, 9);
    177e:	69 e0       	ldi	r22, 0x09	; 9
    1780:	84 e0       	ldi	r24, 0x04	; 4
    1782:	0e 94 56 07 	call	0xeac	; 0xeac <OLED_goto_pos>
    oled_printf("Difficulty");
    1786:	83 e9       	ldi	r24, 0x93	; 147
    1788:	92 e0       	ldi	r25, 0x02	; 2
    178a:	9f 93       	push	r25
    178c:	8f 93       	push	r24
    178e:	0e 94 f9 07 	call	0xff2	; 0xff2 <oled_printf>
	
	
	if (button3State == 0)
    1792:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    1796:	2d b7       	in	r18, 0x3d	; 61
    1798:	3e b7       	in	r19, 0x3e	; 62
    179a:	26 5f       	subi	r18, 0xF6	; 246
    179c:	3f 4f       	sbci	r19, 0xFF	; 255
    179e:	0f b6       	in	r0, 0x3f	; 63
    17a0:	f8 94       	cli
    17a2:	3e bf       	out	0x3e, r19	; 62
    17a4:	0f be       	out	0x3f, r0	; 63
    17a6:	2d bf       	out	0x3d, r18	; 61
    17a8:	81 11       	cpse	r24, r1
    17aa:	04 c0       	rjmp	.+8      	; 0x17b4 <main_menu+0x8e>
	{
		button_flag = 0;
    17ac:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <button_flag+0x1>
    17b0:	10 92 b9 02 	sts	0x02B9, r1	; 0x8002b9 <button_flag>
	}

    // Use the joystick to navigate the menus, the joystick needs to be above or below a certain treshold to update the arrow and also to only be activated once on every joystick move
    if (joyy < 200 && (flag_down == 1 || flag_up == 1))
    17b4:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    17b8:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    17bc:	88 3c       	cpi	r24, 0xC8	; 200
    17be:	91 05       	cpc	r25, r1
    17c0:	dc f4       	brge	.+54     	; 0x17f8 <main_menu+0xd2>
    17c2:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    17c6:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    17ca:	01 97       	sbiw	r24, 0x01	; 1
    17cc:	31 f0       	breq	.+12     	; 0x17da <main_menu+0xb4>
    17ce:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    17d2:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	79 f4       	brne	.+30     	; 0x17f8 <main_menu+0xd2>
    {
	    if (joyy > 100)
    17da:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    17de:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    17e2:	85 36       	cpi	r24, 0x65	; 101
    17e4:	91 05       	cpc	r25, r1
    17e6:	44 f0       	brlt	.+16     	; 0x17f8 <main_menu+0xd2>
	    {
		    flag_down = 0;
    17e8:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <flag_down+0x1>
    17ec:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <flag_down>
		    flag_up = 0;
    17f0:	10 92 be 02 	sts	0x02BE, r1	; 0x8002be <flag_up+0x1>
    17f4:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <flag_up>
	    }
    }

    if (joyy >= 200 && flag_up == 0)
    17f8:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    17fc:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    1800:	88 3c       	cpi	r24, 0xC8	; 200
    1802:	91 05       	cpc	r25, r1
    1804:	1c f1       	brlt	.+70     	; 0x184c <main_menu+0x126>
    1806:	80 91 bd 02 	lds	r24, 0x02BD	; 0x8002bd <flag_up>
    180a:	90 91 be 02 	lds	r25, 0x02BE	; 0x8002be <flag_up+0x1>
    180e:	89 2b       	or	r24, r25
    1810:	e9 f4       	brne	.+58     	; 0x184c <main_menu+0x126>
    {
	    arrow_pos--;
    1812:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1816:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    181a:	01 97       	sbiw	r24, 0x01	; 1
    181c:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1820:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	    flag_up = 1;
    1824:	81 e0       	ldi	r24, 0x01	; 1
    1826:	90 e0       	ldi	r25, 0x00	; 0
    1828:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <flag_up+0x1>
    182c:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <flag_up>
		OLED_clear_arrow();
    1830:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
	    if (arrow_pos == 0)
    1834:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    1838:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    183c:	89 2b       	or	r24, r25
    183e:	31 f4       	brne	.+12     	; 0x184c <main_menu+0x126>
	    {
		    arrow_pos = 7;
    1840:	87 e0       	ldi	r24, 0x07	; 7
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1848:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	    }
    }

    if (joyy <= 100 && flag_down == 0)
    184c:	80 91 d1 02 	lds	r24, 0x02D1	; 0x8002d1 <joyy>
    1850:	90 91 d2 02 	lds	r25, 0x02D2	; 0x8002d2 <joyy+0x1>
    1854:	85 36       	cpi	r24, 0x65	; 101
    1856:	91 05       	cpc	r25, r1
    1858:	1c f5       	brge	.+70     	; 0x18a0 <main_menu+0x17a>
    185a:	80 91 bb 02 	lds	r24, 0x02BB	; 0x8002bb <flag_down>
    185e:	90 91 bc 02 	lds	r25, 0x02BC	; 0x8002bc <flag_down+0x1>
    1862:	89 2b       	or	r24, r25
    1864:	e9 f4       	brne	.+58     	; 0x18a0 <main_menu+0x17a>
    {
	    arrow_pos++;
    1866:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    186a:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    186e:	01 96       	adiw	r24, 0x01	; 1
    1870:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1874:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	    flag_down = 1;
    1878:	81 e0       	ldi	r24, 0x01	; 1
    187a:	90 e0       	ldi	r25, 0x00	; 0
    187c:	90 93 bc 02 	sts	0x02BC, r25	; 0x8002bc <flag_down+0x1>
    1880:	80 93 bb 02 	sts	0x02BB, r24	; 0x8002bb <flag_down>
	    OLED_clear_arrow();
    1884:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
	    if (arrow_pos == 8)
    1888:	80 91 00 03 	lds	r24, 0x0300	; 0x800300 <arrow_pos>
    188c:	90 91 01 03 	lds	r25, 0x0301	; 0x800301 <arrow_pos+0x1>
    1890:	08 97       	sbiw	r24, 0x08	; 8
    1892:	31 f4       	brne	.+12     	; 0x18a0 <main_menu+0x17a>
	    {
		    arrow_pos = 1;
    1894:	81 e0       	ldi	r24, 0x01	; 1
    1896:	90 e0       	ldi	r25, 0x00	; 0
    1898:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    189c:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
	    }
    }

    // Based on the arrows position on the menu, submenus can be entered by pressing the joystick button. The submenus run inside while() loops, and when entering a new loop, either break the loop to go back to the main menu or go into a new loop
    // Current design includes another switch-case for the arrowpointer functionality, for deeper submenus, could have to use same system to enter submenus as before, so like nested functions
    switch (arrow_pos)
    18a0:	e0 91 00 03 	lds	r30, 0x0300	; 0x800300 <arrow_pos>
    18a4:	f0 91 01 03 	lds	r31, 0x0301	; 0x800301 <arrow_pos+0x1>
    18a8:	31 97       	sbiw	r30, 0x01	; 1
    18aa:	e7 30       	cpi	r30, 0x07	; 7
    18ac:	f1 05       	cpc	r31, r1
    18ae:	08 f0       	brcs	.+2      	; 0x18b2 <main_menu+0x18c>
    18b0:	81 c0       	rjmp	.+258    	; 0x19b4 <main_menu+0x28e>
    18b2:	e3 5b       	subi	r30, 0xB3	; 179
    18b4:	ff 4f       	sbci	r31, 0xFF	; 255
    18b6:	0c 94 2b 0f 	jmp	0x1e56	; 0x1e56 <__tablejump2__>
    {
    case 1:
        arrow = 1;
    18ba:	81 e0       	ldi	r24, 0x01	; 1
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    18c2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        if (button3State == 1 && button_flag == 0)
    18c6:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    18ca:	81 30       	cpi	r24, 0x01	; 1
    18cc:	09 f0       	breq	.+2      	; 0x18d0 <main_menu+0x1aa>
    18ce:	72 c0       	rjmp	.+228    	; 0x19b4 <main_menu+0x28e>
    18d0:	80 91 b9 02 	lds	r24, 0x02B9	; 0x8002b9 <button_flag>
    18d4:	90 91 ba 02 	lds	r25, 0x02BA	; 0x8002ba <button_flag+0x1>
    18d8:	89 2b       	or	r24, r25
    18da:	09 f0       	breq	.+2      	; 0x18de <main_menu+0x1b8>
    18dc:	6b c0       	rjmp	.+214    	; 0x19b4 <main_menu+0x28e>
        {
			button_flag = 1;
    18de:	c1 e0       	ldi	r28, 0x01	; 1
    18e0:	d0 e0       	ldi	r29, 0x00	; 0
    18e2:	d0 93 ba 02 	sts	0x02BA, r29	; 0x8002ba <button_flag+0x1>
    18e6:	c0 93 b9 02 	sts	0x02B9, r28	; 0x8002b9 <button_flag>
            OLED_reset();
    18ea:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
            // Only run the play_menu, when exiting the play menu break the loop (might have to break the loop with flag instead of break;)
         
            play_menu();
    18ee:	0e 94 1f 08 	call	0x103e	; 0x103e <play_menu>
			OLED_clear_arrow();
    18f2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			arrow_pos = 1;
    18f6:	d0 93 01 03 	sts	0x0301, r29	; 0x800301 <arrow_pos+0x1>
    18fa:	c0 93 00 03 	sts	0x0300, r28	; 0x800300 <arrow_pos>
    18fe:	5a c0       	rjmp	.+180    	; 0x19b4 <main_menu+0x28e>
        }
        break;
    case 2:
        arrow = 2;
    1900:	82 e0       	ldi	r24, 0x02	; 2
    1902:	90 e0       	ldi	r25, 0x00	; 0
    1904:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1908:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        if (button3State == 1)
    190c:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    1910:	81 30       	cpi	r24, 0x01	; 1
    1912:	09 f0       	breq	.+2      	; 0x1916 <main_menu+0x1f0>
    1914:	4f c0       	rjmp	.+158    	; 0x19b4 <main_menu+0x28e>
        {
           OLED_reset();
    1916:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
		   users_menu();
    191a:	0e 94 89 08 	call	0x1112	; 0x1112 <users_menu>
           // Only run the hs_menu, when exiting the high scores menu break the loop
		   OLED_clear_arrow();
    191e:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
           
		   arrow_pos = 1;
    1922:	81 e0       	ldi	r24, 0x01	; 1
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    192a:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
    192e:	42 c0       	rjmp	.+132    	; 0x19b4 <main_menu+0x28e>
		   
        }
        break;
    case 3:
        arrow = 3;
    1930:	83 e0       	ldi	r24, 0x03	; 3
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1938:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        if (button3State == 1)
    193c:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    1940:	81 30       	cpi	r24, 0x01	; 1
    1942:	c1 f5       	brne	.+112    	; 0x19b4 <main_menu+0x28e>
        {
            OLED_reset();
    1944:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
            // Only run the diff_menu, when exiting the difficulty menu break the loop
            hs_menu();
    1948:	0e 94 8f 09 	call	0x131e	; 0x131e <hs_menu>
            OLED_clear_arrow();
    194c:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
            arrow_pos = 1;
    1950:	81 e0       	ldi	r24, 0x01	; 1
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1958:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
    195c:	2b c0       	rjmp	.+86     	; 0x19b4 <main_menu+0x28e>
        }
        break;
    case 4:
        arrow = 4;
    195e:	84 e0       	ldi	r24, 0x04	; 4
    1960:	90 e0       	ldi	r25, 0x00	; 0
    1962:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1966:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
		if (button3State == 1)
    196a:	80 91 f2 02 	lds	r24, 0x02F2	; 0x8002f2 <button3State>
    196e:	81 30       	cpi	r24, 0x01	; 1
    1970:	09 f5       	brne	.+66     	; 0x19b4 <main_menu+0x28e>
		{
			OLED_reset();
    1972:	0e 94 7c 07 	call	0xef8	; 0xef8 <OLED_reset>
			// Only run the users_menu, when exiting the difficulty menu break the loop
			diff_menu();
    1976:	0e 94 95 0a 	call	0x152a	; 0x152a <diff_menu>
			OLED_clear_arrow();
    197a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <OLED_clear_arrow>
			arrow_pos = 1;
    197e:	81 e0       	ldi	r24, 0x01	; 1
    1980:	90 e0       	ldi	r25, 0x00	; 0
    1982:	90 93 01 03 	sts	0x0301, r25	; 0x800301 <arrow_pos+0x1>
    1986:	80 93 00 03 	sts	0x0300, r24	; 0x800300 <arrow_pos>
    198a:	14 c0       	rjmp	.+40     	; 0x19b4 <main_menu+0x28e>
		}

        break;
    case 5:
        arrow = 5;
    198c:	85 e0       	ldi	r24, 0x05	; 5
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    1994:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        break;
    1998:	0d c0       	rjmp	.+26     	; 0x19b4 <main_menu+0x28e>
    case 6:
        arrow = 6;
    199a:	86 e0       	ldi	r24, 0x06	; 6
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    19a2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        break;
    19a6:	06 c0       	rjmp	.+12     	; 0x19b4 <main_menu+0x28e>
    case 7:
        arrow = 7;
    19a8:	87 e0       	ldi	r24, 0x07	; 7
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <arrow+0x1>
    19b0:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <arrow>
        break;
    }
    OLED_print_arrow(arrow, 0);
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <arrow>
    19ba:	0e 94 e7 07 	call	0xfce	; 0xfce <OLED_print_arrow>
}
    19be:	df 91       	pop	r29
    19c0:	cf 91       	pop	r28
    19c2:	08 95       	ret

000019c4 <SPI_Init>:



void SPI_Init(void)
{
	DDRB = (1<<PB4)|(1<<PB5)|(1<<PB7);
    19c4:	80 eb       	ldi	r24, 0xB0	; 176
    19c6:	87 bb       	out	0x17, r24	; 23
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    19c8:	81 e5       	ldi	r24, 0x51	; 81
    19ca:	8d b9       	out	0x0d, r24	; 13
	PORTB = (1<<PB4);
    19cc:	80 e1       	ldi	r24, 0x10	; 16
    19ce:	88 bb       	out	0x18, r24	; 24
    19d0:	08 95       	ret

000019d2 <SPI_Transmit>:
}

void SPI_Transmit(char Data)
{
	SPDR = Data;
    19d2:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
    19d4:	77 9b       	sbis	0x0e, 7	; 14
    19d6:	fe cf       	rjmp	.-4      	; 0x19d4 <SPI_Transmit+0x2>
}
    19d8:	08 95       	ret

000019da <SPI_Recieve>:


char SPI_Recieve(void)
{
	SPDR = 0x00;
    19da:	1f b8       	out	0x0f, r1	; 15
	while(!(SPSR & (1<<SPIF)));
    19dc:	77 9b       	sbis	0x0e, 7	; 14
    19de:	fe cf       	rjmp	.-4      	; 0x19dc <SPI_Recieve+0x2>
	return(SPDR);
    19e0:	8f b1       	in	r24, 0x0f	; 15
}
    19e2:	08 95       	ret

000019e4 <uart_start>:
#include <avr/io.h>


void uart_start(unsigned int ubrr){
	UCSR0A &=~(1<<U2X0);
    19e4:	2b b1       	in	r18, 0x0b	; 11
    19e6:	2d 7f       	andi	r18, 0xFD	; 253
    19e8:	2b b9       	out	0x0b, r18	; 11
	UBRR0H = (unsigned char)(ubrr >> 8);
    19ea:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)ubrr;
    19ec:	89 b9       	out	0x09, r24	; 9
	
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
    19ee:	88 e1       	ldi	r24, 0x18	; 24
    19f0:	8a b9       	out	0x0a, r24	; 10
	
	UCSR0C = (1 << URSEL0) | (1 << USBS0) | (3 << UCSZ00);
    19f2:	8e e8       	ldi	r24, 0x8E	; 142
    19f4:	80 bd       	out	0x20, r24	; 32
    19f6:	08 95       	ret

000019f8 <uart_transmit>:
}

int uart_transmit(unsigned char data){
	while (!(UCSR0A & (1<<UDRE0)));
    19f8:	5d 9b       	sbis	0x0b, 5	; 11
    19fa:	fe cf       	rjmp	.-4      	; 0x19f8 <uart_transmit>
	UDR0 = data;
    19fc:	8c b9       	out	0x0c, r24	; 12
	return(0);
}
    19fe:	80 e0       	ldi	r24, 0x00	; 0
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	08 95       	ret

00001a04 <uart_recieve>:

int uart_recieve(void){
	while (!(UCSR0A & (1<<UDRE0)));
    1a04:	5d 9b       	sbis	0x0b, 5	; 11
    1a06:	fe cf       	rjmp	.-4      	; 0x1a04 <uart_recieve>
	return(UDR0);
    1a08:	8c b1       	in	r24, 0x0c	; 12
}
    1a0a:	90 e0       	ldi	r25, 0x00	; 0
    1a0c:	08 95       	ret

00001a0e <__subsf3>:
    1a0e:	50 58       	subi	r21, 0x80	; 128

00001a10 <__addsf3>:
    1a10:	bb 27       	eor	r27, r27
    1a12:	aa 27       	eor	r26, r26
    1a14:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <__addsf3x>
    1a18:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_round>
    1a1c:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__fp_pscA>
    1a20:	38 f0       	brcs	.+14     	; 0x1a30 <__addsf3+0x20>
    1a22:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscB>
    1a26:	20 f0       	brcs	.+8      	; 0x1a30 <__addsf3+0x20>
    1a28:	39 f4       	brne	.+14     	; 0x1a38 <__addsf3+0x28>
    1a2a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a2c:	19 f4       	brne	.+6      	; 0x1a34 <__addsf3+0x24>
    1a2e:	26 f4       	brtc	.+8      	; 0x1a38 <__addsf3+0x28>
    1a30:	0c 94 5f 0e 	jmp	0x1cbe	; 0x1cbe <__fp_nan>
    1a34:	0e f4       	brtc	.+2      	; 0x1a38 <__addsf3+0x28>
    1a36:	e0 95       	com	r30
    1a38:	e7 fb       	bst	r30, 7
    1a3a:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__fp_inf>

00001a3e <__addsf3x>:
    1a3e:	e9 2f       	mov	r30, r25
    1a40:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <__fp_split3>
    1a44:	58 f3       	brcs	.-42     	; 0x1a1c <__addsf3+0xc>
    1a46:	ba 17       	cp	r27, r26
    1a48:	62 07       	cpc	r22, r18
    1a4a:	73 07       	cpc	r23, r19
    1a4c:	84 07       	cpc	r24, r20
    1a4e:	95 07       	cpc	r25, r21
    1a50:	20 f0       	brcs	.+8      	; 0x1a5a <__addsf3x+0x1c>
    1a52:	79 f4       	brne	.+30     	; 0x1a72 <__addsf3x+0x34>
    1a54:	a6 f5       	brtc	.+104    	; 0x1abe <__addsf3x+0x80>
    1a56:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__fp_zero>
    1a5a:	0e f4       	brtc	.+2      	; 0x1a5e <__addsf3x+0x20>
    1a5c:	e0 95       	com	r30
    1a5e:	0b 2e       	mov	r0, r27
    1a60:	ba 2f       	mov	r27, r26
    1a62:	a0 2d       	mov	r26, r0
    1a64:	0b 01       	movw	r0, r22
    1a66:	b9 01       	movw	r22, r18
    1a68:	90 01       	movw	r18, r0
    1a6a:	0c 01       	movw	r0, r24
    1a6c:	ca 01       	movw	r24, r20
    1a6e:	a0 01       	movw	r20, r0
    1a70:	11 24       	eor	r1, r1
    1a72:	ff 27       	eor	r31, r31
    1a74:	59 1b       	sub	r21, r25
    1a76:	99 f0       	breq	.+38     	; 0x1a9e <__addsf3x+0x60>
    1a78:	59 3f       	cpi	r21, 0xF9	; 249
    1a7a:	50 f4       	brcc	.+20     	; 0x1a90 <__addsf3x+0x52>
    1a7c:	50 3e       	cpi	r21, 0xE0	; 224
    1a7e:	68 f1       	brcs	.+90     	; 0x1ada <__addsf3x+0x9c>
    1a80:	1a 16       	cp	r1, r26
    1a82:	f0 40       	sbci	r31, 0x00	; 0
    1a84:	a2 2f       	mov	r26, r18
    1a86:	23 2f       	mov	r18, r19
    1a88:	34 2f       	mov	r19, r20
    1a8a:	44 27       	eor	r20, r20
    1a8c:	58 5f       	subi	r21, 0xF8	; 248
    1a8e:	f3 cf       	rjmp	.-26     	; 0x1a76 <__addsf3x+0x38>
    1a90:	46 95       	lsr	r20
    1a92:	37 95       	ror	r19
    1a94:	27 95       	ror	r18
    1a96:	a7 95       	ror	r26
    1a98:	f0 40       	sbci	r31, 0x00	; 0
    1a9a:	53 95       	inc	r21
    1a9c:	c9 f7       	brne	.-14     	; 0x1a90 <__addsf3x+0x52>
    1a9e:	7e f4       	brtc	.+30     	; 0x1abe <__addsf3x+0x80>
    1aa0:	1f 16       	cp	r1, r31
    1aa2:	ba 0b       	sbc	r27, r26
    1aa4:	62 0b       	sbc	r22, r18
    1aa6:	73 0b       	sbc	r23, r19
    1aa8:	84 0b       	sbc	r24, r20
    1aaa:	ba f0       	brmi	.+46     	; 0x1ada <__addsf3x+0x9c>
    1aac:	91 50       	subi	r25, 0x01	; 1
    1aae:	a1 f0       	breq	.+40     	; 0x1ad8 <__addsf3x+0x9a>
    1ab0:	ff 0f       	add	r31, r31
    1ab2:	bb 1f       	adc	r27, r27
    1ab4:	66 1f       	adc	r22, r22
    1ab6:	77 1f       	adc	r23, r23
    1ab8:	88 1f       	adc	r24, r24
    1aba:	c2 f7       	brpl	.-16     	; 0x1aac <__addsf3x+0x6e>
    1abc:	0e c0       	rjmp	.+28     	; 0x1ada <__addsf3x+0x9c>
    1abe:	ba 0f       	add	r27, r26
    1ac0:	62 1f       	adc	r22, r18
    1ac2:	73 1f       	adc	r23, r19
    1ac4:	84 1f       	adc	r24, r20
    1ac6:	48 f4       	brcc	.+18     	; 0x1ada <__addsf3x+0x9c>
    1ac8:	87 95       	ror	r24
    1aca:	77 95       	ror	r23
    1acc:	67 95       	ror	r22
    1ace:	b7 95       	ror	r27
    1ad0:	f7 95       	ror	r31
    1ad2:	9e 3f       	cpi	r25, 0xFE	; 254
    1ad4:	08 f0       	brcs	.+2      	; 0x1ad8 <__addsf3x+0x9a>
    1ad6:	b0 cf       	rjmp	.-160    	; 0x1a38 <__addsf3+0x28>
    1ad8:	93 95       	inc	r25
    1ada:	88 0f       	add	r24, r24
    1adc:	08 f0       	brcs	.+2      	; 0x1ae0 <__addsf3x+0xa2>
    1ade:	99 27       	eor	r25, r25
    1ae0:	ee 0f       	add	r30, r30
    1ae2:	97 95       	ror	r25
    1ae4:	87 95       	ror	r24
    1ae6:	08 95       	ret

00001ae8 <__divsf3>:
    1ae8:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <__divsf3x>
    1aec:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_round>
    1af0:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscB>
    1af4:	58 f0       	brcs	.+22     	; 0x1b0c <__divsf3+0x24>
    1af6:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__fp_pscA>
    1afa:	40 f0       	brcs	.+16     	; 0x1b0c <__divsf3+0x24>
    1afc:	29 f4       	brne	.+10     	; 0x1b08 <__divsf3+0x20>
    1afe:	5f 3f       	cpi	r21, 0xFF	; 255
    1b00:	29 f0       	breq	.+10     	; 0x1b0c <__divsf3+0x24>
    1b02:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__fp_inf>
    1b06:	51 11       	cpse	r21, r1
    1b08:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <__fp_szero>
    1b0c:	0c 94 5f 0e 	jmp	0x1cbe	; 0x1cbe <__fp_nan>

00001b10 <__divsf3x>:
    1b10:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <__fp_split3>
    1b14:	68 f3       	brcs	.-38     	; 0x1af0 <__divsf3+0x8>

00001b16 <__divsf3_pse>:
    1b16:	99 23       	and	r25, r25
    1b18:	b1 f3       	breq	.-20     	; 0x1b06 <__divsf3+0x1e>
    1b1a:	55 23       	and	r21, r21
    1b1c:	91 f3       	breq	.-28     	; 0x1b02 <__divsf3+0x1a>
    1b1e:	95 1b       	sub	r25, r21
    1b20:	55 0b       	sbc	r21, r21
    1b22:	bb 27       	eor	r27, r27
    1b24:	aa 27       	eor	r26, r26
    1b26:	62 17       	cp	r22, r18
    1b28:	73 07       	cpc	r23, r19
    1b2a:	84 07       	cpc	r24, r20
    1b2c:	38 f0       	brcs	.+14     	; 0x1b3c <__divsf3_pse+0x26>
    1b2e:	9f 5f       	subi	r25, 0xFF	; 255
    1b30:	5f 4f       	sbci	r21, 0xFF	; 255
    1b32:	22 0f       	add	r18, r18
    1b34:	33 1f       	adc	r19, r19
    1b36:	44 1f       	adc	r20, r20
    1b38:	aa 1f       	adc	r26, r26
    1b3a:	a9 f3       	breq	.-22     	; 0x1b26 <__divsf3_pse+0x10>
    1b3c:	35 d0       	rcall	.+106    	; 0x1ba8 <__divsf3_pse+0x92>
    1b3e:	0e 2e       	mov	r0, r30
    1b40:	3a f0       	brmi	.+14     	; 0x1b50 <__divsf3_pse+0x3a>
    1b42:	e0 e8       	ldi	r30, 0x80	; 128
    1b44:	32 d0       	rcall	.+100    	; 0x1baa <__divsf3_pse+0x94>
    1b46:	91 50       	subi	r25, 0x01	; 1
    1b48:	50 40       	sbci	r21, 0x00	; 0
    1b4a:	e6 95       	lsr	r30
    1b4c:	00 1c       	adc	r0, r0
    1b4e:	ca f7       	brpl	.-14     	; 0x1b42 <__divsf3_pse+0x2c>
    1b50:	2b d0       	rcall	.+86     	; 0x1ba8 <__divsf3_pse+0x92>
    1b52:	fe 2f       	mov	r31, r30
    1b54:	29 d0       	rcall	.+82     	; 0x1ba8 <__divsf3_pse+0x92>
    1b56:	66 0f       	add	r22, r22
    1b58:	77 1f       	adc	r23, r23
    1b5a:	88 1f       	adc	r24, r24
    1b5c:	bb 1f       	adc	r27, r27
    1b5e:	26 17       	cp	r18, r22
    1b60:	37 07       	cpc	r19, r23
    1b62:	48 07       	cpc	r20, r24
    1b64:	ab 07       	cpc	r26, r27
    1b66:	b0 e8       	ldi	r27, 0x80	; 128
    1b68:	09 f0       	breq	.+2      	; 0x1b6c <__divsf3_pse+0x56>
    1b6a:	bb 0b       	sbc	r27, r27
    1b6c:	80 2d       	mov	r24, r0
    1b6e:	bf 01       	movw	r22, r30
    1b70:	ff 27       	eor	r31, r31
    1b72:	93 58       	subi	r25, 0x83	; 131
    1b74:	5f 4f       	sbci	r21, 0xFF	; 255
    1b76:	3a f0       	brmi	.+14     	; 0x1b86 <__divsf3_pse+0x70>
    1b78:	9e 3f       	cpi	r25, 0xFE	; 254
    1b7a:	51 05       	cpc	r21, r1
    1b7c:	78 f0       	brcs	.+30     	; 0x1b9c <__divsf3_pse+0x86>
    1b7e:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__fp_inf>
    1b82:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <__fp_szero>
    1b86:	5f 3f       	cpi	r21, 0xFF	; 255
    1b88:	e4 f3       	brlt	.-8      	; 0x1b82 <__divsf3_pse+0x6c>
    1b8a:	98 3e       	cpi	r25, 0xE8	; 232
    1b8c:	d4 f3       	brlt	.-12     	; 0x1b82 <__divsf3_pse+0x6c>
    1b8e:	86 95       	lsr	r24
    1b90:	77 95       	ror	r23
    1b92:	67 95       	ror	r22
    1b94:	b7 95       	ror	r27
    1b96:	f7 95       	ror	r31
    1b98:	9f 5f       	subi	r25, 0xFF	; 255
    1b9a:	c9 f7       	brne	.-14     	; 0x1b8e <__divsf3_pse+0x78>
    1b9c:	88 0f       	add	r24, r24
    1b9e:	91 1d       	adc	r25, r1
    1ba0:	96 95       	lsr	r25
    1ba2:	87 95       	ror	r24
    1ba4:	97 f9       	bld	r25, 7
    1ba6:	08 95       	ret
    1ba8:	e1 e0       	ldi	r30, 0x01	; 1
    1baa:	66 0f       	add	r22, r22
    1bac:	77 1f       	adc	r23, r23
    1bae:	88 1f       	adc	r24, r24
    1bb0:	bb 1f       	adc	r27, r27
    1bb2:	62 17       	cp	r22, r18
    1bb4:	73 07       	cpc	r23, r19
    1bb6:	84 07       	cpc	r24, r20
    1bb8:	ba 07       	cpc	r27, r26
    1bba:	20 f0       	brcs	.+8      	; 0x1bc4 <__divsf3_pse+0xae>
    1bbc:	62 1b       	sub	r22, r18
    1bbe:	73 0b       	sbc	r23, r19
    1bc0:	84 0b       	sbc	r24, r20
    1bc2:	ba 0b       	sbc	r27, r26
    1bc4:	ee 1f       	adc	r30, r30
    1bc6:	88 f7       	brcc	.-30     	; 0x1baa <__divsf3_pse+0x94>
    1bc8:	e0 95       	com	r30
    1bca:	08 95       	ret

00001bcc <__fixsfsi>:
    1bcc:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <__fixunssfsi>
    1bd0:	68 94       	set
    1bd2:	b1 11       	cpse	r27, r1
    1bd4:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <__fp_szero>
    1bd8:	08 95       	ret

00001bda <__fixunssfsi>:
    1bda:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__fp_splitA>
    1bde:	88 f0       	brcs	.+34     	; 0x1c02 <__fixunssfsi+0x28>
    1be0:	9f 57       	subi	r25, 0x7F	; 127
    1be2:	98 f0       	brcs	.+38     	; 0x1c0a <__fixunssfsi+0x30>
    1be4:	b9 2f       	mov	r27, r25
    1be6:	99 27       	eor	r25, r25
    1be8:	b7 51       	subi	r27, 0x17	; 23
    1bea:	b0 f0       	brcs	.+44     	; 0x1c18 <__fixunssfsi+0x3e>
    1bec:	e1 f0       	breq	.+56     	; 0x1c26 <__fixunssfsi+0x4c>
    1bee:	66 0f       	add	r22, r22
    1bf0:	77 1f       	adc	r23, r23
    1bf2:	88 1f       	adc	r24, r24
    1bf4:	99 1f       	adc	r25, r25
    1bf6:	1a f0       	brmi	.+6      	; 0x1bfe <__fixunssfsi+0x24>
    1bf8:	ba 95       	dec	r27
    1bfa:	c9 f7       	brne	.-14     	; 0x1bee <__fixunssfsi+0x14>
    1bfc:	14 c0       	rjmp	.+40     	; 0x1c26 <__fixunssfsi+0x4c>
    1bfe:	b1 30       	cpi	r27, 0x01	; 1
    1c00:	91 f0       	breq	.+36     	; 0x1c26 <__fixunssfsi+0x4c>
    1c02:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__fp_zero>
    1c06:	b1 e0       	ldi	r27, 0x01	; 1
    1c08:	08 95       	ret
    1c0a:	0c 94 a3 0e 	jmp	0x1d46	; 0x1d46 <__fp_zero>
    1c0e:	67 2f       	mov	r22, r23
    1c10:	78 2f       	mov	r23, r24
    1c12:	88 27       	eor	r24, r24
    1c14:	b8 5f       	subi	r27, 0xF8	; 248
    1c16:	39 f0       	breq	.+14     	; 0x1c26 <__fixunssfsi+0x4c>
    1c18:	b9 3f       	cpi	r27, 0xF9	; 249
    1c1a:	cc f3       	brlt	.-14     	; 0x1c0e <__fixunssfsi+0x34>
    1c1c:	86 95       	lsr	r24
    1c1e:	77 95       	ror	r23
    1c20:	67 95       	ror	r22
    1c22:	b3 95       	inc	r27
    1c24:	d9 f7       	brne	.-10     	; 0x1c1c <__fixunssfsi+0x42>
    1c26:	3e f4       	brtc	.+14     	; 0x1c36 <__fixunssfsi+0x5c>
    1c28:	90 95       	com	r25
    1c2a:	80 95       	com	r24
    1c2c:	70 95       	com	r23
    1c2e:	61 95       	neg	r22
    1c30:	7f 4f       	sbci	r23, 0xFF	; 255
    1c32:	8f 4f       	sbci	r24, 0xFF	; 255
    1c34:	9f 4f       	sbci	r25, 0xFF	; 255
    1c36:	08 95       	ret

00001c38 <__floatunsisf>:
    1c38:	e8 94       	clt
    1c3a:	09 c0       	rjmp	.+18     	; 0x1c4e <__floatsisf+0x12>

00001c3c <__floatsisf>:
    1c3c:	97 fb       	bst	r25, 7
    1c3e:	3e f4       	brtc	.+14     	; 0x1c4e <__floatsisf+0x12>
    1c40:	90 95       	com	r25
    1c42:	80 95       	com	r24
    1c44:	70 95       	com	r23
    1c46:	61 95       	neg	r22
    1c48:	7f 4f       	sbci	r23, 0xFF	; 255
    1c4a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c4c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c4e:	99 23       	and	r25, r25
    1c50:	a9 f0       	breq	.+42     	; 0x1c7c <__floatsisf+0x40>
    1c52:	f9 2f       	mov	r31, r25
    1c54:	96 e9       	ldi	r25, 0x96	; 150
    1c56:	bb 27       	eor	r27, r27
    1c58:	93 95       	inc	r25
    1c5a:	f6 95       	lsr	r31
    1c5c:	87 95       	ror	r24
    1c5e:	77 95       	ror	r23
    1c60:	67 95       	ror	r22
    1c62:	b7 95       	ror	r27
    1c64:	f1 11       	cpse	r31, r1
    1c66:	f8 cf       	rjmp	.-16     	; 0x1c58 <__floatsisf+0x1c>
    1c68:	fa f4       	brpl	.+62     	; 0x1ca8 <__floatsisf+0x6c>
    1c6a:	bb 0f       	add	r27, r27
    1c6c:	11 f4       	brne	.+4      	; 0x1c72 <__floatsisf+0x36>
    1c6e:	60 ff       	sbrs	r22, 0
    1c70:	1b c0       	rjmp	.+54     	; 0x1ca8 <__floatsisf+0x6c>
    1c72:	6f 5f       	subi	r22, 0xFF	; 255
    1c74:	7f 4f       	sbci	r23, 0xFF	; 255
    1c76:	8f 4f       	sbci	r24, 0xFF	; 255
    1c78:	9f 4f       	sbci	r25, 0xFF	; 255
    1c7a:	16 c0       	rjmp	.+44     	; 0x1ca8 <__floatsisf+0x6c>
    1c7c:	88 23       	and	r24, r24
    1c7e:	11 f0       	breq	.+4      	; 0x1c84 <__floatsisf+0x48>
    1c80:	96 e9       	ldi	r25, 0x96	; 150
    1c82:	11 c0       	rjmp	.+34     	; 0x1ca6 <__floatsisf+0x6a>
    1c84:	77 23       	and	r23, r23
    1c86:	21 f0       	breq	.+8      	; 0x1c90 <__floatsisf+0x54>
    1c88:	9e e8       	ldi	r25, 0x8E	; 142
    1c8a:	87 2f       	mov	r24, r23
    1c8c:	76 2f       	mov	r23, r22
    1c8e:	05 c0       	rjmp	.+10     	; 0x1c9a <__floatsisf+0x5e>
    1c90:	66 23       	and	r22, r22
    1c92:	71 f0       	breq	.+28     	; 0x1cb0 <__floatsisf+0x74>
    1c94:	96 e8       	ldi	r25, 0x86	; 134
    1c96:	86 2f       	mov	r24, r22
    1c98:	70 e0       	ldi	r23, 0x00	; 0
    1c9a:	60 e0       	ldi	r22, 0x00	; 0
    1c9c:	2a f0       	brmi	.+10     	; 0x1ca8 <__floatsisf+0x6c>
    1c9e:	9a 95       	dec	r25
    1ca0:	66 0f       	add	r22, r22
    1ca2:	77 1f       	adc	r23, r23
    1ca4:	88 1f       	adc	r24, r24
    1ca6:	da f7       	brpl	.-10     	; 0x1c9e <__floatsisf+0x62>
    1ca8:	88 0f       	add	r24, r24
    1caa:	96 95       	lsr	r25
    1cac:	87 95       	ror	r24
    1cae:	97 f9       	bld	r25, 7
    1cb0:	08 95       	ret

00001cb2 <__fp_inf>:
    1cb2:	97 f9       	bld	r25, 7
    1cb4:	9f 67       	ori	r25, 0x7F	; 127
    1cb6:	80 e8       	ldi	r24, 0x80	; 128
    1cb8:	70 e0       	ldi	r23, 0x00	; 0
    1cba:	60 e0       	ldi	r22, 0x00	; 0
    1cbc:	08 95       	ret

00001cbe <__fp_nan>:
    1cbe:	9f ef       	ldi	r25, 0xFF	; 255
    1cc0:	80 ec       	ldi	r24, 0xC0	; 192
    1cc2:	08 95       	ret

00001cc4 <__fp_pscA>:
    1cc4:	00 24       	eor	r0, r0
    1cc6:	0a 94       	dec	r0
    1cc8:	16 16       	cp	r1, r22
    1cca:	17 06       	cpc	r1, r23
    1ccc:	18 06       	cpc	r1, r24
    1cce:	09 06       	cpc	r0, r25
    1cd0:	08 95       	ret

00001cd2 <__fp_pscB>:
    1cd2:	00 24       	eor	r0, r0
    1cd4:	0a 94       	dec	r0
    1cd6:	12 16       	cp	r1, r18
    1cd8:	13 06       	cpc	r1, r19
    1cda:	14 06       	cpc	r1, r20
    1cdc:	05 06       	cpc	r0, r21
    1cde:	08 95       	ret

00001ce0 <__fp_round>:
    1ce0:	09 2e       	mov	r0, r25
    1ce2:	03 94       	inc	r0
    1ce4:	00 0c       	add	r0, r0
    1ce6:	11 f4       	brne	.+4      	; 0x1cec <__fp_round+0xc>
    1ce8:	88 23       	and	r24, r24
    1cea:	52 f0       	brmi	.+20     	; 0x1d00 <__fp_round+0x20>
    1cec:	bb 0f       	add	r27, r27
    1cee:	40 f4       	brcc	.+16     	; 0x1d00 <__fp_round+0x20>
    1cf0:	bf 2b       	or	r27, r31
    1cf2:	11 f4       	brne	.+4      	; 0x1cf8 <__fp_round+0x18>
    1cf4:	60 ff       	sbrs	r22, 0
    1cf6:	04 c0       	rjmp	.+8      	; 0x1d00 <__fp_round+0x20>
    1cf8:	6f 5f       	subi	r22, 0xFF	; 255
    1cfa:	7f 4f       	sbci	r23, 0xFF	; 255
    1cfc:	8f 4f       	sbci	r24, 0xFF	; 255
    1cfe:	9f 4f       	sbci	r25, 0xFF	; 255
    1d00:	08 95       	ret

00001d02 <__fp_split3>:
    1d02:	57 fd       	sbrc	r21, 7
    1d04:	90 58       	subi	r25, 0x80	; 128
    1d06:	44 0f       	add	r20, r20
    1d08:	55 1f       	adc	r21, r21
    1d0a:	59 f0       	breq	.+22     	; 0x1d22 <__fp_splitA+0x10>
    1d0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1d0e:	71 f0       	breq	.+28     	; 0x1d2c <__fp_splitA+0x1a>
    1d10:	47 95       	ror	r20

00001d12 <__fp_splitA>:
    1d12:	88 0f       	add	r24, r24
    1d14:	97 fb       	bst	r25, 7
    1d16:	99 1f       	adc	r25, r25
    1d18:	61 f0       	breq	.+24     	; 0x1d32 <__fp_splitA+0x20>
    1d1a:	9f 3f       	cpi	r25, 0xFF	; 255
    1d1c:	79 f0       	breq	.+30     	; 0x1d3c <__fp_splitA+0x2a>
    1d1e:	87 95       	ror	r24
    1d20:	08 95       	ret
    1d22:	12 16       	cp	r1, r18
    1d24:	13 06       	cpc	r1, r19
    1d26:	14 06       	cpc	r1, r20
    1d28:	55 1f       	adc	r21, r21
    1d2a:	f2 cf       	rjmp	.-28     	; 0x1d10 <__fp_split3+0xe>
    1d2c:	46 95       	lsr	r20
    1d2e:	f1 df       	rcall	.-30     	; 0x1d12 <__fp_splitA>
    1d30:	08 c0       	rjmp	.+16     	; 0x1d42 <__fp_splitA+0x30>
    1d32:	16 16       	cp	r1, r22
    1d34:	17 06       	cpc	r1, r23
    1d36:	18 06       	cpc	r1, r24
    1d38:	99 1f       	adc	r25, r25
    1d3a:	f1 cf       	rjmp	.-30     	; 0x1d1e <__fp_splitA+0xc>
    1d3c:	86 95       	lsr	r24
    1d3e:	71 05       	cpc	r23, r1
    1d40:	61 05       	cpc	r22, r1
    1d42:	08 94       	sec
    1d44:	08 95       	ret

00001d46 <__fp_zero>:
    1d46:	e8 94       	clt

00001d48 <__fp_szero>:
    1d48:	bb 27       	eor	r27, r27
    1d4a:	66 27       	eor	r22, r22
    1d4c:	77 27       	eor	r23, r23
    1d4e:	cb 01       	movw	r24, r22
    1d50:	97 f9       	bld	r25, 7
    1d52:	08 95       	ret

00001d54 <__mulsf3>:
    1d54:	0e 94 bd 0e 	call	0x1d7a	; 0x1d7a <__mulsf3x>
    1d58:	0c 94 70 0e 	jmp	0x1ce0	; 0x1ce0 <__fp_round>
    1d5c:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <__fp_pscA>
    1d60:	38 f0       	brcs	.+14     	; 0x1d70 <__mulsf3+0x1c>
    1d62:	0e 94 69 0e 	call	0x1cd2	; 0x1cd2 <__fp_pscB>
    1d66:	20 f0       	brcs	.+8      	; 0x1d70 <__mulsf3+0x1c>
    1d68:	95 23       	and	r25, r21
    1d6a:	11 f0       	breq	.+4      	; 0x1d70 <__mulsf3+0x1c>
    1d6c:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__fp_inf>
    1d70:	0c 94 5f 0e 	jmp	0x1cbe	; 0x1cbe <__fp_nan>
    1d74:	11 24       	eor	r1, r1
    1d76:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <__fp_szero>

00001d7a <__mulsf3x>:
    1d7a:	0e 94 81 0e 	call	0x1d02	; 0x1d02 <__fp_split3>
    1d7e:	70 f3       	brcs	.-36     	; 0x1d5c <__mulsf3+0x8>

00001d80 <__mulsf3_pse>:
    1d80:	95 9f       	mul	r25, r21
    1d82:	c1 f3       	breq	.-16     	; 0x1d74 <__mulsf3+0x20>
    1d84:	95 0f       	add	r25, r21
    1d86:	50 e0       	ldi	r21, 0x00	; 0
    1d88:	55 1f       	adc	r21, r21
    1d8a:	62 9f       	mul	r22, r18
    1d8c:	f0 01       	movw	r30, r0
    1d8e:	72 9f       	mul	r23, r18
    1d90:	bb 27       	eor	r27, r27
    1d92:	f0 0d       	add	r31, r0
    1d94:	b1 1d       	adc	r27, r1
    1d96:	63 9f       	mul	r22, r19
    1d98:	aa 27       	eor	r26, r26
    1d9a:	f0 0d       	add	r31, r0
    1d9c:	b1 1d       	adc	r27, r1
    1d9e:	aa 1f       	adc	r26, r26
    1da0:	64 9f       	mul	r22, r20
    1da2:	66 27       	eor	r22, r22
    1da4:	b0 0d       	add	r27, r0
    1da6:	a1 1d       	adc	r26, r1
    1da8:	66 1f       	adc	r22, r22
    1daa:	82 9f       	mul	r24, r18
    1dac:	22 27       	eor	r18, r18
    1dae:	b0 0d       	add	r27, r0
    1db0:	a1 1d       	adc	r26, r1
    1db2:	62 1f       	adc	r22, r18
    1db4:	73 9f       	mul	r23, r19
    1db6:	b0 0d       	add	r27, r0
    1db8:	a1 1d       	adc	r26, r1
    1dba:	62 1f       	adc	r22, r18
    1dbc:	83 9f       	mul	r24, r19
    1dbe:	a0 0d       	add	r26, r0
    1dc0:	61 1d       	adc	r22, r1
    1dc2:	22 1f       	adc	r18, r18
    1dc4:	74 9f       	mul	r23, r20
    1dc6:	33 27       	eor	r19, r19
    1dc8:	a0 0d       	add	r26, r0
    1dca:	61 1d       	adc	r22, r1
    1dcc:	23 1f       	adc	r18, r19
    1dce:	84 9f       	mul	r24, r20
    1dd0:	60 0d       	add	r22, r0
    1dd2:	21 1d       	adc	r18, r1
    1dd4:	82 2f       	mov	r24, r18
    1dd6:	76 2f       	mov	r23, r22
    1dd8:	6a 2f       	mov	r22, r26
    1dda:	11 24       	eor	r1, r1
    1ddc:	9f 57       	subi	r25, 0x7F	; 127
    1dde:	50 40       	sbci	r21, 0x00	; 0
    1de0:	9a f0       	brmi	.+38     	; 0x1e08 <__mulsf3_pse+0x88>
    1de2:	f1 f0       	breq	.+60     	; 0x1e20 <__mulsf3_pse+0xa0>
    1de4:	88 23       	and	r24, r24
    1de6:	4a f0       	brmi	.+18     	; 0x1dfa <__mulsf3_pse+0x7a>
    1de8:	ee 0f       	add	r30, r30
    1dea:	ff 1f       	adc	r31, r31
    1dec:	bb 1f       	adc	r27, r27
    1dee:	66 1f       	adc	r22, r22
    1df0:	77 1f       	adc	r23, r23
    1df2:	88 1f       	adc	r24, r24
    1df4:	91 50       	subi	r25, 0x01	; 1
    1df6:	50 40       	sbci	r21, 0x00	; 0
    1df8:	a9 f7       	brne	.-22     	; 0x1de4 <__mulsf3_pse+0x64>
    1dfa:	9e 3f       	cpi	r25, 0xFE	; 254
    1dfc:	51 05       	cpc	r21, r1
    1dfe:	80 f0       	brcs	.+32     	; 0x1e20 <__mulsf3_pse+0xa0>
    1e00:	0c 94 59 0e 	jmp	0x1cb2	; 0x1cb2 <__fp_inf>
    1e04:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <__fp_szero>
    1e08:	5f 3f       	cpi	r21, 0xFF	; 255
    1e0a:	e4 f3       	brlt	.-8      	; 0x1e04 <__mulsf3_pse+0x84>
    1e0c:	98 3e       	cpi	r25, 0xE8	; 232
    1e0e:	d4 f3       	brlt	.-12     	; 0x1e04 <__mulsf3_pse+0x84>
    1e10:	86 95       	lsr	r24
    1e12:	77 95       	ror	r23
    1e14:	67 95       	ror	r22
    1e16:	b7 95       	ror	r27
    1e18:	f7 95       	ror	r31
    1e1a:	e7 95       	ror	r30
    1e1c:	9f 5f       	subi	r25, 0xFF	; 255
    1e1e:	c1 f7       	brne	.-16     	; 0x1e10 <__mulsf3_pse+0x90>
    1e20:	fe 2b       	or	r31, r30
    1e22:	88 0f       	add	r24, r24
    1e24:	91 1d       	adc	r25, r1
    1e26:	96 95       	lsr	r25
    1e28:	87 95       	ror	r24
    1e2a:	97 f9       	bld	r25, 7
    1e2c:	08 95       	ret

00001e2e <__divmodhi4>:
    1e2e:	97 fb       	bst	r25, 7
    1e30:	07 2e       	mov	r0, r23
    1e32:	16 f4       	brtc	.+4      	; 0x1e38 <__divmodhi4+0xa>
    1e34:	00 94       	com	r0
    1e36:	07 d0       	rcall	.+14     	; 0x1e46 <__divmodhi4_neg1>
    1e38:	77 fd       	sbrc	r23, 7
    1e3a:	09 d0       	rcall	.+18     	; 0x1e4e <__divmodhi4_neg2>
    1e3c:	0e 94 31 0f 	call	0x1e62	; 0x1e62 <__udivmodhi4>
    1e40:	07 fc       	sbrc	r0, 7
    1e42:	05 d0       	rcall	.+10     	; 0x1e4e <__divmodhi4_neg2>
    1e44:	3e f4       	brtc	.+14     	; 0x1e54 <__divmodhi4_exit>

00001e46 <__divmodhi4_neg1>:
    1e46:	90 95       	com	r25
    1e48:	81 95       	neg	r24
    1e4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e4c:	08 95       	ret

00001e4e <__divmodhi4_neg2>:
    1e4e:	70 95       	com	r23
    1e50:	61 95       	neg	r22
    1e52:	7f 4f       	sbci	r23, 0xFF	; 255

00001e54 <__divmodhi4_exit>:
    1e54:	08 95       	ret

00001e56 <__tablejump2__>:
    1e56:	ee 0f       	add	r30, r30
    1e58:	ff 1f       	adc	r31, r31
    1e5a:	05 90       	lpm	r0, Z+
    1e5c:	f4 91       	lpm	r31, Z
    1e5e:	e0 2d       	mov	r30, r0
    1e60:	09 94       	ijmp

00001e62 <__udivmodhi4>:
    1e62:	aa 1b       	sub	r26, r26
    1e64:	bb 1b       	sub	r27, r27
    1e66:	51 e1       	ldi	r21, 0x11	; 17
    1e68:	07 c0       	rjmp	.+14     	; 0x1e78 <__udivmodhi4_ep>

00001e6a <__udivmodhi4_loop>:
    1e6a:	aa 1f       	adc	r26, r26
    1e6c:	bb 1f       	adc	r27, r27
    1e6e:	a6 17       	cp	r26, r22
    1e70:	b7 07       	cpc	r27, r23
    1e72:	10 f0       	brcs	.+4      	; 0x1e78 <__udivmodhi4_ep>
    1e74:	a6 1b       	sub	r26, r22
    1e76:	b7 0b       	sbc	r27, r23

00001e78 <__udivmodhi4_ep>:
    1e78:	88 1f       	adc	r24, r24
    1e7a:	99 1f       	adc	r25, r25
    1e7c:	5a 95       	dec	r21
    1e7e:	a9 f7       	brne	.-22     	; 0x1e6a <__udivmodhi4_loop>
    1e80:	80 95       	com	r24
    1e82:	90 95       	com	r25
    1e84:	bc 01       	movw	r22, r24
    1e86:	cd 01       	movw	r24, r26
    1e88:	08 95       	ret

00001e8a <fdevopen>:
    1e8a:	0f 93       	push	r16
    1e8c:	1f 93       	push	r17
    1e8e:	cf 93       	push	r28
    1e90:	df 93       	push	r29
    1e92:	00 97       	sbiw	r24, 0x00	; 0
    1e94:	31 f4       	brne	.+12     	; 0x1ea2 <fdevopen+0x18>
    1e96:	61 15       	cp	r22, r1
    1e98:	71 05       	cpc	r23, r1
    1e9a:	19 f4       	brne	.+6      	; 0x1ea2 <fdevopen+0x18>
    1e9c:	80 e0       	ldi	r24, 0x00	; 0
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	3a c0       	rjmp	.+116    	; 0x1f16 <fdevopen+0x8c>
    1ea2:	8b 01       	movw	r16, r22
    1ea4:	ec 01       	movw	r28, r24
    1ea6:	6e e0       	ldi	r22, 0x0E	; 14
    1ea8:	70 e0       	ldi	r23, 0x00	; 0
    1eaa:	81 e0       	ldi	r24, 0x01	; 1
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	0e 94 b7 11 	call	0x236e	; 0x236e <calloc>
    1eb2:	fc 01       	movw	r30, r24
    1eb4:	89 2b       	or	r24, r25
    1eb6:	91 f3       	breq	.-28     	; 0x1e9c <fdevopen+0x12>
    1eb8:	80 e8       	ldi	r24, 0x80	; 128
    1eba:	83 83       	std	Z+3, r24	; 0x03
    1ebc:	01 15       	cp	r16, r1
    1ebe:	11 05       	cpc	r17, r1
    1ec0:	71 f0       	breq	.+28     	; 0x1ede <fdevopen+0x54>
    1ec2:	13 87       	std	Z+11, r17	; 0x0b
    1ec4:	02 87       	std	Z+10, r16	; 0x0a
    1ec6:	81 e8       	ldi	r24, 0x81	; 129
    1ec8:	83 83       	std	Z+3, r24	; 0x03
    1eca:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <__iob>
    1ece:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <__iob+0x1>
    1ed2:	89 2b       	or	r24, r25
    1ed4:	21 f4       	brne	.+8      	; 0x1ede <fdevopen+0x54>
    1ed6:	f0 93 03 03 	sts	0x0303, r31	; 0x800303 <__iob+0x1>
    1eda:	e0 93 02 03 	sts	0x0302, r30	; 0x800302 <__iob>
    1ede:	20 97       	sbiw	r28, 0x00	; 0
    1ee0:	c9 f0       	breq	.+50     	; 0x1f14 <fdevopen+0x8a>
    1ee2:	d1 87       	std	Z+9, r29	; 0x09
    1ee4:	c0 87       	std	Z+8, r28	; 0x08
    1ee6:	83 81       	ldd	r24, Z+3	; 0x03
    1ee8:	82 60       	ori	r24, 0x02	; 2
    1eea:	83 83       	std	Z+3, r24	; 0x03
    1eec:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <__iob+0x2>
    1ef0:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <__iob+0x3>
    1ef4:	89 2b       	or	r24, r25
    1ef6:	71 f4       	brne	.+28     	; 0x1f14 <fdevopen+0x8a>
    1ef8:	f0 93 05 03 	sts	0x0305, r31	; 0x800305 <__iob+0x3>
    1efc:	e0 93 04 03 	sts	0x0304, r30	; 0x800304 <__iob+0x2>
    1f00:	80 91 06 03 	lds	r24, 0x0306	; 0x800306 <__iob+0x4>
    1f04:	90 91 07 03 	lds	r25, 0x0307	; 0x800307 <__iob+0x5>
    1f08:	89 2b       	or	r24, r25
    1f0a:	21 f4       	brne	.+8      	; 0x1f14 <fdevopen+0x8a>
    1f0c:	f0 93 07 03 	sts	0x0307, r31	; 0x800307 <__iob+0x5>
    1f10:	e0 93 06 03 	sts	0x0306, r30	; 0x800306 <__iob+0x4>
    1f14:	cf 01       	movw	r24, r30
    1f16:	df 91       	pop	r29
    1f18:	cf 91       	pop	r28
    1f1a:	1f 91       	pop	r17
    1f1c:	0f 91       	pop	r16
    1f1e:	08 95       	ret

00001f20 <printf>:
    1f20:	a0 e0       	ldi	r26, 0x00	; 0
    1f22:	b0 e0       	ldi	r27, 0x00	; 0
    1f24:	e6 e9       	ldi	r30, 0x96	; 150
    1f26:	ff e0       	ldi	r31, 0x0F	; 15
    1f28:	0c 94 bb 13 	jmp	0x2776	; 0x2776 <__prologue_saves__+0x20>
    1f2c:	ae 01       	movw	r20, r28
    1f2e:	4b 5f       	subi	r20, 0xFB	; 251
    1f30:	5f 4f       	sbci	r21, 0xFF	; 255
    1f32:	fa 01       	movw	r30, r20
    1f34:	61 91       	ld	r22, Z+
    1f36:	71 91       	ld	r23, Z+
    1f38:	af 01       	movw	r20, r30
    1f3a:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <__iob+0x2>
    1f3e:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <__iob+0x3>
    1f42:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <vfprintf>
    1f46:	e2 e0       	ldi	r30, 0x02	; 2
    1f48:	0c 94 d7 13 	jmp	0x27ae	; 0x27ae <__epilogue_restores__+0x20>

00001f4c <puts>:
    1f4c:	0f 93       	push	r16
    1f4e:	1f 93       	push	r17
    1f50:	cf 93       	push	r28
    1f52:	df 93       	push	r29
    1f54:	e0 91 04 03 	lds	r30, 0x0304	; 0x800304 <__iob+0x2>
    1f58:	f0 91 05 03 	lds	r31, 0x0305	; 0x800305 <__iob+0x3>
    1f5c:	23 81       	ldd	r18, Z+3	; 0x03
    1f5e:	21 ff       	sbrs	r18, 1
    1f60:	1b c0       	rjmp	.+54     	; 0x1f98 <puts+0x4c>
    1f62:	8c 01       	movw	r16, r24
    1f64:	d0 e0       	ldi	r29, 0x00	; 0
    1f66:	c0 e0       	ldi	r28, 0x00	; 0
    1f68:	f8 01       	movw	r30, r16
    1f6a:	81 91       	ld	r24, Z+
    1f6c:	8f 01       	movw	r16, r30
    1f6e:	60 91 04 03 	lds	r22, 0x0304	; 0x800304 <__iob+0x2>
    1f72:	70 91 05 03 	lds	r23, 0x0305	; 0x800305 <__iob+0x3>
    1f76:	db 01       	movw	r26, r22
    1f78:	18 96       	adiw	r26, 0x08	; 8
    1f7a:	ed 91       	ld	r30, X+
    1f7c:	fc 91       	ld	r31, X
    1f7e:	19 97       	sbiw	r26, 0x09	; 9
    1f80:	88 23       	and	r24, r24
    1f82:	31 f0       	breq	.+12     	; 0x1f90 <puts+0x44>
    1f84:	09 95       	icall
    1f86:	89 2b       	or	r24, r25
    1f88:	79 f3       	breq	.-34     	; 0x1f68 <puts+0x1c>
    1f8a:	df ef       	ldi	r29, 0xFF	; 255
    1f8c:	cf ef       	ldi	r28, 0xFF	; 255
    1f8e:	ec cf       	rjmp	.-40     	; 0x1f68 <puts+0x1c>
    1f90:	8a e0       	ldi	r24, 0x0A	; 10
    1f92:	09 95       	icall
    1f94:	89 2b       	or	r24, r25
    1f96:	19 f0       	breq	.+6      	; 0x1f9e <puts+0x52>
    1f98:	8f ef       	ldi	r24, 0xFF	; 255
    1f9a:	9f ef       	ldi	r25, 0xFF	; 255
    1f9c:	02 c0       	rjmp	.+4      	; 0x1fa2 <puts+0x56>
    1f9e:	8d 2f       	mov	r24, r29
    1fa0:	9c 2f       	mov	r25, r28
    1fa2:	df 91       	pop	r29
    1fa4:	cf 91       	pop	r28
    1fa6:	1f 91       	pop	r17
    1fa8:	0f 91       	pop	r16
    1faa:	08 95       	ret

00001fac <vfprintf>:
    1fac:	ab e0       	ldi	r26, 0x0B	; 11
    1fae:	b0 e0       	ldi	r27, 0x00	; 0
    1fb0:	ec ed       	ldi	r30, 0xDC	; 220
    1fb2:	ff e0       	ldi	r31, 0x0F	; 15
    1fb4:	0c 94 ab 13 	jmp	0x2756	; 0x2756 <__prologue_saves__>
    1fb8:	6c 01       	movw	r12, r24
    1fba:	7b 01       	movw	r14, r22
    1fbc:	8a 01       	movw	r16, r20
    1fbe:	fc 01       	movw	r30, r24
    1fc0:	17 82       	std	Z+7, r1	; 0x07
    1fc2:	16 82       	std	Z+6, r1	; 0x06
    1fc4:	83 81       	ldd	r24, Z+3	; 0x03
    1fc6:	81 ff       	sbrs	r24, 1
    1fc8:	cc c1       	rjmp	.+920    	; 0x2362 <vfprintf+0x3b6>
    1fca:	ce 01       	movw	r24, r28
    1fcc:	01 96       	adiw	r24, 0x01	; 1
    1fce:	3c 01       	movw	r6, r24
    1fd0:	f6 01       	movw	r30, r12
    1fd2:	93 81       	ldd	r25, Z+3	; 0x03
    1fd4:	f7 01       	movw	r30, r14
    1fd6:	93 fd       	sbrc	r25, 3
    1fd8:	85 91       	lpm	r24, Z+
    1fda:	93 ff       	sbrs	r25, 3
    1fdc:	81 91       	ld	r24, Z+
    1fde:	7f 01       	movw	r14, r30
    1fe0:	88 23       	and	r24, r24
    1fe2:	09 f4       	brne	.+2      	; 0x1fe6 <vfprintf+0x3a>
    1fe4:	ba c1       	rjmp	.+884    	; 0x235a <vfprintf+0x3ae>
    1fe6:	85 32       	cpi	r24, 0x25	; 37
    1fe8:	39 f4       	brne	.+14     	; 0x1ff8 <vfprintf+0x4c>
    1fea:	93 fd       	sbrc	r25, 3
    1fec:	85 91       	lpm	r24, Z+
    1fee:	93 ff       	sbrs	r25, 3
    1ff0:	81 91       	ld	r24, Z+
    1ff2:	7f 01       	movw	r14, r30
    1ff4:	85 32       	cpi	r24, 0x25	; 37
    1ff6:	29 f4       	brne	.+10     	; 0x2002 <vfprintf+0x56>
    1ff8:	b6 01       	movw	r22, r12
    1ffa:	90 e0       	ldi	r25, 0x00	; 0
    1ffc:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    2000:	e7 cf       	rjmp	.-50     	; 0x1fd0 <vfprintf+0x24>
    2002:	91 2c       	mov	r9, r1
    2004:	21 2c       	mov	r2, r1
    2006:	31 2c       	mov	r3, r1
    2008:	ff e1       	ldi	r31, 0x1F	; 31
    200a:	f3 15       	cp	r31, r3
    200c:	d8 f0       	brcs	.+54     	; 0x2044 <vfprintf+0x98>
    200e:	8b 32       	cpi	r24, 0x2B	; 43
    2010:	79 f0       	breq	.+30     	; 0x2030 <vfprintf+0x84>
    2012:	38 f4       	brcc	.+14     	; 0x2022 <vfprintf+0x76>
    2014:	80 32       	cpi	r24, 0x20	; 32
    2016:	79 f0       	breq	.+30     	; 0x2036 <vfprintf+0x8a>
    2018:	83 32       	cpi	r24, 0x23	; 35
    201a:	a1 f4       	brne	.+40     	; 0x2044 <vfprintf+0x98>
    201c:	23 2d       	mov	r18, r3
    201e:	20 61       	ori	r18, 0x10	; 16
    2020:	1d c0       	rjmp	.+58     	; 0x205c <vfprintf+0xb0>
    2022:	8d 32       	cpi	r24, 0x2D	; 45
    2024:	61 f0       	breq	.+24     	; 0x203e <vfprintf+0x92>
    2026:	80 33       	cpi	r24, 0x30	; 48
    2028:	69 f4       	brne	.+26     	; 0x2044 <vfprintf+0x98>
    202a:	23 2d       	mov	r18, r3
    202c:	21 60       	ori	r18, 0x01	; 1
    202e:	16 c0       	rjmp	.+44     	; 0x205c <vfprintf+0xb0>
    2030:	83 2d       	mov	r24, r3
    2032:	82 60       	ori	r24, 0x02	; 2
    2034:	38 2e       	mov	r3, r24
    2036:	e3 2d       	mov	r30, r3
    2038:	e4 60       	ori	r30, 0x04	; 4
    203a:	3e 2e       	mov	r3, r30
    203c:	2a c0       	rjmp	.+84     	; 0x2092 <vfprintf+0xe6>
    203e:	f3 2d       	mov	r31, r3
    2040:	f8 60       	ori	r31, 0x08	; 8
    2042:	1d c0       	rjmp	.+58     	; 0x207e <vfprintf+0xd2>
    2044:	37 fc       	sbrc	r3, 7
    2046:	2d c0       	rjmp	.+90     	; 0x20a2 <vfprintf+0xf6>
    2048:	20 ed       	ldi	r18, 0xD0	; 208
    204a:	28 0f       	add	r18, r24
    204c:	2a 30       	cpi	r18, 0x0A	; 10
    204e:	40 f0       	brcs	.+16     	; 0x2060 <vfprintf+0xb4>
    2050:	8e 32       	cpi	r24, 0x2E	; 46
    2052:	b9 f4       	brne	.+46     	; 0x2082 <vfprintf+0xd6>
    2054:	36 fc       	sbrc	r3, 6
    2056:	81 c1       	rjmp	.+770    	; 0x235a <vfprintf+0x3ae>
    2058:	23 2d       	mov	r18, r3
    205a:	20 64       	ori	r18, 0x40	; 64
    205c:	32 2e       	mov	r3, r18
    205e:	19 c0       	rjmp	.+50     	; 0x2092 <vfprintf+0xe6>
    2060:	36 fe       	sbrs	r3, 6
    2062:	06 c0       	rjmp	.+12     	; 0x2070 <vfprintf+0xc4>
    2064:	8a e0       	ldi	r24, 0x0A	; 10
    2066:	98 9e       	mul	r9, r24
    2068:	20 0d       	add	r18, r0
    206a:	11 24       	eor	r1, r1
    206c:	92 2e       	mov	r9, r18
    206e:	11 c0       	rjmp	.+34     	; 0x2092 <vfprintf+0xe6>
    2070:	ea e0       	ldi	r30, 0x0A	; 10
    2072:	2e 9e       	mul	r2, r30
    2074:	20 0d       	add	r18, r0
    2076:	11 24       	eor	r1, r1
    2078:	22 2e       	mov	r2, r18
    207a:	f3 2d       	mov	r31, r3
    207c:	f0 62       	ori	r31, 0x20	; 32
    207e:	3f 2e       	mov	r3, r31
    2080:	08 c0       	rjmp	.+16     	; 0x2092 <vfprintf+0xe6>
    2082:	8c 36       	cpi	r24, 0x6C	; 108
    2084:	21 f4       	brne	.+8      	; 0x208e <vfprintf+0xe2>
    2086:	83 2d       	mov	r24, r3
    2088:	80 68       	ori	r24, 0x80	; 128
    208a:	38 2e       	mov	r3, r24
    208c:	02 c0       	rjmp	.+4      	; 0x2092 <vfprintf+0xe6>
    208e:	88 36       	cpi	r24, 0x68	; 104
    2090:	41 f4       	brne	.+16     	; 0x20a2 <vfprintf+0xf6>
    2092:	f7 01       	movw	r30, r14
    2094:	93 fd       	sbrc	r25, 3
    2096:	85 91       	lpm	r24, Z+
    2098:	93 ff       	sbrs	r25, 3
    209a:	81 91       	ld	r24, Z+
    209c:	7f 01       	movw	r14, r30
    209e:	81 11       	cpse	r24, r1
    20a0:	b3 cf       	rjmp	.-154    	; 0x2008 <vfprintf+0x5c>
    20a2:	98 2f       	mov	r25, r24
    20a4:	9f 7d       	andi	r25, 0xDF	; 223
    20a6:	95 54       	subi	r25, 0x45	; 69
    20a8:	93 30       	cpi	r25, 0x03	; 3
    20aa:	28 f4       	brcc	.+10     	; 0x20b6 <vfprintf+0x10a>
    20ac:	0c 5f       	subi	r16, 0xFC	; 252
    20ae:	1f 4f       	sbci	r17, 0xFF	; 255
    20b0:	9f e3       	ldi	r25, 0x3F	; 63
    20b2:	99 83       	std	Y+1, r25	; 0x01
    20b4:	0d c0       	rjmp	.+26     	; 0x20d0 <vfprintf+0x124>
    20b6:	83 36       	cpi	r24, 0x63	; 99
    20b8:	31 f0       	breq	.+12     	; 0x20c6 <vfprintf+0x11a>
    20ba:	83 37       	cpi	r24, 0x73	; 115
    20bc:	71 f0       	breq	.+28     	; 0x20da <vfprintf+0x12e>
    20be:	83 35       	cpi	r24, 0x53	; 83
    20c0:	09 f0       	breq	.+2      	; 0x20c4 <vfprintf+0x118>
    20c2:	59 c0       	rjmp	.+178    	; 0x2176 <vfprintf+0x1ca>
    20c4:	21 c0       	rjmp	.+66     	; 0x2108 <vfprintf+0x15c>
    20c6:	f8 01       	movw	r30, r16
    20c8:	80 81       	ld	r24, Z
    20ca:	89 83       	std	Y+1, r24	; 0x01
    20cc:	0e 5f       	subi	r16, 0xFE	; 254
    20ce:	1f 4f       	sbci	r17, 0xFF	; 255
    20d0:	88 24       	eor	r8, r8
    20d2:	83 94       	inc	r8
    20d4:	91 2c       	mov	r9, r1
    20d6:	53 01       	movw	r10, r6
    20d8:	13 c0       	rjmp	.+38     	; 0x2100 <vfprintf+0x154>
    20da:	28 01       	movw	r4, r16
    20dc:	f2 e0       	ldi	r31, 0x02	; 2
    20de:	4f 0e       	add	r4, r31
    20e0:	51 1c       	adc	r5, r1
    20e2:	f8 01       	movw	r30, r16
    20e4:	a0 80       	ld	r10, Z
    20e6:	b1 80       	ldd	r11, Z+1	; 0x01
    20e8:	36 fe       	sbrs	r3, 6
    20ea:	03 c0       	rjmp	.+6      	; 0x20f2 <vfprintf+0x146>
    20ec:	69 2d       	mov	r22, r9
    20ee:	70 e0       	ldi	r23, 0x00	; 0
    20f0:	02 c0       	rjmp	.+4      	; 0x20f6 <vfprintf+0x14a>
    20f2:	6f ef       	ldi	r22, 0xFF	; 255
    20f4:	7f ef       	ldi	r23, 0xFF	; 255
    20f6:	c5 01       	movw	r24, r10
    20f8:	0e 94 06 13 	call	0x260c	; 0x260c <strnlen>
    20fc:	4c 01       	movw	r8, r24
    20fe:	82 01       	movw	r16, r4
    2100:	f3 2d       	mov	r31, r3
    2102:	ff 77       	andi	r31, 0x7F	; 127
    2104:	3f 2e       	mov	r3, r31
    2106:	16 c0       	rjmp	.+44     	; 0x2134 <vfprintf+0x188>
    2108:	28 01       	movw	r4, r16
    210a:	22 e0       	ldi	r18, 0x02	; 2
    210c:	42 0e       	add	r4, r18
    210e:	51 1c       	adc	r5, r1
    2110:	f8 01       	movw	r30, r16
    2112:	a0 80       	ld	r10, Z
    2114:	b1 80       	ldd	r11, Z+1	; 0x01
    2116:	36 fe       	sbrs	r3, 6
    2118:	03 c0       	rjmp	.+6      	; 0x2120 <vfprintf+0x174>
    211a:	69 2d       	mov	r22, r9
    211c:	70 e0       	ldi	r23, 0x00	; 0
    211e:	02 c0       	rjmp	.+4      	; 0x2124 <vfprintf+0x178>
    2120:	6f ef       	ldi	r22, 0xFF	; 255
    2122:	7f ef       	ldi	r23, 0xFF	; 255
    2124:	c5 01       	movw	r24, r10
    2126:	0e 94 f4 12 	call	0x25e8	; 0x25e8 <strnlen_P>
    212a:	4c 01       	movw	r8, r24
    212c:	f3 2d       	mov	r31, r3
    212e:	f0 68       	ori	r31, 0x80	; 128
    2130:	3f 2e       	mov	r3, r31
    2132:	82 01       	movw	r16, r4
    2134:	33 fc       	sbrc	r3, 3
    2136:	1b c0       	rjmp	.+54     	; 0x216e <vfprintf+0x1c2>
    2138:	82 2d       	mov	r24, r2
    213a:	90 e0       	ldi	r25, 0x00	; 0
    213c:	88 16       	cp	r8, r24
    213e:	99 06       	cpc	r9, r25
    2140:	b0 f4       	brcc	.+44     	; 0x216e <vfprintf+0x1c2>
    2142:	b6 01       	movw	r22, r12
    2144:	80 e2       	ldi	r24, 0x20	; 32
    2146:	90 e0       	ldi	r25, 0x00	; 0
    2148:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    214c:	2a 94       	dec	r2
    214e:	f4 cf       	rjmp	.-24     	; 0x2138 <vfprintf+0x18c>
    2150:	f5 01       	movw	r30, r10
    2152:	37 fc       	sbrc	r3, 7
    2154:	85 91       	lpm	r24, Z+
    2156:	37 fe       	sbrs	r3, 7
    2158:	81 91       	ld	r24, Z+
    215a:	5f 01       	movw	r10, r30
    215c:	b6 01       	movw	r22, r12
    215e:	90 e0       	ldi	r25, 0x00	; 0
    2160:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    2164:	21 10       	cpse	r2, r1
    2166:	2a 94       	dec	r2
    2168:	21 e0       	ldi	r18, 0x01	; 1
    216a:	82 1a       	sub	r8, r18
    216c:	91 08       	sbc	r9, r1
    216e:	81 14       	cp	r8, r1
    2170:	91 04       	cpc	r9, r1
    2172:	71 f7       	brne	.-36     	; 0x2150 <vfprintf+0x1a4>
    2174:	e8 c0       	rjmp	.+464    	; 0x2346 <vfprintf+0x39a>
    2176:	84 36       	cpi	r24, 0x64	; 100
    2178:	11 f0       	breq	.+4      	; 0x217e <vfprintf+0x1d2>
    217a:	89 36       	cpi	r24, 0x69	; 105
    217c:	41 f5       	brne	.+80     	; 0x21ce <vfprintf+0x222>
    217e:	f8 01       	movw	r30, r16
    2180:	37 fe       	sbrs	r3, 7
    2182:	07 c0       	rjmp	.+14     	; 0x2192 <vfprintf+0x1e6>
    2184:	60 81       	ld	r22, Z
    2186:	71 81       	ldd	r23, Z+1	; 0x01
    2188:	82 81       	ldd	r24, Z+2	; 0x02
    218a:	93 81       	ldd	r25, Z+3	; 0x03
    218c:	0c 5f       	subi	r16, 0xFC	; 252
    218e:	1f 4f       	sbci	r17, 0xFF	; 255
    2190:	08 c0       	rjmp	.+16     	; 0x21a2 <vfprintf+0x1f6>
    2192:	60 81       	ld	r22, Z
    2194:	71 81       	ldd	r23, Z+1	; 0x01
    2196:	07 2e       	mov	r0, r23
    2198:	00 0c       	add	r0, r0
    219a:	88 0b       	sbc	r24, r24
    219c:	99 0b       	sbc	r25, r25
    219e:	0e 5f       	subi	r16, 0xFE	; 254
    21a0:	1f 4f       	sbci	r17, 0xFF	; 255
    21a2:	f3 2d       	mov	r31, r3
    21a4:	ff 76       	andi	r31, 0x6F	; 111
    21a6:	3f 2e       	mov	r3, r31
    21a8:	97 ff       	sbrs	r25, 7
    21aa:	09 c0       	rjmp	.+18     	; 0x21be <vfprintf+0x212>
    21ac:	90 95       	com	r25
    21ae:	80 95       	com	r24
    21b0:	70 95       	com	r23
    21b2:	61 95       	neg	r22
    21b4:	7f 4f       	sbci	r23, 0xFF	; 255
    21b6:	8f 4f       	sbci	r24, 0xFF	; 255
    21b8:	9f 4f       	sbci	r25, 0xFF	; 255
    21ba:	f0 68       	ori	r31, 0x80	; 128
    21bc:	3f 2e       	mov	r3, r31
    21be:	2a e0       	ldi	r18, 0x0A	; 10
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	a3 01       	movw	r20, r6
    21c4:	0e 94 4d 13 	call	0x269a	; 0x269a <__ultoa_invert>
    21c8:	88 2e       	mov	r8, r24
    21ca:	86 18       	sub	r8, r6
    21cc:	45 c0       	rjmp	.+138    	; 0x2258 <vfprintf+0x2ac>
    21ce:	85 37       	cpi	r24, 0x75	; 117
    21d0:	31 f4       	brne	.+12     	; 0x21de <vfprintf+0x232>
    21d2:	23 2d       	mov	r18, r3
    21d4:	2f 7e       	andi	r18, 0xEF	; 239
    21d6:	b2 2e       	mov	r11, r18
    21d8:	2a e0       	ldi	r18, 0x0A	; 10
    21da:	30 e0       	ldi	r19, 0x00	; 0
    21dc:	25 c0       	rjmp	.+74     	; 0x2228 <vfprintf+0x27c>
    21de:	93 2d       	mov	r25, r3
    21e0:	99 7f       	andi	r25, 0xF9	; 249
    21e2:	b9 2e       	mov	r11, r25
    21e4:	8f 36       	cpi	r24, 0x6F	; 111
    21e6:	c1 f0       	breq	.+48     	; 0x2218 <vfprintf+0x26c>
    21e8:	18 f4       	brcc	.+6      	; 0x21f0 <vfprintf+0x244>
    21ea:	88 35       	cpi	r24, 0x58	; 88
    21ec:	79 f0       	breq	.+30     	; 0x220c <vfprintf+0x260>
    21ee:	b5 c0       	rjmp	.+362    	; 0x235a <vfprintf+0x3ae>
    21f0:	80 37       	cpi	r24, 0x70	; 112
    21f2:	19 f0       	breq	.+6      	; 0x21fa <vfprintf+0x24e>
    21f4:	88 37       	cpi	r24, 0x78	; 120
    21f6:	21 f0       	breq	.+8      	; 0x2200 <vfprintf+0x254>
    21f8:	b0 c0       	rjmp	.+352    	; 0x235a <vfprintf+0x3ae>
    21fa:	e9 2f       	mov	r30, r25
    21fc:	e0 61       	ori	r30, 0x10	; 16
    21fe:	be 2e       	mov	r11, r30
    2200:	b4 fe       	sbrs	r11, 4
    2202:	0d c0       	rjmp	.+26     	; 0x221e <vfprintf+0x272>
    2204:	fb 2d       	mov	r31, r11
    2206:	f4 60       	ori	r31, 0x04	; 4
    2208:	bf 2e       	mov	r11, r31
    220a:	09 c0       	rjmp	.+18     	; 0x221e <vfprintf+0x272>
    220c:	34 fe       	sbrs	r3, 4
    220e:	0a c0       	rjmp	.+20     	; 0x2224 <vfprintf+0x278>
    2210:	29 2f       	mov	r18, r25
    2212:	26 60       	ori	r18, 0x06	; 6
    2214:	b2 2e       	mov	r11, r18
    2216:	06 c0       	rjmp	.+12     	; 0x2224 <vfprintf+0x278>
    2218:	28 e0       	ldi	r18, 0x08	; 8
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	05 c0       	rjmp	.+10     	; 0x2228 <vfprintf+0x27c>
    221e:	20 e1       	ldi	r18, 0x10	; 16
    2220:	30 e0       	ldi	r19, 0x00	; 0
    2222:	02 c0       	rjmp	.+4      	; 0x2228 <vfprintf+0x27c>
    2224:	20 e1       	ldi	r18, 0x10	; 16
    2226:	32 e0       	ldi	r19, 0x02	; 2
    2228:	f8 01       	movw	r30, r16
    222a:	b7 fe       	sbrs	r11, 7
    222c:	07 c0       	rjmp	.+14     	; 0x223c <vfprintf+0x290>
    222e:	60 81       	ld	r22, Z
    2230:	71 81       	ldd	r23, Z+1	; 0x01
    2232:	82 81       	ldd	r24, Z+2	; 0x02
    2234:	93 81       	ldd	r25, Z+3	; 0x03
    2236:	0c 5f       	subi	r16, 0xFC	; 252
    2238:	1f 4f       	sbci	r17, 0xFF	; 255
    223a:	06 c0       	rjmp	.+12     	; 0x2248 <vfprintf+0x29c>
    223c:	60 81       	ld	r22, Z
    223e:	71 81       	ldd	r23, Z+1	; 0x01
    2240:	80 e0       	ldi	r24, 0x00	; 0
    2242:	90 e0       	ldi	r25, 0x00	; 0
    2244:	0e 5f       	subi	r16, 0xFE	; 254
    2246:	1f 4f       	sbci	r17, 0xFF	; 255
    2248:	a3 01       	movw	r20, r6
    224a:	0e 94 4d 13 	call	0x269a	; 0x269a <__ultoa_invert>
    224e:	88 2e       	mov	r8, r24
    2250:	86 18       	sub	r8, r6
    2252:	fb 2d       	mov	r31, r11
    2254:	ff 77       	andi	r31, 0x7F	; 127
    2256:	3f 2e       	mov	r3, r31
    2258:	36 fe       	sbrs	r3, 6
    225a:	0d c0       	rjmp	.+26     	; 0x2276 <vfprintf+0x2ca>
    225c:	23 2d       	mov	r18, r3
    225e:	2e 7f       	andi	r18, 0xFE	; 254
    2260:	a2 2e       	mov	r10, r18
    2262:	89 14       	cp	r8, r9
    2264:	58 f4       	brcc	.+22     	; 0x227c <vfprintf+0x2d0>
    2266:	34 fe       	sbrs	r3, 4
    2268:	0b c0       	rjmp	.+22     	; 0x2280 <vfprintf+0x2d4>
    226a:	32 fc       	sbrc	r3, 2
    226c:	09 c0       	rjmp	.+18     	; 0x2280 <vfprintf+0x2d4>
    226e:	83 2d       	mov	r24, r3
    2270:	8e 7e       	andi	r24, 0xEE	; 238
    2272:	a8 2e       	mov	r10, r24
    2274:	05 c0       	rjmp	.+10     	; 0x2280 <vfprintf+0x2d4>
    2276:	b8 2c       	mov	r11, r8
    2278:	a3 2c       	mov	r10, r3
    227a:	03 c0       	rjmp	.+6      	; 0x2282 <vfprintf+0x2d6>
    227c:	b8 2c       	mov	r11, r8
    227e:	01 c0       	rjmp	.+2      	; 0x2282 <vfprintf+0x2d6>
    2280:	b9 2c       	mov	r11, r9
    2282:	a4 fe       	sbrs	r10, 4
    2284:	0f c0       	rjmp	.+30     	; 0x22a4 <vfprintf+0x2f8>
    2286:	fe 01       	movw	r30, r28
    2288:	e8 0d       	add	r30, r8
    228a:	f1 1d       	adc	r31, r1
    228c:	80 81       	ld	r24, Z
    228e:	80 33       	cpi	r24, 0x30	; 48
    2290:	21 f4       	brne	.+8      	; 0x229a <vfprintf+0x2ee>
    2292:	9a 2d       	mov	r25, r10
    2294:	99 7e       	andi	r25, 0xE9	; 233
    2296:	a9 2e       	mov	r10, r25
    2298:	09 c0       	rjmp	.+18     	; 0x22ac <vfprintf+0x300>
    229a:	a2 fe       	sbrs	r10, 2
    229c:	06 c0       	rjmp	.+12     	; 0x22aa <vfprintf+0x2fe>
    229e:	b3 94       	inc	r11
    22a0:	b3 94       	inc	r11
    22a2:	04 c0       	rjmp	.+8      	; 0x22ac <vfprintf+0x300>
    22a4:	8a 2d       	mov	r24, r10
    22a6:	86 78       	andi	r24, 0x86	; 134
    22a8:	09 f0       	breq	.+2      	; 0x22ac <vfprintf+0x300>
    22aa:	b3 94       	inc	r11
    22ac:	a3 fc       	sbrc	r10, 3
    22ae:	11 c0       	rjmp	.+34     	; 0x22d2 <vfprintf+0x326>
    22b0:	a0 fe       	sbrs	r10, 0
    22b2:	06 c0       	rjmp	.+12     	; 0x22c0 <vfprintf+0x314>
    22b4:	b2 14       	cp	r11, r2
    22b6:	88 f4       	brcc	.+34     	; 0x22da <vfprintf+0x32e>
    22b8:	28 0c       	add	r2, r8
    22ba:	92 2c       	mov	r9, r2
    22bc:	9b 18       	sub	r9, r11
    22be:	0e c0       	rjmp	.+28     	; 0x22dc <vfprintf+0x330>
    22c0:	b2 14       	cp	r11, r2
    22c2:	60 f4       	brcc	.+24     	; 0x22dc <vfprintf+0x330>
    22c4:	b6 01       	movw	r22, r12
    22c6:	80 e2       	ldi	r24, 0x20	; 32
    22c8:	90 e0       	ldi	r25, 0x00	; 0
    22ca:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    22ce:	b3 94       	inc	r11
    22d0:	f7 cf       	rjmp	.-18     	; 0x22c0 <vfprintf+0x314>
    22d2:	b2 14       	cp	r11, r2
    22d4:	18 f4       	brcc	.+6      	; 0x22dc <vfprintf+0x330>
    22d6:	2b 18       	sub	r2, r11
    22d8:	02 c0       	rjmp	.+4      	; 0x22de <vfprintf+0x332>
    22da:	98 2c       	mov	r9, r8
    22dc:	21 2c       	mov	r2, r1
    22de:	a4 fe       	sbrs	r10, 4
    22e0:	10 c0       	rjmp	.+32     	; 0x2302 <vfprintf+0x356>
    22e2:	b6 01       	movw	r22, r12
    22e4:	80 e3       	ldi	r24, 0x30	; 48
    22e6:	90 e0       	ldi	r25, 0x00	; 0
    22e8:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    22ec:	a2 fe       	sbrs	r10, 2
    22ee:	17 c0       	rjmp	.+46     	; 0x231e <vfprintf+0x372>
    22f0:	a1 fc       	sbrc	r10, 1
    22f2:	03 c0       	rjmp	.+6      	; 0x22fa <vfprintf+0x34e>
    22f4:	88 e7       	ldi	r24, 0x78	; 120
    22f6:	90 e0       	ldi	r25, 0x00	; 0
    22f8:	02 c0       	rjmp	.+4      	; 0x22fe <vfprintf+0x352>
    22fa:	88 e5       	ldi	r24, 0x58	; 88
    22fc:	90 e0       	ldi	r25, 0x00	; 0
    22fe:	b6 01       	movw	r22, r12
    2300:	0c c0       	rjmp	.+24     	; 0x231a <vfprintf+0x36e>
    2302:	8a 2d       	mov	r24, r10
    2304:	86 78       	andi	r24, 0x86	; 134
    2306:	59 f0       	breq	.+22     	; 0x231e <vfprintf+0x372>
    2308:	a1 fe       	sbrs	r10, 1
    230a:	02 c0       	rjmp	.+4      	; 0x2310 <vfprintf+0x364>
    230c:	8b e2       	ldi	r24, 0x2B	; 43
    230e:	01 c0       	rjmp	.+2      	; 0x2312 <vfprintf+0x366>
    2310:	80 e2       	ldi	r24, 0x20	; 32
    2312:	a7 fc       	sbrc	r10, 7
    2314:	8d e2       	ldi	r24, 0x2D	; 45
    2316:	b6 01       	movw	r22, r12
    2318:	90 e0       	ldi	r25, 0x00	; 0
    231a:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    231e:	89 14       	cp	r8, r9
    2320:	38 f4       	brcc	.+14     	; 0x2330 <vfprintf+0x384>
    2322:	b6 01       	movw	r22, r12
    2324:	80 e3       	ldi	r24, 0x30	; 48
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    232c:	9a 94       	dec	r9
    232e:	f7 cf       	rjmp	.-18     	; 0x231e <vfprintf+0x372>
    2330:	8a 94       	dec	r8
    2332:	f3 01       	movw	r30, r6
    2334:	e8 0d       	add	r30, r8
    2336:	f1 1d       	adc	r31, r1
    2338:	80 81       	ld	r24, Z
    233a:	b6 01       	movw	r22, r12
    233c:	90 e0       	ldi	r25, 0x00	; 0
    233e:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    2342:	81 10       	cpse	r8, r1
    2344:	f5 cf       	rjmp	.-22     	; 0x2330 <vfprintf+0x384>
    2346:	22 20       	and	r2, r2
    2348:	09 f4       	brne	.+2      	; 0x234c <vfprintf+0x3a0>
    234a:	42 ce       	rjmp	.-892    	; 0x1fd0 <vfprintf+0x24>
    234c:	b6 01       	movw	r22, r12
    234e:	80 e2       	ldi	r24, 0x20	; 32
    2350:	90 e0       	ldi	r25, 0x00	; 0
    2352:	0e 94 11 13 	call	0x2622	; 0x2622 <fputc>
    2356:	2a 94       	dec	r2
    2358:	f6 cf       	rjmp	.-20     	; 0x2346 <vfprintf+0x39a>
    235a:	f6 01       	movw	r30, r12
    235c:	86 81       	ldd	r24, Z+6	; 0x06
    235e:	97 81       	ldd	r25, Z+7	; 0x07
    2360:	02 c0       	rjmp	.+4      	; 0x2366 <vfprintf+0x3ba>
    2362:	8f ef       	ldi	r24, 0xFF	; 255
    2364:	9f ef       	ldi	r25, 0xFF	; 255
    2366:	2b 96       	adiw	r28, 0x0b	; 11
    2368:	e2 e1       	ldi	r30, 0x12	; 18
    236a:	0c 94 c7 13 	jmp	0x278e	; 0x278e <__epilogue_restores__>

0000236e <calloc>:
    236e:	0f 93       	push	r16
    2370:	1f 93       	push	r17
    2372:	cf 93       	push	r28
    2374:	df 93       	push	r29
    2376:	86 9f       	mul	r24, r22
    2378:	80 01       	movw	r16, r0
    237a:	87 9f       	mul	r24, r23
    237c:	10 0d       	add	r17, r0
    237e:	96 9f       	mul	r25, r22
    2380:	10 0d       	add	r17, r0
    2382:	11 24       	eor	r1, r1
    2384:	c8 01       	movw	r24, r16
    2386:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <malloc>
    238a:	ec 01       	movw	r28, r24
    238c:	00 97       	sbiw	r24, 0x00	; 0
    238e:	29 f0       	breq	.+10     	; 0x239a <calloc+0x2c>
    2390:	a8 01       	movw	r20, r16
    2392:	60 e0       	ldi	r22, 0x00	; 0
    2394:	70 e0       	ldi	r23, 0x00	; 0
    2396:	0e 94 ff 12 	call	0x25fe	; 0x25fe <memset>
    239a:	ce 01       	movw	r24, r28
    239c:	df 91       	pop	r29
    239e:	cf 91       	pop	r28
    23a0:	1f 91       	pop	r17
    23a2:	0f 91       	pop	r16
    23a4:	08 95       	ret

000023a6 <malloc>:
    23a6:	0f 93       	push	r16
    23a8:	1f 93       	push	r17
    23aa:	cf 93       	push	r28
    23ac:	df 93       	push	r29
    23ae:	82 30       	cpi	r24, 0x02	; 2
    23b0:	91 05       	cpc	r25, r1
    23b2:	10 f4       	brcc	.+4      	; 0x23b8 <malloc+0x12>
    23b4:	82 e0       	ldi	r24, 0x02	; 2
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	e0 91 0a 03 	lds	r30, 0x030A	; 0x80030a <__flp>
    23bc:	f0 91 0b 03 	lds	r31, 0x030B	; 0x80030b <__flp+0x1>
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	a0 e0       	ldi	r26, 0x00	; 0
    23c6:	b0 e0       	ldi	r27, 0x00	; 0
    23c8:	30 97       	sbiw	r30, 0x00	; 0
    23ca:	19 f1       	breq	.+70     	; 0x2412 <malloc+0x6c>
    23cc:	40 81       	ld	r20, Z
    23ce:	51 81       	ldd	r21, Z+1	; 0x01
    23d0:	02 81       	ldd	r16, Z+2	; 0x02
    23d2:	13 81       	ldd	r17, Z+3	; 0x03
    23d4:	48 17       	cp	r20, r24
    23d6:	59 07       	cpc	r21, r25
    23d8:	c8 f0       	brcs	.+50     	; 0x240c <malloc+0x66>
    23da:	84 17       	cp	r24, r20
    23dc:	95 07       	cpc	r25, r21
    23de:	69 f4       	brne	.+26     	; 0x23fa <malloc+0x54>
    23e0:	10 97       	sbiw	r26, 0x00	; 0
    23e2:	31 f0       	breq	.+12     	; 0x23f0 <malloc+0x4a>
    23e4:	12 96       	adiw	r26, 0x02	; 2
    23e6:	0c 93       	st	X, r16
    23e8:	12 97       	sbiw	r26, 0x02	; 2
    23ea:	13 96       	adiw	r26, 0x03	; 3
    23ec:	1c 93       	st	X, r17
    23ee:	27 c0       	rjmp	.+78     	; 0x243e <malloc+0x98>
    23f0:	00 93 0a 03 	sts	0x030A, r16	; 0x80030a <__flp>
    23f4:	10 93 0b 03 	sts	0x030B, r17	; 0x80030b <__flp+0x1>
    23f8:	22 c0       	rjmp	.+68     	; 0x243e <malloc+0x98>
    23fa:	21 15       	cp	r18, r1
    23fc:	31 05       	cpc	r19, r1
    23fe:	19 f0       	breq	.+6      	; 0x2406 <malloc+0x60>
    2400:	42 17       	cp	r20, r18
    2402:	53 07       	cpc	r21, r19
    2404:	18 f4       	brcc	.+6      	; 0x240c <malloc+0x66>
    2406:	9a 01       	movw	r18, r20
    2408:	bd 01       	movw	r22, r26
    240a:	ef 01       	movw	r28, r30
    240c:	df 01       	movw	r26, r30
    240e:	f8 01       	movw	r30, r16
    2410:	db cf       	rjmp	.-74     	; 0x23c8 <malloc+0x22>
    2412:	21 15       	cp	r18, r1
    2414:	31 05       	cpc	r19, r1
    2416:	f9 f0       	breq	.+62     	; 0x2456 <malloc+0xb0>
    2418:	28 1b       	sub	r18, r24
    241a:	39 0b       	sbc	r19, r25
    241c:	24 30       	cpi	r18, 0x04	; 4
    241e:	31 05       	cpc	r19, r1
    2420:	80 f4       	brcc	.+32     	; 0x2442 <malloc+0x9c>
    2422:	8a 81       	ldd	r24, Y+2	; 0x02
    2424:	9b 81       	ldd	r25, Y+3	; 0x03
    2426:	61 15       	cp	r22, r1
    2428:	71 05       	cpc	r23, r1
    242a:	21 f0       	breq	.+8      	; 0x2434 <malloc+0x8e>
    242c:	fb 01       	movw	r30, r22
    242e:	93 83       	std	Z+3, r25	; 0x03
    2430:	82 83       	std	Z+2, r24	; 0x02
    2432:	04 c0       	rjmp	.+8      	; 0x243c <malloc+0x96>
    2434:	90 93 0b 03 	sts	0x030B, r25	; 0x80030b <__flp+0x1>
    2438:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <__flp>
    243c:	fe 01       	movw	r30, r28
    243e:	32 96       	adiw	r30, 0x02	; 2
    2440:	44 c0       	rjmp	.+136    	; 0x24ca <malloc+0x124>
    2442:	fe 01       	movw	r30, r28
    2444:	e2 0f       	add	r30, r18
    2446:	f3 1f       	adc	r31, r19
    2448:	81 93       	st	Z+, r24
    244a:	91 93       	st	Z+, r25
    244c:	22 50       	subi	r18, 0x02	; 2
    244e:	31 09       	sbc	r19, r1
    2450:	39 83       	std	Y+1, r19	; 0x01
    2452:	28 83       	st	Y, r18
    2454:	3a c0       	rjmp	.+116    	; 0x24ca <malloc+0x124>
    2456:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <__brkval>
    245a:	30 91 09 03 	lds	r19, 0x0309	; 0x800309 <__brkval+0x1>
    245e:	23 2b       	or	r18, r19
    2460:	41 f4       	brne	.+16     	; 0x2472 <malloc+0xcc>
    2462:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    2466:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    246a:	30 93 09 03 	sts	0x0309, r19	; 0x800309 <__brkval+0x1>
    246e:	20 93 08 03 	sts	0x0308, r18	; 0x800308 <__brkval>
    2472:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    2476:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    247a:	21 15       	cp	r18, r1
    247c:	31 05       	cpc	r19, r1
    247e:	41 f4       	brne	.+16     	; 0x2490 <malloc+0xea>
    2480:	2d b7       	in	r18, 0x3d	; 61
    2482:	3e b7       	in	r19, 0x3e	; 62
    2484:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    2488:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    248c:	24 1b       	sub	r18, r20
    248e:	35 0b       	sbc	r19, r21
    2490:	e0 91 08 03 	lds	r30, 0x0308	; 0x800308 <__brkval>
    2494:	f0 91 09 03 	lds	r31, 0x0309	; 0x800309 <__brkval+0x1>
    2498:	e2 17       	cp	r30, r18
    249a:	f3 07       	cpc	r31, r19
    249c:	a0 f4       	brcc	.+40     	; 0x24c6 <malloc+0x120>
    249e:	2e 1b       	sub	r18, r30
    24a0:	3f 0b       	sbc	r19, r31
    24a2:	28 17       	cp	r18, r24
    24a4:	39 07       	cpc	r19, r25
    24a6:	78 f0       	brcs	.+30     	; 0x24c6 <malloc+0x120>
    24a8:	ac 01       	movw	r20, r24
    24aa:	4e 5f       	subi	r20, 0xFE	; 254
    24ac:	5f 4f       	sbci	r21, 0xFF	; 255
    24ae:	24 17       	cp	r18, r20
    24b0:	35 07       	cpc	r19, r21
    24b2:	48 f0       	brcs	.+18     	; 0x24c6 <malloc+0x120>
    24b4:	4e 0f       	add	r20, r30
    24b6:	5f 1f       	adc	r21, r31
    24b8:	50 93 09 03 	sts	0x0309, r21	; 0x800309 <__brkval+0x1>
    24bc:	40 93 08 03 	sts	0x0308, r20	; 0x800308 <__brkval>
    24c0:	81 93       	st	Z+, r24
    24c2:	91 93       	st	Z+, r25
    24c4:	02 c0       	rjmp	.+4      	; 0x24ca <malloc+0x124>
    24c6:	e0 e0       	ldi	r30, 0x00	; 0
    24c8:	f0 e0       	ldi	r31, 0x00	; 0
    24ca:	cf 01       	movw	r24, r30
    24cc:	df 91       	pop	r29
    24ce:	cf 91       	pop	r28
    24d0:	1f 91       	pop	r17
    24d2:	0f 91       	pop	r16
    24d4:	08 95       	ret

000024d6 <free>:
    24d6:	cf 93       	push	r28
    24d8:	df 93       	push	r29
    24da:	00 97       	sbiw	r24, 0x00	; 0
    24dc:	09 f4       	brne	.+2      	; 0x24e0 <free+0xa>
    24de:	81 c0       	rjmp	.+258    	; 0x25e2 <free+0x10c>
    24e0:	fc 01       	movw	r30, r24
    24e2:	32 97       	sbiw	r30, 0x02	; 2
    24e4:	13 82       	std	Z+3, r1	; 0x03
    24e6:	12 82       	std	Z+2, r1	; 0x02
    24e8:	a0 91 0a 03 	lds	r26, 0x030A	; 0x80030a <__flp>
    24ec:	b0 91 0b 03 	lds	r27, 0x030B	; 0x80030b <__flp+0x1>
    24f0:	10 97       	sbiw	r26, 0x00	; 0
    24f2:	81 f4       	brne	.+32     	; 0x2514 <free+0x3e>
    24f4:	20 81       	ld	r18, Z
    24f6:	31 81       	ldd	r19, Z+1	; 0x01
    24f8:	82 0f       	add	r24, r18
    24fa:	93 1f       	adc	r25, r19
    24fc:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <__brkval>
    2500:	30 91 09 03 	lds	r19, 0x0309	; 0x800309 <__brkval+0x1>
    2504:	28 17       	cp	r18, r24
    2506:	39 07       	cpc	r19, r25
    2508:	51 f5       	brne	.+84     	; 0x255e <free+0x88>
    250a:	f0 93 09 03 	sts	0x0309, r31	; 0x800309 <__brkval+0x1>
    250e:	e0 93 08 03 	sts	0x0308, r30	; 0x800308 <__brkval>
    2512:	67 c0       	rjmp	.+206    	; 0x25e2 <free+0x10c>
    2514:	ed 01       	movw	r28, r26
    2516:	20 e0       	ldi	r18, 0x00	; 0
    2518:	30 e0       	ldi	r19, 0x00	; 0
    251a:	ce 17       	cp	r28, r30
    251c:	df 07       	cpc	r29, r31
    251e:	40 f4       	brcc	.+16     	; 0x2530 <free+0x5a>
    2520:	4a 81       	ldd	r20, Y+2	; 0x02
    2522:	5b 81       	ldd	r21, Y+3	; 0x03
    2524:	9e 01       	movw	r18, r28
    2526:	41 15       	cp	r20, r1
    2528:	51 05       	cpc	r21, r1
    252a:	f1 f0       	breq	.+60     	; 0x2568 <free+0x92>
    252c:	ea 01       	movw	r28, r20
    252e:	f5 cf       	rjmp	.-22     	; 0x251a <free+0x44>
    2530:	d3 83       	std	Z+3, r29	; 0x03
    2532:	c2 83       	std	Z+2, r28	; 0x02
    2534:	40 81       	ld	r20, Z
    2536:	51 81       	ldd	r21, Z+1	; 0x01
    2538:	84 0f       	add	r24, r20
    253a:	95 1f       	adc	r25, r21
    253c:	c8 17       	cp	r28, r24
    253e:	d9 07       	cpc	r29, r25
    2540:	59 f4       	brne	.+22     	; 0x2558 <free+0x82>
    2542:	88 81       	ld	r24, Y
    2544:	99 81       	ldd	r25, Y+1	; 0x01
    2546:	84 0f       	add	r24, r20
    2548:	95 1f       	adc	r25, r21
    254a:	02 96       	adiw	r24, 0x02	; 2
    254c:	91 83       	std	Z+1, r25	; 0x01
    254e:	80 83       	st	Z, r24
    2550:	8a 81       	ldd	r24, Y+2	; 0x02
    2552:	9b 81       	ldd	r25, Y+3	; 0x03
    2554:	93 83       	std	Z+3, r25	; 0x03
    2556:	82 83       	std	Z+2, r24	; 0x02
    2558:	21 15       	cp	r18, r1
    255a:	31 05       	cpc	r19, r1
    255c:	29 f4       	brne	.+10     	; 0x2568 <free+0x92>
    255e:	f0 93 0b 03 	sts	0x030B, r31	; 0x80030b <__flp+0x1>
    2562:	e0 93 0a 03 	sts	0x030A, r30	; 0x80030a <__flp>
    2566:	3d c0       	rjmp	.+122    	; 0x25e2 <free+0x10c>
    2568:	e9 01       	movw	r28, r18
    256a:	fb 83       	std	Y+3, r31	; 0x03
    256c:	ea 83       	std	Y+2, r30	; 0x02
    256e:	49 91       	ld	r20, Y+
    2570:	59 91       	ld	r21, Y+
    2572:	c4 0f       	add	r28, r20
    2574:	d5 1f       	adc	r29, r21
    2576:	ec 17       	cp	r30, r28
    2578:	fd 07       	cpc	r31, r29
    257a:	61 f4       	brne	.+24     	; 0x2594 <free+0xbe>
    257c:	80 81       	ld	r24, Z
    257e:	91 81       	ldd	r25, Z+1	; 0x01
    2580:	84 0f       	add	r24, r20
    2582:	95 1f       	adc	r25, r21
    2584:	02 96       	adiw	r24, 0x02	; 2
    2586:	e9 01       	movw	r28, r18
    2588:	99 83       	std	Y+1, r25	; 0x01
    258a:	88 83       	st	Y, r24
    258c:	82 81       	ldd	r24, Z+2	; 0x02
    258e:	93 81       	ldd	r25, Z+3	; 0x03
    2590:	9b 83       	std	Y+3, r25	; 0x03
    2592:	8a 83       	std	Y+2, r24	; 0x02
    2594:	e0 e0       	ldi	r30, 0x00	; 0
    2596:	f0 e0       	ldi	r31, 0x00	; 0
    2598:	12 96       	adiw	r26, 0x02	; 2
    259a:	8d 91       	ld	r24, X+
    259c:	9c 91       	ld	r25, X
    259e:	13 97       	sbiw	r26, 0x03	; 3
    25a0:	00 97       	sbiw	r24, 0x00	; 0
    25a2:	19 f0       	breq	.+6      	; 0x25aa <free+0xd4>
    25a4:	fd 01       	movw	r30, r26
    25a6:	dc 01       	movw	r26, r24
    25a8:	f7 cf       	rjmp	.-18     	; 0x2598 <free+0xc2>
    25aa:	8d 91       	ld	r24, X+
    25ac:	9c 91       	ld	r25, X
    25ae:	11 97       	sbiw	r26, 0x01	; 1
    25b0:	9d 01       	movw	r18, r26
    25b2:	2e 5f       	subi	r18, 0xFE	; 254
    25b4:	3f 4f       	sbci	r19, 0xFF	; 255
    25b6:	82 0f       	add	r24, r18
    25b8:	93 1f       	adc	r25, r19
    25ba:	20 91 08 03 	lds	r18, 0x0308	; 0x800308 <__brkval>
    25be:	30 91 09 03 	lds	r19, 0x0309	; 0x800309 <__brkval+0x1>
    25c2:	28 17       	cp	r18, r24
    25c4:	39 07       	cpc	r19, r25
    25c6:	69 f4       	brne	.+26     	; 0x25e2 <free+0x10c>
    25c8:	30 97       	sbiw	r30, 0x00	; 0
    25ca:	29 f4       	brne	.+10     	; 0x25d6 <free+0x100>
    25cc:	10 92 0b 03 	sts	0x030B, r1	; 0x80030b <__flp+0x1>
    25d0:	10 92 0a 03 	sts	0x030A, r1	; 0x80030a <__flp>
    25d4:	02 c0       	rjmp	.+4      	; 0x25da <free+0x104>
    25d6:	13 82       	std	Z+3, r1	; 0x03
    25d8:	12 82       	std	Z+2, r1	; 0x02
    25da:	b0 93 09 03 	sts	0x0309, r27	; 0x800309 <__brkval+0x1>
    25de:	a0 93 08 03 	sts	0x0308, r26	; 0x800308 <__brkval>
    25e2:	df 91       	pop	r29
    25e4:	cf 91       	pop	r28
    25e6:	08 95       	ret

000025e8 <strnlen_P>:
    25e8:	fc 01       	movw	r30, r24
    25ea:	05 90       	lpm	r0, Z+
    25ec:	61 50       	subi	r22, 0x01	; 1
    25ee:	70 40       	sbci	r23, 0x00	; 0
    25f0:	01 10       	cpse	r0, r1
    25f2:	d8 f7       	brcc	.-10     	; 0x25ea <strnlen_P+0x2>
    25f4:	80 95       	com	r24
    25f6:	90 95       	com	r25
    25f8:	8e 0f       	add	r24, r30
    25fa:	9f 1f       	adc	r25, r31
    25fc:	08 95       	ret

000025fe <memset>:
    25fe:	dc 01       	movw	r26, r24
    2600:	01 c0       	rjmp	.+2      	; 0x2604 <memset+0x6>
    2602:	6d 93       	st	X+, r22
    2604:	41 50       	subi	r20, 0x01	; 1
    2606:	50 40       	sbci	r21, 0x00	; 0
    2608:	e0 f7       	brcc	.-8      	; 0x2602 <memset+0x4>
    260a:	08 95       	ret

0000260c <strnlen>:
    260c:	fc 01       	movw	r30, r24
    260e:	61 50       	subi	r22, 0x01	; 1
    2610:	70 40       	sbci	r23, 0x00	; 0
    2612:	01 90       	ld	r0, Z+
    2614:	01 10       	cpse	r0, r1
    2616:	d8 f7       	brcc	.-10     	; 0x260e <strnlen+0x2>
    2618:	80 95       	com	r24
    261a:	90 95       	com	r25
    261c:	8e 0f       	add	r24, r30
    261e:	9f 1f       	adc	r25, r31
    2620:	08 95       	ret

00002622 <fputc>:
    2622:	0f 93       	push	r16
    2624:	1f 93       	push	r17
    2626:	cf 93       	push	r28
    2628:	df 93       	push	r29
    262a:	fb 01       	movw	r30, r22
    262c:	23 81       	ldd	r18, Z+3	; 0x03
    262e:	21 fd       	sbrc	r18, 1
    2630:	03 c0       	rjmp	.+6      	; 0x2638 <fputc+0x16>
    2632:	8f ef       	ldi	r24, 0xFF	; 255
    2634:	9f ef       	ldi	r25, 0xFF	; 255
    2636:	2c c0       	rjmp	.+88     	; 0x2690 <fputc+0x6e>
    2638:	22 ff       	sbrs	r18, 2
    263a:	16 c0       	rjmp	.+44     	; 0x2668 <fputc+0x46>
    263c:	46 81       	ldd	r20, Z+6	; 0x06
    263e:	57 81       	ldd	r21, Z+7	; 0x07
    2640:	24 81       	ldd	r18, Z+4	; 0x04
    2642:	35 81       	ldd	r19, Z+5	; 0x05
    2644:	42 17       	cp	r20, r18
    2646:	53 07       	cpc	r21, r19
    2648:	44 f4       	brge	.+16     	; 0x265a <fputc+0x38>
    264a:	a0 81       	ld	r26, Z
    264c:	b1 81       	ldd	r27, Z+1	; 0x01
    264e:	9d 01       	movw	r18, r26
    2650:	2f 5f       	subi	r18, 0xFF	; 255
    2652:	3f 4f       	sbci	r19, 0xFF	; 255
    2654:	31 83       	std	Z+1, r19	; 0x01
    2656:	20 83       	st	Z, r18
    2658:	8c 93       	st	X, r24
    265a:	26 81       	ldd	r18, Z+6	; 0x06
    265c:	37 81       	ldd	r19, Z+7	; 0x07
    265e:	2f 5f       	subi	r18, 0xFF	; 255
    2660:	3f 4f       	sbci	r19, 0xFF	; 255
    2662:	37 83       	std	Z+7, r19	; 0x07
    2664:	26 83       	std	Z+6, r18	; 0x06
    2666:	14 c0       	rjmp	.+40     	; 0x2690 <fputc+0x6e>
    2668:	8b 01       	movw	r16, r22
    266a:	ec 01       	movw	r28, r24
    266c:	fb 01       	movw	r30, r22
    266e:	00 84       	ldd	r0, Z+8	; 0x08
    2670:	f1 85       	ldd	r31, Z+9	; 0x09
    2672:	e0 2d       	mov	r30, r0
    2674:	09 95       	icall
    2676:	89 2b       	or	r24, r25
    2678:	e1 f6       	brne	.-72     	; 0x2632 <fputc+0x10>
    267a:	d8 01       	movw	r26, r16
    267c:	16 96       	adiw	r26, 0x06	; 6
    267e:	8d 91       	ld	r24, X+
    2680:	9c 91       	ld	r25, X
    2682:	17 97       	sbiw	r26, 0x07	; 7
    2684:	01 96       	adiw	r24, 0x01	; 1
    2686:	17 96       	adiw	r26, 0x07	; 7
    2688:	9c 93       	st	X, r25
    268a:	8e 93       	st	-X, r24
    268c:	16 97       	sbiw	r26, 0x06	; 6
    268e:	ce 01       	movw	r24, r28
    2690:	df 91       	pop	r29
    2692:	cf 91       	pop	r28
    2694:	1f 91       	pop	r17
    2696:	0f 91       	pop	r16
    2698:	08 95       	ret

0000269a <__ultoa_invert>:
    269a:	fa 01       	movw	r30, r20
    269c:	aa 27       	eor	r26, r26
    269e:	28 30       	cpi	r18, 0x08	; 8
    26a0:	51 f1       	breq	.+84     	; 0x26f6 <__ultoa_invert+0x5c>
    26a2:	20 31       	cpi	r18, 0x10	; 16
    26a4:	81 f1       	breq	.+96     	; 0x2706 <__ultoa_invert+0x6c>
    26a6:	e8 94       	clt
    26a8:	6f 93       	push	r22
    26aa:	6e 7f       	andi	r22, 0xFE	; 254
    26ac:	6e 5f       	subi	r22, 0xFE	; 254
    26ae:	7f 4f       	sbci	r23, 0xFF	; 255
    26b0:	8f 4f       	sbci	r24, 0xFF	; 255
    26b2:	9f 4f       	sbci	r25, 0xFF	; 255
    26b4:	af 4f       	sbci	r26, 0xFF	; 255
    26b6:	b1 e0       	ldi	r27, 0x01	; 1
    26b8:	3e d0       	rcall	.+124    	; 0x2736 <__ultoa_invert+0x9c>
    26ba:	b4 e0       	ldi	r27, 0x04	; 4
    26bc:	3c d0       	rcall	.+120    	; 0x2736 <__ultoa_invert+0x9c>
    26be:	67 0f       	add	r22, r23
    26c0:	78 1f       	adc	r23, r24
    26c2:	89 1f       	adc	r24, r25
    26c4:	9a 1f       	adc	r25, r26
    26c6:	a1 1d       	adc	r26, r1
    26c8:	68 0f       	add	r22, r24
    26ca:	79 1f       	adc	r23, r25
    26cc:	8a 1f       	adc	r24, r26
    26ce:	91 1d       	adc	r25, r1
    26d0:	a1 1d       	adc	r26, r1
    26d2:	6a 0f       	add	r22, r26
    26d4:	71 1d       	adc	r23, r1
    26d6:	81 1d       	adc	r24, r1
    26d8:	91 1d       	adc	r25, r1
    26da:	a1 1d       	adc	r26, r1
    26dc:	20 d0       	rcall	.+64     	; 0x271e <__ultoa_invert+0x84>
    26de:	09 f4       	brne	.+2      	; 0x26e2 <__ultoa_invert+0x48>
    26e0:	68 94       	set
    26e2:	3f 91       	pop	r19
    26e4:	2a e0       	ldi	r18, 0x0A	; 10
    26e6:	26 9f       	mul	r18, r22
    26e8:	11 24       	eor	r1, r1
    26ea:	30 19       	sub	r19, r0
    26ec:	30 5d       	subi	r19, 0xD0	; 208
    26ee:	31 93       	st	Z+, r19
    26f0:	de f6       	brtc	.-74     	; 0x26a8 <__ultoa_invert+0xe>
    26f2:	cf 01       	movw	r24, r30
    26f4:	08 95       	ret
    26f6:	46 2f       	mov	r20, r22
    26f8:	47 70       	andi	r20, 0x07	; 7
    26fa:	40 5d       	subi	r20, 0xD0	; 208
    26fc:	41 93       	st	Z+, r20
    26fe:	b3 e0       	ldi	r27, 0x03	; 3
    2700:	0f d0       	rcall	.+30     	; 0x2720 <__ultoa_invert+0x86>
    2702:	c9 f7       	brne	.-14     	; 0x26f6 <__ultoa_invert+0x5c>
    2704:	f6 cf       	rjmp	.-20     	; 0x26f2 <__ultoa_invert+0x58>
    2706:	46 2f       	mov	r20, r22
    2708:	4f 70       	andi	r20, 0x0F	; 15
    270a:	40 5d       	subi	r20, 0xD0	; 208
    270c:	4a 33       	cpi	r20, 0x3A	; 58
    270e:	18 f0       	brcs	.+6      	; 0x2716 <__ultoa_invert+0x7c>
    2710:	49 5d       	subi	r20, 0xD9	; 217
    2712:	31 fd       	sbrc	r19, 1
    2714:	40 52       	subi	r20, 0x20	; 32
    2716:	41 93       	st	Z+, r20
    2718:	02 d0       	rcall	.+4      	; 0x271e <__ultoa_invert+0x84>
    271a:	a9 f7       	brne	.-22     	; 0x2706 <__ultoa_invert+0x6c>
    271c:	ea cf       	rjmp	.-44     	; 0x26f2 <__ultoa_invert+0x58>
    271e:	b4 e0       	ldi	r27, 0x04	; 4
    2720:	a6 95       	lsr	r26
    2722:	97 95       	ror	r25
    2724:	87 95       	ror	r24
    2726:	77 95       	ror	r23
    2728:	67 95       	ror	r22
    272a:	ba 95       	dec	r27
    272c:	c9 f7       	brne	.-14     	; 0x2720 <__ultoa_invert+0x86>
    272e:	00 97       	sbiw	r24, 0x00	; 0
    2730:	61 05       	cpc	r22, r1
    2732:	71 05       	cpc	r23, r1
    2734:	08 95       	ret
    2736:	9b 01       	movw	r18, r22
    2738:	ac 01       	movw	r20, r24
    273a:	0a 2e       	mov	r0, r26
    273c:	06 94       	lsr	r0
    273e:	57 95       	ror	r21
    2740:	47 95       	ror	r20
    2742:	37 95       	ror	r19
    2744:	27 95       	ror	r18
    2746:	ba 95       	dec	r27
    2748:	c9 f7       	brne	.-14     	; 0x273c <__ultoa_invert+0xa2>
    274a:	62 0f       	add	r22, r18
    274c:	73 1f       	adc	r23, r19
    274e:	84 1f       	adc	r24, r20
    2750:	95 1f       	adc	r25, r21
    2752:	a0 1d       	adc	r26, r0
    2754:	08 95       	ret

00002756 <__prologue_saves__>:
    2756:	2f 92       	push	r2
    2758:	3f 92       	push	r3
    275a:	4f 92       	push	r4
    275c:	5f 92       	push	r5
    275e:	6f 92       	push	r6
    2760:	7f 92       	push	r7
    2762:	8f 92       	push	r8
    2764:	9f 92       	push	r9
    2766:	af 92       	push	r10
    2768:	bf 92       	push	r11
    276a:	cf 92       	push	r12
    276c:	df 92       	push	r13
    276e:	ef 92       	push	r14
    2770:	ff 92       	push	r15
    2772:	0f 93       	push	r16
    2774:	1f 93       	push	r17
    2776:	cf 93       	push	r28
    2778:	df 93       	push	r29
    277a:	cd b7       	in	r28, 0x3d	; 61
    277c:	de b7       	in	r29, 0x3e	; 62
    277e:	ca 1b       	sub	r28, r26
    2780:	db 0b       	sbc	r29, r27
    2782:	0f b6       	in	r0, 0x3f	; 63
    2784:	f8 94       	cli
    2786:	de bf       	out	0x3e, r29	; 62
    2788:	0f be       	out	0x3f, r0	; 63
    278a:	cd bf       	out	0x3d, r28	; 61
    278c:	09 94       	ijmp

0000278e <__epilogue_restores__>:
    278e:	2a 88       	ldd	r2, Y+18	; 0x12
    2790:	39 88       	ldd	r3, Y+17	; 0x11
    2792:	48 88       	ldd	r4, Y+16	; 0x10
    2794:	5f 84       	ldd	r5, Y+15	; 0x0f
    2796:	6e 84       	ldd	r6, Y+14	; 0x0e
    2798:	7d 84       	ldd	r7, Y+13	; 0x0d
    279a:	8c 84       	ldd	r8, Y+12	; 0x0c
    279c:	9b 84       	ldd	r9, Y+11	; 0x0b
    279e:	aa 84       	ldd	r10, Y+10	; 0x0a
    27a0:	b9 84       	ldd	r11, Y+9	; 0x09
    27a2:	c8 84       	ldd	r12, Y+8	; 0x08
    27a4:	df 80       	ldd	r13, Y+7	; 0x07
    27a6:	ee 80       	ldd	r14, Y+6	; 0x06
    27a8:	fd 80       	ldd	r15, Y+5	; 0x05
    27aa:	0c 81       	ldd	r16, Y+4	; 0x04
    27ac:	1b 81       	ldd	r17, Y+3	; 0x03
    27ae:	aa 81       	ldd	r26, Y+2	; 0x02
    27b0:	b9 81       	ldd	r27, Y+1	; 0x01
    27b2:	ce 0f       	add	r28, r30
    27b4:	d1 1d       	adc	r29, r1
    27b6:	0f b6       	in	r0, 0x3f	; 63
    27b8:	f8 94       	cli
    27ba:	de bf       	out	0x3e, r29	; 62
    27bc:	0f be       	out	0x3f, r0	; 63
    27be:	cd bf       	out	0x3d, r28	; 61
    27c0:	ed 01       	movw	r28, r26
    27c2:	08 95       	ret

000027c4 <_exit>:
    27c4:	f8 94       	cli

000027c6 <__stop_program>:
    27c6:	ff cf       	rjmp	.-2      	; 0x27c6 <__stop_program>
